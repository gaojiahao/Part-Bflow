{"version":3,"sources":["webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/constants/constants.js","webpack:///src/components/poptip/MyPopTip.vue","webpack:///./src/components/poptip/MyPopTip.vue?1eb0","webpack:///./src/components/poptip/MyPopTip.vue","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/record/list.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/presence/presence-handler.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/record/anonymous-record.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/utils/resubscribe-notifier.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/record/record-handler.js","webpack:///./node_modules/.1.3.5@component-emitter2/index.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/message/message-parser.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/record/json-path.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/event/event-handler.js","webpack:///./node_modules/.0.2.1@querystring-es3/index.js","webpack:///./node_modules/.1.4.1@punycode/punycode.js","webpack:///./src/styles/login_bg.jpg","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/rpc/rpc-handler.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/rpc/rpc.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/record/record.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/message/message-builder.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/utils/listener.js","webpack:///src/components/pulsegraph/TaskModal.vue","webpack:///./src/components/pulsegraph/TaskModal.vue?497d","webpack:///./src/components/pulsegraph/TaskModal.vue","webpack:///src/views/flow/circularGraph.vue","webpack:///./src/views/flow/circularGraph.vue?c535","webpack:///./src/views/flow/circularGraph.vue","webpack:///src/views/flow/pulseGraph.vue","webpack:///./src/views/flow/pulseGraph.vue?50d7","webpack:///./src/views/flow/pulseGraph.vue","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/client.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/utils/ack-timeout-registry.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/default-options.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/message/connection.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/constants/merge-strategies.js","webpack:///./node_modules/.0.11.0@url/util.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/rpc/rpc-response.js","webpack:///./node_modules/.0.2.1@querystring-es3/decode.js","webpack:///src/components/card/CardItem.vue","webpack:///./src/components/card/CardItem.vue?e3b3","webpack:///./src/components/card/CardItem.vue","webpack:///src/components/card/CardList.vue","webpack:///./src/components/card/CardList.vue?3da8","webpack:///./src/components/card/CardList.vue","webpack:///src/views/home/HomePage.vue","webpack:///./src/views/home/HomePage.vue?226b","webpack:///./src/views/home/HomePage.vue","webpack:///./node_modules/.0.2.1@querystring-es3/encode.js","webpack:///./node_modules/.0.11.0@url/url.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/utils/single-notifier.js","webpack:///./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/utils/utils.js"],"names":["exports","CONNECTION_STATE","CLOSED","AWAITING_CONNECTION","CHALLENGING","AWAITING_AUTHENTICATION","AUTHENTICATING","OPEN","ERROR","RECONNECTING","MESSAGE_SEPERATOR","String","fromCharCode","MESSAGE_PART_SEPERATOR","TYPES","STRING","OBJECT","NUMBER","NULL","TRUE","FALSE","UNDEFINED","TOPIC","CONNECTION","AUTH","EVENT","RECORD","RPC","PRESENCE","PRIVATE","CONNECTION_ERROR","CONNECTION_STATE_CHANGED","MAX_RECONNECTION_ATTEMPTS_REACHED","CONNECTION_AUTHENTICATION_TIMEOUT","ACK_TIMEOUT","NO_RPC_PROVIDER","RESPONSE_TIMEOUT","DELETE_TIMEOUT","UNSOLICITED_MESSAGE","MESSAGE_DENIED","MESSAGE_PARSE_ERROR","VERSION_EXISTS","NOT_AUTHENTICATED","MESSAGE_PERMISSION_ERROR","LISTENER_EXISTS","NOT_LISTENING","TOO_MANY_AUTH_ATTEMPTS","INVALID_AUTH_MSG","IS_CLOSED","RECORD_NOT_FOUND","NOT_SUBSCRIBED","ACTIONS","PING","PONG","ACK","REDIRECT","CHALLENGE","CHALLENGE_RESPONSE","READ","CREATE","UPDATE","PATCH","DELETE","SUBSCRIBE","UNSUBSCRIBE","HAS","SNAPSHOT","INVOKE","SUBSCRIPTION_FOR_PATTERN_FOUND","SUBSCRIPTION_FOR_PATTERN_REMOVED","SUBSCRIPTION_HAS_PROVIDER","LISTEN","UNLISTEN","LISTEN_ACCEPT","LISTEN_REJECT","PROVIDER_UPDATE","QUERY","CREATEORREAD","CREATEANDUPDATE","REQUEST","RESPONSE","REJECTION","PRESENCE_JOIN","PRESENCE_LEAVE","WRITE_ACKNOWLEDGEMENT","CALL_STATE","INITIAL","CONNECTING","ESTABLISHED","ACCEPTED","DECLINED","ENDED","MyPopTip","props","userInfo","Object","trigger","type","default","data","errorImg01","__webpack_require__","methods","poptip_MyPopTip","render","_vm","this","_h","$createElement","_c","_self","attrs","placement","transfer","_t","_v","slot","staticClass","src","onerror","_s","nickname","staticStyle","color","groupName","mobile","email","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","EventEmitter","Record","C","List","recordHandler","name","options","length","Error","_recordHandler","_record","getRecord","_applyUpdate","bind","on","emit","_onDiscard","_onReady","isDestroyed","isReady","_queuedMethods","_beforeStructure","_hasAddListener","_hasRemoveListener","_hasMoveListener","delete","discard","whenReady","prototype","getEntries","entries","get","Array","isEmpty","setEntries","errorMsg","i","push","_beforeChange","set","_afterChange","removeEntry","entry","index","currentEntries","hasIndex","_hasIndex","addEntry","splice","subscribe","parameters","_normalizeArguments","arguments","path","listCallback","callback","wrappedCallback","unsubscribe","message","action","charAt","call","undefined","isNaN","listeners","_getStructure","after","before","structure","module","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","ResubscribeNotifier","validateArguments","userId","defaultAction","PresenceHandler","connection","client","instance","TypeError","_classCallCheck","_options","_connection","_client","_queryEmitter","_subscribeEmitter","_ackTimeoutRegistry","_$getAckTimeoutRegistry","_resubscribeNotifier","_resubscribe","_counter","_flush","_flushTimeout","_pendingSubscribes","_pendingUnsubscribes","value","users","sendMsg","once","queryId","args","hasListeners","_sendGlobalSubscription","setTimeout","off","remove","processedError","_$onError","clear","JSON","parse","e","callbacks","keys","_callbacks","indexOf","_sendSubscriptionBulk","pendingSubscribes","pendingUnsubscribes","names","correlationId","add","topic","AnonymousRecord","_subscriptions","_proxyMethod","triggerNow","subscriptions","setName","recordName","methodName","_callMethodOnRecord","slice","apply","resubscribe","_isReconnecting","_connectionStateChangeHandler","_handleConnectionStateChanges","destroy","removeListener","state","getConnectionState","Listener","SingleNotifier","messageParser","messageBuilder","RecordHandler","_records","_lists","_listener","_writeCallbacks","_destroyEventEmitter","_hasRegistry","recordReadTimeout","_snapshotRegistry","recordOptions","_onRecordError","_onDestroyPending","_removeRecord","usages","getList","getAnonymousRecord","listen","pattern","destroyPending","unlisten","listener","sendDestroy","snapshot","request","has","setData","pathOrData","dataOrCallback","cb","record","recordData","typed","config","writeSuccess","_$handle","_$onMessage","recieve","processed","hasRequest","convertTyped","_handleWriteAcknowledgements","error","onMessage","Emitter","mixin","addEventListener","event","fn","create","removeAllListeners","removeEventListener","len","eventNames","MessageParser","_actions","_getActions","parsedMessages","rawMessages","split","_parseMessage","substr","toString","parseFloat","actions","parts","messageObject","raw","utils","PARTS_REG_EXP","cache","patch","oldValue","newValue","deepCopy","j","isArray","arr","_value","tokenize","match","tokens","result","shallowCopy","node","EventHandler","_emitter","eventName","decode","encode","stringify","__WEBPACK_AMD_DEFINE_RESULT__","root","nodeType","freeGlobal","global","window","self","punycode","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","floor","Math","stringFromCharCode","RangeError","map","array","mapDomain","string","replace","join","ucs2decode","extra","output","counter","charCodeAt","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","input","out","basic","oldi","w","t","baseMinusT","codePoint","inputLength","n","bias","lastIndexOf","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","version","ucs2","toASCII","test","toUnicode","toLowerCase","p","RpcResponse","Rpc","RpcHandler","_rpcs","_providers","_reprovide","provide","unprovide","make","uid","getUid","typedData","_getRpc","rpcName","rawMessage","rpc","_respondToRpc","response","ack","respond","_callback","_ackTimeout","timeout","rpcAckTimeout","_responseTimeout","rpcResponseTimeout","ackId","convertedData","_complete","jsonPath","_recordOptions","hasProvider","_$data","_eventEmitter","_queuedMethodCalls","_mergeStrategy","mergeStrategy","setMergeStrategy","_sendRead","_readAckTimeout","recordReadAckTimeout","recordDeepCopy","_checkDestroyed","method","errorMessage","isConnected","requestIdleCallback","_setUpCallback","_sendUpdate","_applyChange","_this","pathOrCallback","_this2","_discardTimeout","_this3","_deleteAckTimeout","recordDeleteTimeout","_onRead","_processAckMessage","_recoverRecord","_clearTimeouts","versions","remoteVersion","remoteData","_onRecordRecovered","msgData","oldVersion","deepEquals","acknowledgedAction","_destroy","parseInt","_setReady","currentVersion","newVersion","Number","newData","oldData","paths","silent","SEP","getMsg","sendData","_topic","_pattern","_sendListen","accept","reject","_createCallbackResponse","TaskModal","columns","title","sortable","width","h","params","href","row","transCode","inputTime","date","Date","y","getFullYear","getMonth","d","getDate","getHours","minute","getMinutes","second","getSeconds","formatDateTime","crtTime","columnData","loading","pageTotal","pageSize","currentPage","modelState","filterData","creatorName","assigneeName","nodeName","expand","expandValue","expandIcon","watch","listId","handler","getTaskList","modal","changeCurrentPage","page","limit","filter","f","flowService","then","res","total","tableContent","handleSort","column","order","modalVisibleChange","$emit","clearInputValue","filterTaskBtn","expandCrtTime","pulsegraph_TaskModal","taskValue","closable","on-visible-change","model","$$v","expression","position","margin-left","placeholder","$set","directives","rawName","format","size","click","domProps","innerHTML","stripe","on-sort-change","margin","float","current","page-size","show-total","show-elevator","on-change","components_pulsegraph_TaskModal","echarts","circularGraph","nodes","links","groupLength","dataItem","drawECharts","myChart","init","document","getElementById","redirectTo","symbol","categories","item","forEach","category","draggable","icon","option","tooltip","clickable","legend","a","animationDuration","animationDurationUpdate","animationEasingUpdate","series","height","top","layout","circular","rotateLabel","edgeSymbol","label","normal","formatter","lineStyle","curveness","force","repulsion","setOption","param","seriesIndex","url","postMessage","created","that","caseId","child","concat","toConsumableArray_default","console","log","id","show","itemStyle","borderColor","shadowBlur","shadowOffsetX","shadowOffsetY","endNode","source","mounted","flow_circularGraph","_m","pulseGraph","spinShow","baseLength","graphSpace","circleFillColor","circleBorderColor","squareFillColor","squareBorderColor","isActive","pointList","transTypePointList","waterFlow","flowType","businessItemWidth","ds","books$$","radioGroupLabel","rodioGroupDoOrNot","doneortodo","taskType","defaultDisplayTask","teamDone","teamTodo","myDone","myToDo","subjectTodo","pageListId","components","CircularGraph","circularGraph_normalizeComponent","draw","nodePointXY","tempPoint","tempX","tempY","point","i2","pointX","sort","pointY","childNode","itemIndex","childIndex","relevantNode","relIndex","groupIndex","endIndex","baseNum","_baseNum","calcSvgWidth","nodeNumber","sreenWidth","body","clientWidth","calcSvgHeight","clientHeight","doAction","lastNode","outBlur","nr","getAttribute","open","subscribeMessage","token","msg","radioGroupChange","assign_default","radioGroupChangeDoneOrTodo","opentask","emitModal","val","currentUser","$currentUser","username","login","c","subjectName","s","style","catch","content","$Modal","flow_pulseGraph","fix","_e","left","z-index","font-size","_l","xmlns","x","in","dx","dy","values","stdDeviation","in2","mode","markerUnits","markerWidth","markerHeight","viewBox","refX","refY","orient","fill","x1","y1","x2","y2","stop-color","stop-opacity","offset","business","xlink:href","rx","$event","stopPropagation","cx","cy","r","stroke-width","class","stroke","points","marker-end","pulseGraph_Component","pulseGraph_normalizeComponent","MS","Connection","defaultOptions","AckTimeoutRegistry","Client","_url","_getOptions","presence","_messageCallbacks","_onErrorMessage","createDeepstream","authParamsOrCallback","authenticate","close","getState","getTime","random","mergedOptions","CONSTANTS","MERGE_STRATEGIES","_register","_onConnectionStateChanged","timeoutDuration","subscriptionTimeout","__timeout","_onTimeout","_getUniqueName","uniqueName","clearTimeout","connectionState","heartbeatInterval","reconnectIntervalIncrement","maxReconnectInterval","maxReconnectAttempts","maxMessagesPerPacket","timeBetweenSendingQueuedPackages","REMOTE_WINS","nodeSocketOptions","BrowserWebSocket","WebSocket","MozWebSocket","NodeWebSocket","_authParams","_authCallback","_deliberateClose","_redirecting","_tooManyAuthAttempts","_connectionAuthenticationTimeout","_challengeDenied","_queuedMessages","_reconnectTimeout","_reconnectionAttempt","_currentPacketMessageCount","_sendNextPacketTimeout","_currentMessageResetTimeout","_endpoint","_lastHeartBeat","_heartbeatInterval","_originalUrl","parseUrl","_state","_createEndpoint","authParams","_sendAuthParams","send","nextTick","_resetCurrentMessageCount","_sendQueuedMessages","_queueNextPacket","clearInterval","onopen","_onOpen","_onError","onclose","_onClose","onmessage","_onMessage","readyState","_submit","delay","_setState","authMessage","_checkHeartBeat","heartBeatTolerance","now","_clearReconnect","setInterval","code","_tryReconnect","_handleConnectionResponse","_handleAuthResponse","_getAuthData","_tryOpen","min","remoteValue","LOCAL_WINS","isString","arg","isObject","isNull","isNullOrUndefined","webpackPolyfill","deprecate","children","l","_name","_correlationId","_isAcknowledged","_isComplete","autoAck","_performAutoAck","hasOwnProperty","prop","qs","sep","eq","regexp","maxKeys","kstr","vstr","v","idx","decodeURIComponent","xs","CardItem","taskCount","appinfo","align","allTaskCount","deep","appInfo","showUserInfo","adminId","appService","dataCount","popperShow","goAppSetting","list","card_CardItem","on-popper-show","count","text","administrator","transName","components_card_CardItem","CardList","card_CardList","gutter","menuItem","span","components_card_CardList","CardList_normalizeComponent","HomePage","PulseGraph","cutView","menuList","favoriteMenu","leaf","pulseGraphLlistr","isAdmin","urlMd5","changeView","goAppManage","location","hash","Id","loop","newUrl","MD5","home_HomePage","HomePage_Component","HomePage_normalizeComponent","stringifyPrimitive","isFinite","objectKeys","ks","encodeURIComponent","util","Url","protocol","slashes","auth","host","port","hostname","search","query","pathname","urlParse","resolve","relative","resolveObject","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","parseQueryString","slashesDenoteHost","u","queryIndex","splitter","uSplit","rest","trim","simplePath","exec","proto","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","ae","esc","escape","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","authInHost","last","hasTrailingSlash","up","isAbsolute","_action","_timeoutDuration","_requests","_resendRequests","_onResponseTimeout","TRIM_REGULAR_EXPRESSION","isNode","process","inputString","objA","objB","copy","intervalDuration","start","didTimeout","timeRemaining","max","cancelIdleCallback","hasUrlProtocol","unsupportedProtocol","URL","initialURl","defaultPath","serverUrl"],"mappings":"0EAEAA,EAAAC,oBAEAD,EAAAC,iBAAAC,OAAA,SACAF,EAAAC,iBAAAE,oBAAA,sBACAH,EAAAC,iBAAAG,YAAA,cACAJ,EAAAC,iBAAAI,wBAAA,0BACAL,EAAAC,iBAAAK,eAAA,iBACAN,EAAAC,iBAAAM,KAAA,OACAP,EAAAC,iBAAAO,MAAA,QACAR,EAAAC,iBAAAQ,aAAA,eAEAT,EAAAU,kBAAAC,OAAAC,aAAA,IACAZ,EAAAa,uBAAAF,OAAAC,aAAA,IAEAZ,EAAAc,SACAd,EAAAc,MAAAC,OAAA,IACAf,EAAAc,MAAAE,OAAA,IACAhB,EAAAc,MAAAG,OAAA,IACAjB,EAAAc,MAAAI,KAAA,IACAlB,EAAAc,MAAAK,KAAA,IACAnB,EAAAc,MAAAM,MAAA,IACApB,EAAAc,MAAAO,UAAA,IAEArB,EAAAsB,SACAtB,EAAAsB,MAAAC,WAAA,IACAvB,EAAAsB,MAAAE,KAAA,IACAxB,EAAAsB,MAAAd,MAAA,IACAR,EAAAsB,MAAAG,MAAA,IACAzB,EAAAsB,MAAAI,OAAA,IACA1B,EAAAsB,MAAAK,IAAA,IACA3B,EAAAsB,MAAAM,SAAA,IACA5B,EAAAsB,MAAAO,QAAA,WAEA7B,EAAAyB,SACAzB,EAAAyB,MAAAK,iBAAA,kBACA9B,EAAAyB,MAAAM,yBAAA,yBACA/B,EAAAyB,MAAAO,kCAAA,oCACAhC,EAAAyB,MAAAQ,kCAAA,oCACAjC,EAAAyB,MAAAS,YAAA,cACAlC,EAAAyB,MAAAU,gBAAA,kBACAnC,EAAAyB,MAAAW,iBAAA,mBACApC,EAAAyB,MAAAY,eAAA,iBACArC,EAAAyB,MAAAa,oBAAA,sBACAtC,EAAAyB,MAAAc,eAAA,iBACAvC,EAAAyB,MAAAe,oBAAA,sBACAxC,EAAAyB,MAAAgB,eAAA,iBACAzC,EAAAyB,MAAAiB,kBAAA,oBACA1C,EAAAyB,MAAAkB,yBAAA,2BACA3C,EAAAyB,MAAAmB,gBAAA,kBACA5C,EAAAyB,MAAAoB,cAAA,gBACA7C,EAAAyB,MAAAqB,uBAAA,yBACA9C,EAAAyB,MAAAsB,iBAAA,mBACA/C,EAAAyB,MAAAuB,UAAA,YACAhD,EAAAyB,MAAAwB,iBAAA,mBACAjD,EAAAyB,MAAAyB,eAAA,iBAEAlD,EAAAmD,WACAnD,EAAAmD,QAAAC,KAAA,KACApD,EAAAmD,QAAAE,KAAA,KACArD,EAAAmD,QAAAG,IAAA,IACAtD,EAAAmD,QAAAI,SAAA,MACAvD,EAAAmD,QAAAK,UAAA,KACAxD,EAAAmD,QAAAM,mBAAA,MACAzD,EAAAmD,QAAAO,KAAA,IACA1D,EAAAmD,QAAAQ,OAAA,IACA3D,EAAAmD,QAAAS,OAAA,IACA5D,EAAAmD,QAAAU,MAAA,IACA7D,EAAAmD,QAAAW,OAAA,IACA9D,EAAAmD,QAAAY,UAAA,IACA/D,EAAAmD,QAAAa,YAAA,KACAhE,EAAAmD,QAAAc,IAAA,IACAjE,EAAAmD,QAAAe,SAAA,KACAlE,EAAAmD,QAAAgB,OAAA,IACAnE,EAAAmD,QAAAiB,+BAAA,KACApE,EAAAmD,QAAAkB,iCAAA,KACArE,EAAAmD,QAAAmB,0BAAA,KACAtE,EAAAmD,QAAAoB,OAAA,IACAvE,EAAAmD,QAAAqB,SAAA,KACAxE,EAAAmD,QAAAsB,cAAA,KACAzE,EAAAmD,QAAAuB,cAAA,KACA1E,EAAAmD,QAAAwB,gBAAA,KACA3E,EAAAmD,QAAAyB,MAAA,IACA5E,EAAAmD,QAAA0B,aAAA,KACA7E,EAAAmD,QAAA2B,gBAAA,KACA9E,EAAAmD,QAAA1B,MAAA,MACAzB,EAAAmD,QAAA3C,MAAA,IACAR,EAAAmD,QAAA4B,QAAA,MACA/E,EAAAmD,QAAA6B,SAAA,MACAhF,EAAAmD,QAAA8B,UAAA,MACAjF,EAAAmD,QAAA+B,cAAA,MACAlF,EAAAmD,QAAAgC,eAAA,MACAnF,EAAAmD,QAAAiC,sBAAA,KAEApF,EAAAqF,cACArF,EAAAqF,WAAAC,QAAA,UACAtF,EAAAqF,WAAAE,WAAA,aACAvF,EAAAqF,WAAAG,YAAA,cACAxF,EAAAqF,WAAAI,SAAA,WACAzF,EAAAqF,WAAAK,SAAA,WACA1F,EAAAqF,WAAAM,MAAA,QACA3F,EAAAqF,WAAA7E,MAAA,6CCrDA,IAAAoF,GACAC,OACAC,SAAAC,OAEAC,SACAC,KAAAtF,OACAuF,QAAA,UAGAC,KATA,WAUA,OACAC,WAAA,aAAAC,EAAA,cAGAC,YC5DAC,GADiBC,OAFjB,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,UAAoBE,OAAOf,QAAAS,EAAAT,QAAAgB,UAAA,SAAAC,UAAA,KAA4DR,EAAAS,GAAA,YAAAT,EAAAU,GAAA,KAAAN,EAAA,OAA2CE,OAAOK,KAAA,WAAiBA,KAAA,YAAgBP,EAAA,OAAYQ,YAAA,aAAuBR,EAAA,OAAYQ,YAAA,iBAA2BR,EAAA,OAAYQ,YAAA,eAAAN,OAAkCO,IAAA,iBAAAC,QAAAd,EAAAL,cAAiDK,EAAAU,GAAA,KAAAN,EAAA,OAAwBQ,YAAA,mBAA6BR,EAAA,KAAUQ,YAAA,WAAqBZ,EAAAU,GAAAV,EAAAe,GAAAf,EAAAX,SAAA2B,aAAAhB,EAAAU,GAAA,KAAAN,EAAA,KAA8DQ,YAAA,WAAAK,aAAoCC,MAAA,aAAmBlB,EAAAU,GAAA,OAAAV,EAAAU,GAAA,KAAAN,EAAA,KAAAA,EAAA,QAA+CQ,YAAA,cAAwBZ,EAAAU,GAAAV,EAAAe,GAAAf,EAAAX,SAAA8B,oBAAAnB,EAAAU,GAAA,KAAAN,EAAA,OAAuEQ,YAAA,oBAA8BR,EAAA,KAAAA,EAAA,QAAqBQ,YAAA,cAAwBZ,EAAAU,GAAA,QAAAV,EAAAU,GAAA,KAAAN,EAAA,QAAwCQ,YAAA,gBAA0BZ,EAAAU,GAAAV,EAAAe,GAAAf,EAAAX,SAAA+B,aAAApB,EAAAU,GAAA,KAAAN,EAAA,KAAAA,EAAA,QAAyEQ,YAAA,cAAwBZ,EAAAU,GAAA,QAAAV,EAAAU,GAAA,KAAAN,EAAA,QAAwCQ,YAAA,gBAA0BZ,EAAAU,GAAAV,EAAAe,GAAAf,EAAAX,SAAAgC,YAAArB,EAAAU,GAAA,KAAAN,EAAA,KAAAA,EAAA,QAAwEQ,YAAA,cAAwBZ,EAAAU,GAAA,QAAAV,EAAAU,GAAA,KAAAN,EAAA,QAAwCQ,YAAA,gBAA0BZ,EAAAU,GAAAV,EAAAe,GAAAf,EAAAX,SAAA8B,uBAAA,IAEpsCG,oBCEjB,IAcAC,EAdA3B,EAAA,OAcA4B,CACArC,EACAW,GATA,EAXA,SAAA2B,GACA7B,EAAA,QACAA,EAAA,SAaA,kBAEA,MAUA8B,EAAA,EAAAH,EAAA,6CCxBA,IAAAI,EAAA/B,EAAA,QACAgC,EAAAhC,EAAA,QACAiC,EAAAjC,EAAA,QAgBAkC,EAAA,SAAAC,EAAAC,EAAAC,GACA,oBAAAD,GAAA,IAAAA,EAAAE,OACA,UAAAC,MAAA,yBAGAlC,KAAAmC,eAAAL,EACA9B,KAAAoC,QAAApC,KAAAmC,eAAAE,UAAAN,EAAAC,GACAhC,KAAAoC,QAAAE,aAAAtC,KAAAsC,aAAAC,KAAAvC,MAEAA,KAAAoC,QAAAI,GAAA,SAAAxC,KAAAyC,KAAAF,KAAAvC,KAAA,WACAA,KAAAoC,QAAAI,GAAA,UAAAxC,KAAA0C,WAAAH,KAAAvC,OACAA,KAAAoC,QAAAI,GAAA,QAAAxC,KAAA2C,SAAAJ,KAAAvC,OAEAA,KAAA4C,YAAA5C,KAAAoC,QAAAQ,YACA5C,KAAA6C,QAAA7C,KAAAoC,QAAAS,QACA7C,KAAA+B,OACA/B,KAAA8C,kBACA9C,KAAA+C,iBAAA,KACA/C,KAAAgD,gBAAA,KACAhD,KAAAiD,mBAAA,KACAjD,KAAAkD,iBAAA,KAEAlD,KAAAmD,OAAAnD,KAAAoC,QAAAe,OAAAZ,KAAAvC,KAAAoC,SACApC,KAAAoD,QAAApD,KAAAoC,QAAAgB,QAAAb,KAAAvC,KAAAoC,SACApC,KAAAqD,UAAArD,KAAAoC,QAAAiB,UAAAd,KAAAvC,OAGA0B,EAAAG,EAAAyB,WASAzB,EAAAyB,UAAAC,WAAA,WACA,IAAAC,EAAAxD,KAAAoC,QAAAqB,MAEA,OAAAD,aAAAE,MAIAF,MASA3B,EAAAyB,UAAAK,QAAA,WACA,WAAA3D,KAAAuD,aAAAtB,QASAJ,EAAAyB,UAAAM,WAAA,SAAAJ,GACA,IAAAK,EAAA,2CACAC,OAAA,EAEA,KAAAN,aAAAE,OACA,UAAAxB,MAAA2B,GAGA,IAAAC,EAAA,EAAaA,EAAAN,EAAAvB,OAAoB6B,IACjC,oBAAAN,EAAAM,GACA,UAAA5B,MAAA2B,IAIA,IAAA7D,KAAAoC,QAAAS,QACA7C,KAAA8C,eAAAiB,KAAA/D,KAAA4D,WAAArB,KAAAvC,KAAAwD,KAEAxD,KAAAgE,gBACAhE,KAAAoC,QAAA6B,IAAAT,GACAxD,KAAAkE,iBAaArC,EAAAyB,UAAAa,YAAA,SAAAC,EAAAC,GACA,QAAArE,KAAAoC,QAAAS,QAAA,CAKA,IAAAyB,EAAAtE,KAAAoC,QAAAqB,MACAc,EAAAvE,KAAAwE,UAAAH,GACAb,KACAM,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAAQ,EAAArC,OAA2B6B,KACxCQ,EAAAR,KAAAM,GAAAG,GAAAF,IAAAP,IACAN,EAAAO,KAAAO,EAAAR,IAGA9D,KAAAgE,gBACAhE,KAAAoC,QAAA6B,IAAAT,GACAxD,KAAAkE,oBAhBAlE,KAAA8C,eAAAiB,KAAA/D,KAAAmE,YAAA5B,KAAAvC,KAAAoE,EAAAC,KA4BAxC,EAAAyB,UAAAmB,SAAA,SAAAL,EAAAC,GACA,oBAAAD,EACA,UAAAlC,MAAA,8BAGA,QAAAlC,KAAAoC,QAAAS,QAAA,CAKA,IAAA0B,EAAAvE,KAAAwE,UAAAH,GACAb,EAAAxD,KAAAuD,aACAgB,EACAf,EAAAkB,OAAAL,EAAA,EAAAD,GAEAZ,EAAAO,KAAAK,GAEApE,KAAAgE,gBACAhE,KAAAoC,QAAA6B,IAAAT,GACAxD,KAAAkE,oBAbAlE,KAAA8C,eAAAiB,KAAA/D,KAAAyE,SAAAlC,KAAAvC,KAAAoE,EAAAC,KAuBAxC,EAAAyB,UAAAqB,UAAA,WACA,IAAAC,EAAAjD,EAAA2B,UAAAuB,oBAAAC,WAEA,GAAAF,EAAAG,KACA,UAAA7C,MAAA,4CAIA,IAAA8C,EAAA,SAAAC,GACAA,EAAAjF,KAAAuD,eACGhB,KAAAvC,KAAA4E,EAAAK,UAWHL,EAAAK,SAAAC,gBAAAF,EACAJ,EAAAK,SAAAD,EAEAhF,KAAAoC,QAAAuC,UAAAC,IAUA/C,EAAAyB,UAAA6B,YAAA,WACA,IAAAP,EAAAjD,EAAA2B,UAAAuB,oBAAAC,WAEA,GAAAF,EAAAG,KACA,UAAA7C,MAAA,8CAGA0C,EAAAK,SAAAL,EAAAK,SAAAC,gBACAlF,KAAAoC,QAAA+C,YAAAP,IAUA/C,EAAAyB,UAAAX,SAAA,WACA3C,KAAA6C,SAAA,EAEA,QAAAiB,EAAA,EAAiBA,EAAA9D,KAAA8C,eAAAb,OAAgC6B,IACjD9D,KAAA8C,eAAAgB,KAGA9D,KAAA8C,kBACA9C,KAAAyC,KAAA,UAUAZ,EAAAyB,UAAAZ,WAAA,WACA1C,KAAA4C,aAAA,EACA5C,KAAAyC,KAAA,YAaAZ,EAAAyB,UAAAhB,aAAA,SAAA8C,GACA,GAAAA,EAAAC,SAAAzD,EAAAnF,QAAAU,MACA,UAAA+E,MAAA,oCAGA,MAAAkD,EAAA3F,KAAA,GAAA6F,OAAA,KACAF,EAAA3F,KAAA,SAGAO,KAAAgE,gBACArC,EAAA2B,UAAAhB,aAAAiD,KAAAvF,KAAAoC,QAAAgD,GACApF,KAAAkE,gBAWArC,EAAAyB,UAAAkB,UAAA,SAAAH,GACA,IAAAE,GAAA,EACAf,EAAAxD,KAAAuD,aACA,QAAAiC,IAAAnB,EAAA,CACA,GAAAoB,MAAApB,GACA,UAAAnC,MAAA,0BAEA,GAAAmC,IAAAb,EAAAvB,SAAAoC,GAAAb,EAAAvB,QAAAoC,EAAA,GACA,UAAAnC,MAAA,wCAEAqC,GAAA,EAEA,OAAAA,GAaA1C,EAAAyB,UAAAU,cAAA,WACAhE,KAAAgD,gBAAAhD,KAAA0F,UA5SA,eA4SAzD,OAAA,EACAjC,KAAAiD,mBAAAjD,KAAA0F,UA5SA,iBA4SAzD,OAAA,EACAjC,KAAAkD,iBAAAlD,KAAA0F,UA5SA,eA4SAzD,OAAA,EAEAjC,KAAAgD,iBAAAhD,KAAAiD,oBAAAjD,KAAAkD,iBACAlD,KAAA+C,iBAAA/C,KAAA2F,gBAEA3F,KAAA+C,iBAAA,MAWAlB,EAAAyB,UAAAY,aAAA,WACA,UAAAlE,KAAA+C,iBAAA,CAIA,IAAA6C,EAAA5F,KAAA2F,gBACAE,EAAA7F,KAAA+C,iBACAqB,OAAA,EACAN,OAAA,EAEA,GAAA9D,KAAAiD,mBACA,IAAAmB,KAAAyB,EACA,IAAA/B,EAAA,EAAiBA,EAAA+B,EAAAzB,GAAAnC,OAA0B6B,SAC3C0B,IAAAI,EAAAxB,SAAAoB,IAAAI,EAAAxB,GAAAN,IACA9D,KAAAyC,KA3UA,gBA2UA2B,EAAAyB,EAAAzB,GAAAN,IAMA,GAAA9D,KAAAgD,iBAAAhD,KAAAkD,iBACA,IAAAkB,KAAAwB,EACA,QAAAJ,IAAAK,EAAAzB,GACA,IAAAN,EAAA,EAAmBA,EAAA8B,EAAAxB,GAAAnC,OAAyB6B,IAC5C9D,KAAAyC,KAtVA,cAsVA2B,EAAAwB,EAAAxB,GAAAN,SAGA,IAAAA,EAAA,EAAmBA,EAAA8B,EAAAxB,GAAAnC,OAAyB6B,IAC5C+B,EAAAzB,GAAAN,KAAA8B,EAAAxB,GAAAN,UACA0B,IAAAK,EAAAzB,GAAAN,GACA9D,KAAAyC,KA5VA,cA4VA2B,EAAAwB,EAAAxB,GAAAN,IAEA9D,KAAAyC,KA5VA,cA4VA2B,EAAAwB,EAAAxB,GAAAN,OAsBAjC,EAAAyB,UAAAqC,cAAA,WACA,IAAAG,KACAhC,OAAA,EACAN,EAAAxD,KAAAoC,QAAAqB,MAEA,IAAAK,EAAA,EAAaA,EAAAN,EAAAvB,OAAoB6B,SACjC0B,IAAAM,EAAAtC,EAAAM,IACAgC,EAAAtC,EAAAM,QAEAgC,EAAAtC,EAAAM,IAAAC,KAAAD,GAIA,OAAAgC,GAGAC,EAAAzM,QAAAuI,qCCzYA,IAAAmE,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAA3C,UAAA,gBAAA6C,GAE5IE,EAAA,WAAgC,SAAAC,EAAAC,EAAApH,GAA2C,QAAA2E,EAAA,EAAgBA,EAAA3E,EAAA8C,OAAkB6B,IAAA,CAAO,IAAA0C,EAAArH,EAAA2E,GAA2B0C,EAAAC,WAAAD,EAAAC,aAAA,EAAwDD,EAAAE,cAAA,EAAgC,UAAAF,MAAAG,UAAA,GAAuDtH,OAAAuH,eAAAL,EAAAC,EAAAK,IAAAL,IAA+D,gBAAAM,EAAAC,EAAAC,GAA2L,OAAlID,GAAAT,EAAAQ,EAAAxD,UAAAyD,GAAqEC,GAAAV,EAAAQ,EAAAE,GAA6DF,GAAxhB,GAIA,IAAApF,EAAA/B,EAAA,QACAiC,EAAAjC,EAAA,QACAsH,EAAAtH,EAAA,QAEA,SAAAuH,EAAAC,EAAAlC,EAAAmC,GAQA,GAPA,mBAAAD,QAAA3B,IAAAP,GACAA,EAAAkC,EACAA,EAAAC,GAEAD,WAGA3B,IAAAP,GAAA,mBAAAA,EACA,UAAA/C,MAAA,6BAGA,OAAUiF,SAAAlC,YAgBVc,EAAAzM,QAAA,WACA,SAAA+N,EAAArF,EAAAsF,EAAAC,IAnCA,SAAAC,EAAAV,GAAiD,KAAAU,aAAAV,GAA0C,UAAAW,UAAA,qCAoC3FC,CAAA1H,KAAAqH,GAEArH,KAAA2H,SAAA3F,EACAhC,KAAA4H,YAAAN,EACAtH,KAAA6H,QAAAN,EACAvH,KAAA8H,cAAA,IAAApG,EACA1B,KAAA+H,kBAAA,IAAArG,EACA1B,KAAAgI,oBAAAT,EAAAU,0BACAjI,KAAAkI,qBAAA,IAAAjB,EAAAjH,KAAA6H,QAAA7H,KAAAmI,aAAA5F,KAAAvC,OACAA,KAAAoI,SAAA,EAEApI,KAAAqI,OAAArI,KAAAqI,OAAA9F,KAAAvC,MACAA,KAAAsI,cAAA,KACAtI,KAAAuI,sBACAvI,KAAAwI,wBAwLA,OA5KAnC,EAAAgB,IACAR,IAAA,SACA4B,MAAA,SAAAC,EAAAzD,GACA,sBAAAyD,EACA1I,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAM,SAAA0G,EAAAnF,QAAAyB,OAAA0D,EAAAnF,QAAAyB,QACA8B,KAAA8H,cAAAc,KAAAhH,EAAAnF,QAAAyB,MAAAwK,OACO,CACP,IAAAG,EAAA7I,KAAAoI,WACApI,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAM,SAAA0G,EAAAnF,QAAAyB,OAAA2K,EAAAH,IACA1I,KAAA8H,cAAAc,KAAAC,EAAA5D,OAeA4B,IAAA,YACA4B,MAAA,SAAAtB,EAAAlC,GACA,IAAA6D,EAAA5B,EAAAC,EAAAlC,EAAArD,EAAAnF,QAAAY,WACA2C,KAAA+H,kBAAAgB,aAAAD,EAAA3B,UACA2B,EAAA3B,SAAAvF,EAAAnF,QAAAY,WACA2C,KAAAgJ,wBAAApH,EAAAnF,QAAAY,WACA2C,KAAA+H,kBAAAvF,GAAAZ,EAAAnF,QAAAY,UAAAyL,EAAA7D,mBAEAjF,KAAAwI,qBAAAM,EAAA3B,QACAnH,KAAAuI,mBAAAO,EAAA3B,SAAA,EACAnH,KAAAsI,gBACAtI,KAAAsI,cAAAW,WAAAjJ,KAAAqI,OAAA,IAEArI,KAAA+H,kBAAAvF,GAAAsG,EAAA3B,OAAA2B,EAAA7D,eAeA4B,IAAA,cACA4B,MAAA,SAAAtB,EAAAlC,GACA,IAAA6D,EAAA5B,EAAAC,EAAAlC,EAAArD,EAAAnF,QAAAa,aAEAwL,EAAA3B,SAAAvF,EAAAnF,QAAAa,YACA0C,KAAA+H,kBAAAmB,IAAAtH,EAAAnF,QAAAY,UAAAyL,EAAA7D,UAEAjF,KAAA+H,kBAAAmB,IAAAJ,EAAA3B,OAAA2B,EAAA7D,UAGAjF,KAAA+H,kBAAAgB,aAAAD,EAAA3B,UACA2B,EAAA3B,SAAAvF,EAAAnF,QAAAa,YACA0C,KAAAgJ,wBAAApH,EAAAnF,QAAAa,qBAEA0C,KAAAuI,mBAAAO,EAAA3B,QACAnH,KAAAwI,qBAAAM,EAAA3B,SAAA,EACAnH,KAAAsI,gBACAtI,KAAAsI,cAAAW,WAAAjJ,KAAAqI,OAAA,SAgBAxB,IAAA,WACA4B,MAAA,SAAArD,GACA,GAAAA,EAAAC,SAAAzD,EAAAnF,QAAA3C,OAAAsL,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAc,eACAmE,KAAAgI,oBAAAmB,OAAAvH,EAAAhH,MAAAM,SAAAkK,EAAA3F,KAAA,IACA2F,EAAAgE,gBAAA,EACApJ,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAM,SAAA0G,EAAA7G,MAAAc,eAAAuJ,EAAA3F,KAAA,SACO,GAAA2F,EAAAC,SAAAzD,EAAAnF,QAAAG,IACPoD,KAAAgI,oBAAAsB,MAAAlE,QACO,GAAAA,EAAAC,SAAAzD,EAAAnF,QAAA+B,cACPwB,KAAA+H,kBAAAtF,KAAAb,EAAAnF,QAAAY,UAAA+H,EAAA3F,KAAA,OACAO,KAAA+H,kBAAAtF,KAAA2C,EAAA3F,KAAA,MAAA2F,EAAA3F,KAAA,SACO,GAAA2F,EAAAC,SAAAzD,EAAAnF,QAAAgC,eACPuB,KAAA+H,kBAAAtF,KAAAb,EAAAnF,QAAAY,UAAA+H,EAAA3F,KAAA,OACAO,KAAA+H,kBAAAtF,KAAA2C,EAAA3F,KAAA,MAAA2F,EAAA3F,KAAA,SACO,GAAA2F,EAAAC,SAAAzD,EAAAnF,QAAAyB,MAAA,CACP,IACA,IAAAuB,EAAA8J,KAAAC,MAAApE,EAAA3F,KAAA,IACA,wBAAAA,EAAA,YAAAuG,EAAAvG,IAEA,YADAO,KAAA8H,cAAArF,KAAA2C,EAAA3F,KAAA,GAAAA,GAGS,MAAAgK,IAGTzJ,KAAA8H,cAAArF,KAAAb,EAAAnF,QAAAyB,MAAAkH,EAAA3F,WAEAO,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAM,SAAA0G,EAAA7G,MAAAa,oBAAAwJ,EAAAC,WAYAwB,IAAA,eACA4B,MAAA,WACA,IAAAiB,EAAArK,OAAAsK,KAAA3J,KAAA+H,kBAAA6B,gBACAF,EAAAG,QAAAjI,EAAAnF,QAAAY,YAAA,IACAqM,EAAAhF,OAAAgF,EAAAG,QAAAjI,EAAAnF,QAAAY,WAAA,GACA2C,KAAAgJ,wBAAApH,EAAAnF,QAAAY,YAEAqM,EAAAzH,OAAA,GACAjC,KAAA8J,sBAAAlI,EAAAnF,QAAAY,UAAAqM,MAIA7C,IAAA,SACA4B,MAAA,WACA,IAAAsB,EAAA1K,OAAAsK,KAAA3J,KAAAuI,oBACAwB,EAAA9H,OAAA,IACAjC,KAAA8J,sBAAAlI,EAAAnF,QAAAY,UAAA0M,GACA/J,KAAAuI,uBAEA,IAAAyB,EAAA3K,OAAAsK,KAAA3J,KAAAwI,sBACAwB,EAAA/H,OAAA,IACAjC,KAAA8J,sBAAAlI,EAAAnF,QAAAa,YAAA0M,GACAhK,KAAAwI,yBAEAxI,KAAAsI,cAAA,QAGAzB,IAAA,wBACA4B,MAAA,SAAApD,EAAA4E,GACA,IAAAC,EAAAlK,KAAAoI,WACApI,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAM,SACAmK,SACAtD,KAAAmI,IAEAlK,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAM,SAAAmK,GAAA6E,EAAAD,OAGApD,IAAA,0BACA4B,MAAA,SAAApD,GACArF,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAM,SACAmK,SACAtD,KAAAsD,IAEArF,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAM,SAAAmK,WAIAgC,EAxMA,sCCrCA,IAAA1F,EAAAhC,EAAA,QAmBA0K,EAAA,SAAAvI,GACA9B,KAAA+B,KAAA,KACA/B,KAAAmC,eAAAL,EACA9B,KAAAoC,QAAA,KACApC,KAAAsK,kBACAtK,KAAAuK,aAAA,UACAvK,KAAAuK,aAAA,OACAvK,KAAAuK,aAAA,YAzBA5K,EAAA,OA4BA+B,CAAA2I,EAAA/G,WAaA+G,EAAA/G,UAAAG,IAAA,SAAAsB,GACA,UAAA/E,KAAAoC,QAIA,OAAApC,KAAAoC,QAAAqB,IAAAsB,IAiBAsF,EAAA/G,UAAAqB,UAAA,WACA,IAAAC,EAAAjD,EAAA2B,UAAAuB,oBAAAC,WACAF,EAAA4F,YAAA,EACAxK,KAAAsK,eAAAvG,KAAAa,GAEA,OAAA5E,KAAAoC,SACApC,KAAAoC,QAAAuC,UAAAC,IAiBAyF,EAAA/G,UAAA6B,YAAA,WACA,IAAAP,EAAAjD,EAAA2B,UAAAuB,oBAAAC,WACA2F,KACA3G,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAA9D,KAAAsK,eAAArI,OAAgC6B,IAC7C9D,KAAAsK,eAAAxG,GAAAiB,OAAAH,EAAAG,MAAA/E,KAAAsK,eAAAxG,GAAAmB,WAAAL,EAAAK,UACAwF,EAAA1G,KAAA/D,KAAAsK,eAAAxG,IAIA9D,KAAAsK,eAAAG,EAEA,OAAAzK,KAAAoC,SACApC,KAAAoC,QAAA+C,YAAAP,IAaAyF,EAAA/G,UAAAoH,QAAA,SAAAC,GACA,GAAA3K,KAAA+B,OAAA4I,EAAA,CAIA3K,KAAA+B,KAAA4I,EAEA,IAAA7G,OAAA,EAEA,UAAA9D,KAAAoC,UAAApC,KAAAoC,QAAAQ,YAAA,CACA,IAAAkB,EAAA,EAAeA,EAAA9D,KAAAsK,eAAArI,OAAgC6B,IAC/C9D,KAAAoC,QAAA+C,YAAAnF,KAAAsK,eAAAxG,IAEA9D,KAAAoC,QAAAgB,UAKA,IAFApD,KAAAoC,QAAApC,KAAAmC,eAAAE,UAAAsI,GAEA7G,EAAA,EAAaA,EAAA9D,KAAAsK,eAAArI,OAAgC6B,IAC7C9D,KAAAoC,QAAAuC,UAAA3E,KAAAsK,eAAAxG,IAGA9D,KAAAoC,QAAAiB,UAAArD,KAAAyC,KAAAF,KAAAvC,KAAA,UACAA,KAAAyC,KAAA,cAAAkI,KAYAN,EAAA/G,UAAAiH,aAAA,SAAAK,GACA5K,KAAA4K,GAAA5K,KAAA6K,oBAAAtI,KAAAvC,KAAA4K,IAaAP,EAAA/G,UAAAuH,oBAAA,SAAAD,GACA,UAAA5K,KAAAoC,QACA,UAAAF,MAAA,gBAAA0I,EAAA,yDAGA,sBAAA5K,KAAAoC,QAAAwI,GACA,UAAA1I,MAAA0I,EAAA,kCAGA,IAAA9B,EAAApF,MAAAJ,UAAAwH,MAAAvF,KAAAT,UAAA,GAEA,OAAA9E,KAAAoC,QAAAwI,GAAAG,MAAA/K,KAAAoC,QAAA0G,IAGA/C,EAAAzM,QAAA+Q,sGClLA,IAAAzI,EAAAjC,EAAA,QAeAsH,EAAA,SAAAM,EAAAyD,GACAhL,KAAA6H,QAAAN,EACAvH,KAAAmI,aAAA6C,EAEAhL,KAAAiL,iBAAA,EACAjL,KAAAkL,8BAAAlL,KAAAmL,8BAAA5I,KAAAvC,MACAA,KAAA6H,QAAArF,GAAA,yBAAAxC,KAAAkL,gCAQAjE,EAAA3D,UAAA8H,QAAA,WACApL,KAAA6H,QAAAwD,eAAA,yBAAArL,KAAAkL,+BACAlL,KAAAkL,8BAAA,KACAlL,KAAA6H,QAAA,MAQAZ,EAAA3D,UAAA6H,8BAAA,WACA,IAAAG,EAAAtL,KAAA6H,QAAA0D,qBAEAD,IAAA1J,EAAArI,iBAAAQ,eAAA,IAAAiG,KAAAiL,kBACAjL,KAAAiL,iBAAA,GAEAK,IAAA1J,EAAArI,iBAAAM,OAAA,IAAAmG,KAAAiL,kBACAjL,KAAAiL,iBAAA,EACAjL,KAAAmI,iBAIApC,EAAAzM,QAAA2N,qCCpDA,IAAAjB,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAA3C,UAAA,gBAAA6C,GAE5IxE,EAAAhC,EAAA,QACA0K,EAAA1K,EAAA,QACAkC,EAAAlC,EAAA,QACA6L,EAAA7L,EAAA,QACA8L,EAAA9L,EAAA,QACAiC,EAAAjC,EAAA,QACA+L,EAAA/L,EAAA,QACAgM,EAAAhM,EAAA,QACA+B,EAAA/B,EAAA,QAUAiM,EAAA,SAAA5J,EAAAsF,EAAAC,GACAvH,KAAA2H,SAAA3F,EACAhC,KAAA4H,YAAAN,EACAtH,KAAA6H,QAAAN,EACAvH,KAAA6L,YACA7L,KAAA8L,UACA9L,KAAA+L,aACA/L,KAAAgM,mBACAhM,KAAAiM,qBAAA,IAAAvK,EAEA1B,KAAAkM,aAAA,IAAAT,EAAAlE,EAAAD,EAAA1F,EAAAhH,MAAAI,OAAA4G,EAAAnF,QAAAc,IAAAyC,KAAA2H,SAAAwE,mBACAnM,KAAAoM,kBAAA,IAAAX,EAAAlE,EAAAD,EAAA1F,EAAAhH,MAAAI,OAAA4G,EAAAnF,QAAAe,SAAAwC,KAAA2H,SAAAwE,oBAaAP,EAAAtI,UAAAjB,UAAA,SAAAN,EAAAsK,GAWA,OAVArM,KAAA6L,SAAA9J,KACA/B,KAAA6L,SAAA9J,GAAA,IAAAJ,EAAAI,EAAAsK,MAA8DrM,KAAA4H,YAAA5H,KAAA2H,SAAA3H,KAAA6H,SAC9D7H,KAAA6L,SAAA9J,GAAAS,GAAA,QAAAxC,KAAAsM,eAAA/J,KAAAvC,KAAA+B,IACA/B,KAAA6L,SAAA9J,GAAAS,GAAA,iBAAAxC,KAAAuM,kBAAAhK,KAAAvC,KAAA+B,IACA/B,KAAA6L,SAAA9J,GAAAS,GAAA,SAAAxC,KAAAwM,cAAAjK,KAAAvC,KAAA+B,IACA/B,KAAA6L,SAAA9J,GAAAS,GAAA,UAAAxC,KAAAwM,cAAAjK,KAAAvC,KAAA+B,KAGA/B,KAAA6L,SAAA9J,GAAA0K,SAEAzM,KAAA6L,SAAA9J,IAcA6J,EAAAtI,UAAAoJ,QAAA,SAAA3K,EAAAC,GAMA,OALAhC,KAAA8L,OAAA/J,GAGA/B,KAAA6L,SAAA9J,GAAA0K,SAFAzM,KAAA8L,OAAA/J,GAAA,IAAAF,EAAA7B,KAAA+B,EAAAC,GAIAhC,KAAA8L,OAAA/J,IAiBA6J,EAAAtI,UAAAqJ,mBAAA,WACA,WAAAtC,EAAArK,OAcA4L,EAAAtI,UAAAsJ,OAAA,SAAAC,EAAA5H,GACA,oBAAA4H,GAAA,IAAAA,EAAA5K,OACA,UAAAC,MAAA,4BAEA,sBAAA+C,EACA,UAAA/C,MAAA,8BAGAlC,KAAA+L,UAAAc,IAAA7M,KAAA+L,UAAAc,GAAAC,gBAKA9M,KAAA+L,UAAAc,IACA7M,KAAA+L,UAAAc,GAAAzB,UAGApL,KAAA+L,UAAAc,GAAA,IAAArB,EAAA5J,EAAAhH,MAAAI,OAAA6R,EAAA5H,EAAAjF,KAAA2H,SAAA3H,KAAA6H,QAAA7H,KAAA4H,cARA5H,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAI,OAAA4G,EAAA7G,MAAAmB,gBAAA2Q,IAoBAjB,EAAAtI,UAAAyJ,SAAA,SAAAF,GACA,oBAAAA,GAAA,IAAAA,EAAA5K,OACA,UAAAC,MAAA,4BAGA,IAAA8K,EAAAhN,KAAA+L,UAAAc,GACAG,MAAAF,eACAE,EAAAC,cACGjN,KAAA+L,UAAAc,IACH7M,KAAA+L,UAAAc,GAAAzB,iBACApL,KAAA+L,UAAAc,IAEA7M,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAI,OAAA4G,EAAA7G,MAAAoB,cAAA0Q,IAYAjB,EAAAtI,UAAA4J,SAAA,SAAAnL,EAAAkD,GACA,oBAAAlD,GAAA,IAAAA,EAAAE,OACA,UAAAC,MAAA,0BAGA,sBAAA+C,EACA,UAAA/C,MAAA,8BAGAlC,KAAA6L,SAAA9J,IAAA/B,KAAA6L,SAAA9J,GAAAc,QACAoC,EAAA,KAAAjF,KAAA6L,SAAA9J,GAAA0B,OAEAzD,KAAAoM,kBAAAe,QAAApL,EAAAkD,IAYA2G,EAAAtI,UAAA8J,IAAA,SAAArL,EAAAkD,GACA,oBAAAlD,GAAA,IAAAA,EAAAE,OACA,UAAAC,MAAA,0BAGA,sBAAA+C,EACA,UAAA/C,MAAA,8BAGAlC,KAAA6L,SAAA9J,GACAkD,EAAA,SAEAjF,KAAAkM,aAAAiB,QAAApL,EAAAkD,IAmBA2G,EAAAtI,UAAA+J,QAAA,SAAA1C,EAAA2C,EAAAC,EAAAtI,GACA,IAAAF,OAAA,EACAtF,OAAA,EACA+N,OAAA,EAuBA,GArBA,IAAA1I,UAAA7C,QAEA8C,EAAAuI,EACA7N,EAAA8N,EACAC,EAAAvI,GACG,IAAAH,UAAA7C,OACH,mBAAAsL,GAEAxI,EAAAuI,EACA7N,EAAA8N,IAGAxI,EAAA,KACAtF,EAAA6N,EACAE,EAAAD,GAEG,IAAAzI,UAAA7C,SAEHxC,EAAA6N,GAGA,iBAAA3C,GAAA,IAAAA,EAAA1I,OACA,UAAAC,MAAA,gCAGA,GAAA+C,GAAA,mBAAAA,EACA,UAAA/C,MAAA,8BAGA,GAAA6C,IAAA,iBAAAA,GAAA,IAAAA,EAAA9C,QACA,UAAAC,MAAA,0BAGA,IAAA6C,IAAA,OAAAtF,GAAA,qBAAAA,EAAA,YAAAuG,EAAAvG,KACA,UAAAyC,MAAA,qEAGA,IAAAuL,EAAAzN,KAAA6L,SAAAlB,GACA,GAAA8C,EACA1I,GAAAyI,EACAC,EAAAxJ,IAAAc,EAAAtF,EAAA+N,GACKzI,EACL0I,EAAAxJ,IAAAc,EAAAtF,GACK+N,EACLC,EAAAxJ,IAAAxE,EAAA+N,GAEAC,EAAAxJ,IAAAxE,OAEG,CACH,IAAAiO,EAAA3I,GAAA4F,GAAA,EAAA5F,EAAA4G,EAAAgC,MAAAlO,KAAAkL,GAAA,EAAAlL,GACAmO,KACAJ,IACAI,EAAAC,cAAA,EACA7N,KAAAgM,gBAAArB,MACA3K,KAAAgM,gBAAArB,IAAA,GAAA6C,GAEAE,EAAA3J,KAAA6J,GACA5N,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAI,OAAA4G,EAAAnF,QAAA2B,gBAAAsP,KAYA9B,EAAAtI,UAAAwK,SAAA,SAAA1I,GACA,IAAArD,OAAA,EAEA,GAAAqD,EAAAC,SAAAzD,EAAAnF,QAAA3C,OAAAsL,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAgB,gBAAAqJ,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAe,UAAA4H,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAc,KAAA6H,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAc,eAGA,OAFAuJ,EAAAgE,gBAAA,OACApJ,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAI,OAAAoK,EAAA3F,KAAA,GAAA2F,EAAA3F,KAAA,IAIA,GAAA2F,EAAAC,SAAAzD,EAAAnF,QAAAG,KAAAwI,EAAAC,SAAAzD,EAAAnF,QAAA3C,MAAA,CAUA,GATAiI,EAAAqD,EAAA3F,KAAA,GASA2F,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAW,QAAAgI,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAa,aAAA8H,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAc,gBAAAuJ,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAW,OAOA,OANA4C,KAAAiM,qBAAAxJ,KAAA,eAAAV,EAAAqD,QAEAA,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAW,QAAA4C,KAAA6L,SAAA9J,IACA/B,KAAA6L,SAAA9J,GAAAgM,YAAA3I,IAMA,GAAAA,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAe,SAGA,OAFA4H,EAAAgE,gBAAA,OACApJ,KAAAoM,kBAAA4B,QAAAjM,EAAAqD,EAAA3F,KAAA,IAIA,GAAA2F,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAc,IAGA,OAFA6H,EAAAgE,gBAAA,OACApJ,KAAAoM,kBAAA4B,QAAAjM,EAAAqD,EAAA3F,KAAA,SAIAsC,EAAAqD,EAAA3F,KAAA,GAGA,IAAAwO,GAAA,EAEAR,EAAAzN,KAAA6L,SAAA9J,GACA0L,IACAQ,GAAA,EACAR,EAAAM,YAAA3I,IAGAA,EAAAC,SAAAzD,EAAAnF,QAAAO,MAAAgD,KAAAoM,kBAAA8B,WAAAnM,IACAkM,GAAA,EACAjO,KAAAoM,kBAAA4B,QAAAjM,EAAA,KAAAwH,KAAAC,MAAApE,EAAA3F,KAAA,MACG2F,EAAAC,SAAAzD,EAAAnF,QAAAc,KAAAyC,KAAAkM,aAAAgC,WAAAnM,IACHkM,GAAA,EACAjO,KAAAkM,aAAA8B,QAAAjM,EAAA,KAAA2J,EAAAyC,aAAA/I,EAAA3F,KAAA,MACG2F,EAAAC,SAAAzD,EAAAnF,QAAAiC,uBAAA+O,EAGArI,EAAAC,SAAAzD,EAAAnF,QAAAG,KAAAwI,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAqB,UAAAkC,KAAA+L,UAAAhK,IAAA/B,KAAA+L,UAAAhK,GAAA+K,gBACHmB,GAAA,EACAjO,KAAA+L,UAAAhK,GAAAqJ,iBACApL,KAAA+L,UAAAhK,IACG/B,KAAA+L,UAAAhK,IACHkM,GAAA,EACAjO,KAAA+L,UAAAhK,GAAAgM,YAAA3I,IACGA,EAAAC,SAAAzD,EAAAnF,QAAAkB,iCAEHsQ,GAAA,EACG7I,EAAAC,SAAAzD,EAAAnF,QAAAmB,4BAEHqQ,GAAA,IAdAA,GAAA,EACAtM,EAAAyM,6BAAAhJ,EAAApF,KAAAgM,gBAAAjK,GAAA/B,KAAA6H,UAgBAoG,IACA7I,EAAAgE,gBAAA,EACApJ,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAI,OAAA4G,EAAA7G,MAAAa,oBAAAmG,KAaA6J,EAAAtI,UAAAgJ,eAAA,SAAA3B,EAAA0D,GACArO,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAI,OAAAqT,EAAA1D,IAcAiB,EAAAtI,UAAAiJ,kBAAA,SAAA5B,GACA,GAAA3K,KAAA6L,SAAAlB,GAAA,CAIA,IAAA2D,EAAAtO,KAAA6L,SAAAlB,GAAAoD,YAAAxL,KAAAvC,KAAA6L,SAAAlB,IACA3K,KAAAiM,qBAAArD,KAAA,eAAA+B,EAAA2D,GACAtO,KAAAwM,cAAA7B,QALA3K,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAI,OAAA,uDAAA2P,IAgBAiB,EAAAtI,UAAAkJ,cAAA,SAAA7B,UACA3K,KAAA6L,SAAAlB,UACA3K,KAAA8L,OAAAnB,IAGA5E,EAAAzM,QAAAsS,wBCrZA,SAAA2C,EAAApI,GACA,GAAAA,EAAA,OAWA,SAAAA,GACA,QAAAU,KAAA0H,EAAAjL,UACA6C,EAAAU,GAAA0H,EAAAjL,UAAAuD,GAEA,OAAAV,EAfAqI,CAAArI,GAVAJ,EAAAzM,QAAAiV,EAqCAA,EAAAjL,UAAAd,GACA+L,EAAAjL,UAAAmL,iBAAA,SAAAC,EAAAC,GAIA,OAHA3O,KAAA4J,WAAA5J,KAAA4J,YAAAvK,OAAAuP,OAAA,OACA5O,KAAA4J,WAAA8E,GAAA1O,KAAA4J,WAAA8E,QACA3K,KAAA4K,GACA3O,MAaAuO,EAAAjL,UAAAsF,KAAA,SAAA8F,EAAAC,GACA,SAAAnM,IACAxC,KAAAkJ,IAAAwF,EAAAlM,GACAmM,EAAA5D,MAAA/K,KAAA8E,WAKA,OAFAtC,EAAAmM,KACA3O,KAAAwC,GAAAkM,EAAAlM,GACAxC,MAaAuO,EAAAjL,UAAA4F,IACAqF,EAAAjL,UAAA+H,eACAkD,EAAAjL,UAAAuL,mBACAN,EAAAjL,UAAAwL,oBAAA,SAAAJ,EAAAC,GAIA,GAHA3O,KAAA4J,WAAA5J,KAAA4J,YAAAvK,OAAAuP,OAAA,MAGA,GAAA9J,UAAA7C,OAEA,OADAjC,KAAA4J,WAAAvK,OAAAuP,OAAA,MACA5O,KAIA,IAUAwN,EAVA9D,EAAA1J,KAAA4J,WAAA8E,GACA,IAAAhF,EAAA,OAAA1J,KAGA,MAAA8E,UAAA7C,OAEA,cADAjC,KAAA4J,WAAA8E,GACA1O,KAKA,QAAA8D,EAAA,EAAiBA,EAAA4F,EAAAzH,OAAsB6B,IAEvC,IADA0J,EAAA9D,EAAA5F,MACA6K,GAAAnB,EAAAmB,OAAA,CACAjF,EAAAhF,OAAAZ,EAAA,GACA,MAUA,OAJA,IAAA4F,EAAAzH,eACAjC,KAAA4J,WAAA8E,GAGA1O,MAWAuO,EAAAjL,UAAAb,KAAA,SAAAiM,GACA1O,KAAA4J,WAAA5J,KAAA4J,YAAAvK,OAAAuP,OAAA,MAKA,IAHA,IAAA9F,EAAA,IAAApF,MAAAoB,UAAA7C,OAAA,GACAyH,EAAA1J,KAAA4J,WAAA8E,GAEA5K,EAAA,EAAiBA,EAAAgB,UAAA7C,OAAsB6B,IACvCgF,EAAAhF,EAAA,GAAAgB,UAAAhB,GAGA,GAAA4F,EAEA,CAAA5F,EAAA,UAAAiL,GADArF,IAAAoB,MAAA,IACA7I,OAA2C6B,EAAAiL,IAASjL,EACpD4F,EAAA5F,GAAAiH,MAAA/K,KAAA8I,GAIA,OAAA9I,MAWAuO,EAAAjL,UAAAoC,UAAA,SAAAgJ,GAEA,OADA1O,KAAA4J,WAAA5J,KAAA4J,YAAAvK,OAAAuP,OAAA,MACA5O,KAAA4J,WAAA8E,QAWAH,EAAAjL,UAAAyF,aAAA,SAAA2F,GACA,QAAA1O,KAAA0F,UAAAgJ,GAAAzM,QASAsM,EAAAjL,UAAA0L,WAAA,WACA,OAAAhP,KAAA4J,WAAAvK,OAAAsK,KAAA3J,KAAA4J,mDCrLA,IAAAhI,EAAAjC,EAAA,QAQAsP,EAAA,WACAjP,KAAAkP,SAAAlP,KAAAmP,eAsBAF,EAAA3L,UAAAkG,MAAA,SAAApE,EAAAmC,GAIA,IAHA,IAAA6H,KACAC,EAAAjK,EAAAkK,MAAA1N,EAAA5H,mBAEA8J,EAAA,EAAiBA,EAAAuL,EAAApN,OAAwB6B,IACzCuL,EAAAvL,GAAA7B,OAAA,GACAmN,EAAArL,KAAA/D,KAAAuP,cAAAF,EAAAvL,GAAAyD,IAIA,OAAA6H,GAYAH,EAAA3L,UAAA6K,aAAA,SAAA1F,EAAAlB,GACA,IAAAhI,EAAAkJ,EAAAnD,OAAA,GAEA,GAAA/F,IAAAqC,EAAAxH,MAAAC,OACA,OAAAoO,EAAA+G,OAAA,GAGA,GAAAjQ,IAAAqC,EAAAxH,MAAAE,OACA,IACA,OAAAiP,KAAAC,MAAAf,EAAA+G,OAAA,IACK,MAAA/F,GAEL,YADAlC,EAAA8B,UAAAzH,EAAAhH,MAAAd,MAAA8H,EAAA7G,MAAAe,oBAAA2N,EAAAgG,WAAA,IAAAhH,EAAA,KAKA,OAAAlJ,IAAAqC,EAAAxH,MAAAG,OACAmV,WAAAjH,EAAA+G,OAAA,IAGAjQ,IAAAqC,EAAAxH,MAAAI,KACA,KAGA+E,IAAAqC,EAAAxH,MAAAK,MAIA8E,IAAAqC,EAAAxH,MAAAM,YAIA6E,IAAAqC,EAAAxH,MAAAO,WAIA4M,EAAA8B,UAAAzH,EAAAhH,MAAAd,MAAA8H,EAAA7G,MAAAe,oBAAA,iBAAA2M,EAAA,OAYAwG,EAAA3L,UAAA6L,YAAA,WACA,IAAAQ,KAEA,QAAA9I,KAAAjF,EAAAnF,QACAkT,EAAA/N,EAAAnF,QAAAoK,MAGA,OAAA8I,GAaAV,EAAA3L,UAAAiM,cAAA,SAAAnK,EAAAmC,GACA,IAAAqI,EAAAxK,EAAAkK,MAAA1N,EAAAzH,wBACA0V,KAEA,OAAAD,EAAA3N,OAAA,GACAsF,EAAA8B,UAAAzH,EAAAhH,MAAAd,MAAA8H,EAAA7G,MAAAe,oBAAA,8BACA,WAGA0J,IAAAxF,KAAAkP,SAAAU,EAAA,KACArI,EAAA8B,UAAAzH,EAAAhH,MAAAd,MAAA8H,EAAA7G,MAAAe,oBAAA,kBAAA8T,EAAA,IACA,OAGAC,EAAAC,IAAA1K,EACAyK,EAAAzF,MAAAwF,EAAA,GACAC,EAAAxK,OAAAuK,EAAA,GACAC,EAAApQ,KAAAmQ,EAAAlL,OAAA,GAEAmL,IAGA9J,EAAAzM,QAAA,IAAA2V,qCC/IA,IAAAjJ,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAA3C,UAAA,gBAAA6C,GAE5I4J,EAAApQ,EAAA,QAEAqQ,EAAA,gBACAC,EAAA5Q,OAAAuP,OAAA,MAyEA,SAAAsB,EAAAC,EAAAC,EAAAC,GACA,IAAAvM,OAAA,EACAwM,OAAA,EACA,UAAAH,GAAA,OAAAC,EACA,OAAAA,EACG,GAAA1M,MAAA6M,QAAAJ,IAAAzM,MAAA6M,QAAAH,GAAA,CACH,IAAAI,OAAA,EACA,IAAA1M,EAAA,EAAeA,EAAAsM,EAAAnO,OAAqB6B,IAAA,CACpC,IAAA2E,EAAAyH,EAAAC,EAAArM,GAAAsM,EAAAtM,IAAA,GACA,IAAA0M,EAAA,CACA,GAAA/H,IAAA0H,EAAArM,GACA,SAGA,IADA0M,KACAF,EAAA,EAAmBA,EAAAxM,IAAOwM,EAC1BE,EAAAF,GAAAH,EAAAG,GAGAE,EAAA1M,GAAA2E,EAIA,OADA+H,GADAA,MAAA,IAAAH,EAAAN,EAAAM,SAAAG,QACAL,EAAAlO,SAAAmO,EAAAnO,OAAAkO,EAAAC,GAEG,IAAA1M,MAAA6M,QAAAH,IAAA,qBAAAD,EAAA,YAAAnK,EAAAmK,KAAA,qBAAAC,EAAA,YAAApK,EAAAoK,IAAA,CACH,IAAAjK,OAAA,EACAhH,EAAAE,OAAAsK,KAAAyG,GACA,IAAAtM,EAAA,EAAeA,EAAA3E,EAAA8C,OAAkB6B,IAAA,CACjC,IAAA2M,EAAAP,EAAAC,EAAAhR,EAAA2E,IAAAsM,EAAAjR,EAAA2E,KAAA,GACA,IAAAqC,EAAA,CACA,GAAAsK,IAAAN,EAAAhR,EAAA2E,IACA,SAGA,IADAqC,EAAA9G,OAAAuP,OAAA,MACA0B,EAAA,EAAmBA,EAAAxM,IAAOwM,EAC1BnK,EAAAhH,EAAAmR,IAAAH,EAAAhR,EAAAmR,IAGAnK,EAAAhH,EAAA2E,IAAAsM,EAAAjR,EAAA2E,IAIA,OADAqC,GADAA,MAAA,IAAAkK,EAAAN,EAAAM,SAAAlK,QACA9G,OAAAsK,KAAAwG,GAAAlO,SAAA9C,EAAA8C,OAAAkO,EAAAC,GAEG,OAAAA,IAAAD,GACH,IAAAE,EAAAN,EAAAM,SAAAD,KAGAD,EASA,SAAAO,EAAA3L,GACA,GAAAkL,EAAAlL,GACA,OAAAkL,EAAAlL,GAGA,IAAA6K,EAAA,cAAA3V,OAAA8K,GAAA9K,OAAA8K,GAAA4L,MAAAX,MAEA,IAAAJ,EACA,UAAA1N,MAAA,gBAAA6C,GAIA,OADAkL,EAAAlL,GAAA6K,EACAK,EAAAlL,GAnIAgB,EAAAzM,QAAAmK,IAAA,SAAAhE,EAAAsF,EAAAsL,GAGA,IAFA,IAAAO,EAAAF,EAAA3L,GACA0D,EAAAhJ,EACAqE,EAAA,EAAiBA,EAAA8M,EAAA3O,OAAmB6B,IAAA,CACpC,QAAA0B,IAAAiD,EACA,OAEA,wBAAAA,EAAA,YAAAzC,EAAAyC,IACA,UAAAvG,MAAA,wBAEAuG,IAAAmI,EAAA9M,IAGA,WAAAuM,EAAAN,EAAAM,SAAA5H,MAYA1C,EAAAzM,QAAA2K,IAAA,SAAAxE,EAAAsF,EAAA0D,EAAA4H,GACA,IAAAO,EAAAF,EAAA3L,GAEA,OAAA6L,EAAA3O,OACA,OAAAiO,EAAAzQ,EAAAgJ,EAAA4H,GAGA,IAAAF,EAAApK,EAAAzM,QAAAmK,IAAAhE,EAAAsF,GAAA,GACAqL,EAAAF,EAAAC,EAAA1H,EAAA4H,GAEA,GAAAD,IAAAD,EACA,OAAA1Q,EAMA,IAHA,IAAAoR,EAAAd,EAAAe,YAAArR,GAEAsR,EAAAF,EACA/M,EAAA,EAAiBA,EAAA8M,EAAA3O,OAAmB6B,IACpCA,IAAA8M,EAAA3O,OAAA,EACA8O,EAAAH,EAAA9M,IAAAsM,EAEAW,OADKvL,IAAAuL,EAAAH,EAAA9M,IACLiN,EAAAH,EAAA9M,IAAAiM,EAAAe,YAAAC,EAAAH,EAAA9M,KACK8M,EAAA9M,EAAA,KAAA2B,MAAAmL,EAAA9M,EAAA,IACLiN,EAAAH,EAAA9M,OAEAiN,EAAAH,EAAA9M,IAAAzE,OAAAuP,OAAA,MAIA,OAAAiC,sCCpEA,IAAAlF,EAAAhM,EAAA,QACA+L,EAAA/L,EAAA,QACAsH,EAAAtH,EAAA,QACAiC,EAAAjC,EAAA,QACA6L,EAAA7L,EAAA,QACA+B,EAAA/B,EAAA,QAaAqR,EAAA,SAAAhP,EAAAsF,EAAAC,GACAvH,KAAA2H,SAAA3F,EACAhC,KAAA4H,YAAAN,EACAtH,KAAA6H,QAAAN,EACAvH,KAAAiR,SAAA,IAAAvP,EACA1B,KAAA+L,aACA/L,KAAAgI,oBAAAT,EAAAU,0BACAjI,KAAAkI,qBAAA,IAAAjB,EAAAjH,KAAA6H,QAAA7H,KAAAmI,aAAA5F,KAAAvC,QAaAgR,EAAA1N,UAAAqB,UAAA,SAAA5C,EAAAkD,GACA,oBAAAlD,GAAA,IAAAA,EAAAE,OACA,UAAAC,MAAA,yBAEA,sBAAA+C,EACA,UAAA/C,MAAA,6BAGAlC,KAAAiR,SAAAlI,aAAAhH,KACA/B,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAG,MACAsK,OAAAzD,EAAAnF,QAAAY,UACA0E,SAEA/B,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAG,MAAA6G,EAAAnF,QAAAY,WAAA0E,KAGA/B,KAAAiR,SAAAzO,GAAAT,EAAAkD,IAcA+L,EAAA1N,UAAA6B,YAAA,SAAApD,EAAAkD,GACA,oBAAAlD,GAAA,IAAAA,EAAAE,OACA,UAAAC,MAAA,yBAEA,QAAAsD,IAAAP,GAAA,mBAAAA,EACA,UAAA/C,MAAA,6BAEAlC,KAAAiR,SAAA/H,IAAAnH,EAAAkD,GAEAjF,KAAAiR,SAAAlI,aAAAhH,KACA/B,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAG,MACAsK,OAAAzD,EAAAnF,QAAAa,YACAyE,SAEA/B,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAG,MAAA6G,EAAAnF,QAAAa,aAAAyE,MAcAiP,EAAA1N,UAAAb,KAAA,SAAAV,EAAAtC,GACA,oBAAAsC,GAAA,IAAAA,EAAAE,OACA,UAAAC,MAAA,yBAGAlC,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAG,MAAA6G,EAAAnF,QAAA1B,OAAAgH,EAAA4J,EAAAgC,MAAAlO,KACAO,KAAAiR,SAAAxO,KAAAV,EAAAtC,IAcAuR,EAAA1N,UAAAsJ,OAAA,SAAAC,EAAA5H,GACA,oBAAA4H,GAAA,IAAAA,EAAA5K,OACA,UAAAC,MAAA,4BAEA,sBAAA+C,EACA,UAAA/C,MAAA,8BAGAlC,KAAA+L,UAAAc,IAAA7M,KAAA+L,UAAAc,GAAAC,gBAGG9M,KAAA+L,UAAAc,IACH7M,KAAA+L,UAAAc,GAAAzB,UAGApL,KAAA+L,UAAAc,GAAA,IAAArB,EAAA5J,EAAAhH,MAAAG,MAAA8R,EAAA5H,EAAAjF,KAAA2H,SAAA3H,KAAA6H,QAAA7H,KAAA4H,cANA5H,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAG,MAAA6G,EAAA7G,MAAAmB,gBAAA2Q,IAkBAmE,EAAA1N,UAAAyJ,SAAA,SAAAF,GACA,oBAAAA,GAAA,IAAAA,EAAA5K,OACA,UAAAC,MAAA,4BAGA,IAAA8K,EAAAhN,KAAA+L,UAAAc,GAEAG,MAAAF,eACAE,EAAAC,cACGjN,KAAA+L,UAAAc,IACH7M,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAG,MACAsK,OAAAzD,EAAA7G,MAAA+C,SACAiE,KAAA8K,IAEA7M,KAAA+L,UAAAc,GAAAzB,iBACApL,KAAA+L,UAAAc,IAEA7M,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAI,OAAA4G,EAAA7G,MAAAoB,cAAA0Q,IAYAmE,EAAA1N,UAAAwK,SAAA,SAAA1I,GACA,IAAArD,EAAAqD,EAAA3F,KAAA2F,EAAAC,SAAAzD,EAAAnF,QAAAG,IAAA,KAEA,GAAAwI,EAAAC,SAAAzD,EAAAnF,QAAA1B,MAAA,CASA,GAAAqK,EAAAC,SAAAzD,EAAAnF,QAAAG,KAAAwI,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAqB,UAAAkC,KAAA+L,UAAAhK,IAAA/B,KAAA+L,UAAAhK,GAAA+K,eAGA,OAFA9M,KAAA+L,UAAAhK,GAAAqJ,sBACApL,KAAA+L,UAAAhK,GAEG,GAAA/B,KAAA+L,UAAAhK,GACH/B,KAAA+L,UAAAhK,GAAAgM,YAAA3I,QAEG,GAAAA,EAAAC,SAAAzD,EAAAnF,QAAAkB,kCAGAyH,EAAAC,SAAAzD,EAAAnF,QAAAmB,0BAAA,CAKH,GAAAwH,EAAAC,SAAAzD,EAAAnF,QAAAG,IAKA,OAAAwI,EAAAC,SAAAzD,EAAAnF,QAAA3C,OACAsL,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAc,eACAmE,KAAAgI,oBAAAmB,QACAiB,MAAAxI,EAAAhH,MAAAG,MACAgH,KAAAqD,EAAA3F,KAAA,GACA4F,OAAAD,EAAA3F,KAAA,KAEK2F,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAyB,gBACLwD,KAAAgI,oBAAAmB,QACAiB,MAAAxI,EAAAhH,MAAAG,MACAgH,KAAAqD,EAAA3F,KAAA,GACA4F,OAAAzD,EAAAnF,QAAAa,cAGA8H,EAAAgE,gBAAA,OACApJ,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAG,MAAAqK,EAAA3F,KAAA,GAAA2F,EAAA3F,KAAA,UAIAO,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAG,MAAA6G,EAAA7G,MAAAa,oBAAAmG,GAvBA/B,KAAAgI,oBAAAsB,MAAAlE,SAxBAA,EAAA3F,MAAA,IAAA2F,EAAA3F,KAAAwC,OACAjC,KAAAiR,SAAAxO,KAAAV,EAAA2J,EAAAyC,aAAA/I,EAAA3F,KAAA,GAAAO,KAAA6H,UAEA7H,KAAAiR,SAAAxO,KAAAV,IAqDAiP,EAAA1N,UAAA6E,aAAA,WACA,IAAAuB,EAAA1J,KAAAiR,SAAArH,WACA,QAAAsH,KAAAxH,EACA1J,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAG,MAAA6G,EAAAnF,QAAAY,WAAA6T,KAIAnL,EAAAzM,QAAA0X,qCClPA1X,EAAA6X,OAAA7X,EAAAkQ,MAAA7J,EAAA,QACArG,EAAA8X,OAAA9X,EAAA+X,UAAA1R,EAAA,6CCHA,IAAA2R,qDACC,SAAAC,GAGD,iBAAAjY,MACAA,EAAAkY,SACA,iBAAAzL,MACAA,EAAAyL,SAHA,IAIAC,EAAA,iBAAAC,KAEAD,EAAAC,SAAAD,GACAA,EAAAE,SAAAF,GACAA,EAAAG,KAUA,IAAAC,EAGAC,EAAA,WAGAC,EAAA,GACAC,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,IACAC,EAAA,GACAC,EAAA,IACAC,EAAA,IAGAC,EAAA,QACAC,EAAA,eACAC,EAAA,4BAGAC,GACAC,SAAA,kDACAC,YAAA,iDACAC,gBAAA,iBAIAC,EAAAf,EAAAC,EACAe,EAAAC,KAAAD,MACAE,EAAAhZ,OAAAC,aAaA,SAAAmU,EAAA9O,GACA,UAAA2T,WAAAR,EAAAnT,IAWA,SAAA4T,EAAAC,EAAAzE,GAGA,IAFA,IAAA1M,EAAAmR,EAAAnR,OACA4O,KACA5O,KACA4O,EAAA5O,GAAA0M,EAAAyE,EAAAnR,IAEA,OAAA4O,EAaA,SAAAwC,EAAAC,EAAA3E,GACA,IAAAiB,EAAA0D,EAAAhE,MAAA,KACAuB,EAAA,GAWA,OAVAjB,EAAA3N,OAAA,IAGA4O,EAAAjB,EAAA,OACA0D,EAAA1D,EAAA,IAMAiB,EADAsC,GAFAG,IAAAC,QAAAd,EAAA,MACAnD,MAAA,KACAX,GAAA6E,KAAA,KAiBA,SAAAC,EAAAH,GAMA,IALA,IAGA7K,EACAiL,EAJAC,KACAC,EAAA,EACA3R,EAAAqR,EAAArR,OAGA2R,EAAA3R,IACAwG,EAAA6K,EAAAO,WAAAD,OACA,OAAAnL,GAAA,OAAAmL,EAAA3R,EAGA,eADAyR,EAAAJ,EAAAO,WAAAD,OAEAD,EAAA5P,OAAA,KAAA0E,IAAA,UAAAiL,GAAA,QAIAC,EAAA5P,KAAA0E,GACAmL,KAGAD,EAAA5P,KAAA0E,GAGA,OAAAkL,EAWA,SAAAG,EAAAV,GACA,OAAAD,EAAAC,EAAA,SAAA3K,GACA,IAAAkL,EAAA,GAOA,OANAlL,EAAA,QAEAkL,GAAAV,GADAxK,GAAA,SACA,eACAA,EAAA,WAAAA,GAEAkL,GAAAV,EAAAxK,KAEG+K,KAAA,IAoCH,SAAAO,EAAAC,EAAAC,GAGA,OAAAD,EAAA,OAAAA,EAAA,SAAAC,IAAA,GAQA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,EAGA,IAFAH,EAAAE,EAAAtB,EAAAoB,EAAAhC,GAAAgC,GAAA,EACAA,GAAApB,EAAAoB,EAAAC,GAC+BD,EAAArB,EAAAb,GAAA,EAAmCqC,GAAAvC,EAClEoC,EAAApB,EAAAoB,EAAArB,GAEA,OAAAC,EAAAuB,GAAAxB,EAAA,GAAAqB,KAAAjC,IAUA,SAAAf,EAAAoD,GAEA,IAEAC,EAIAC,EACAnE,EACAjM,EACAqQ,EACAC,EACAL,EACAN,EACAY,EAEAC,EArEAC,EAsDAnB,KACAoB,EAAAR,EAAAtS,OAEA6B,EAAA,EACAkR,EAAA3C,EACA4C,EAAA7C,EAqBA,KALAqC,EAAAF,EAAAW,YAAA5C,IACA,IACAmC,EAAA,GAGAnE,EAAA,EAAaA,EAAAmE,IAAWnE,EAExBiE,EAAAV,WAAAvD,IAAA,KACAjC,EAAA,aAEAsF,EAAA5P,KAAAwQ,EAAAV,WAAAvD,IAMA,IAAAjM,EAAAoQ,EAAA,EAAAA,EAAA,IAAyCpQ,EAAA0Q,GAAqB,CAO9D,IAAAL,EAAA5Q,EAAA6Q,EAAA,EAAAL,EAAAvC,EAEA1N,GAAA0Q,GACA1G,EAAA,mBAGA2F,GAxGAc,EAwGAP,EAAAV,WAAAxP,MAvGA,MACAyQ,EAAA,GAEAA,EAAA,MACAA,EAAA,GAEAA,EAAA,MACAA,EAAA,GAEA/C,IAgGAA,GAAAiC,EAAAjB,GAAAjB,EAAAhO,GAAA6Q,KACAtG,EAAA,YAGAvK,GAAAkQ,EAAAW,IAGAX,GAFAY,EAAAN,GAAAW,EAAAjD,EAAAsC,GAAAW,EAAAhD,IAAAqC,EAAAW,IAbsDX,GAAAvC,EAoBtD4C,EAAA5B,EAAAjB,GADA+C,EAAA9C,EAAA6C,KAEAvG,EAAA,YAGAsG,GAAAE,EAKAI,EAAAf,EAAApQ,EAAA4Q,EADAF,EAAAb,EAAA1R,OAAA,EACA,GAAAyS,GAIA3B,EAAAjP,EAAA0Q,GAAA1C,EAAAkD,GACA3G,EAAA,YAGA2G,GAAAjC,EAAAjP,EAAA0Q,GACA1Q,GAAA0Q,EAGAb,EAAAjP,OAAAZ,IAAA,EAAAkR,GAIA,OAAAlB,EAAAH,GAUA,SAAAvC,EAAAmD,GACA,IAAAS,EACAb,EACAgB,EACAC,EACAH,EACA3E,EACA+E,EACAC,EACAhB,EACAM,EACAW,EAGAR,EAEAS,EACAX,EACAY,EANA9B,KAoBA,IARAoB,GAHAR,EAAAd,EAAAc,IAGAtS,OAGA+S,EAAA3C,EACA8B,EAAA,EACAc,EAAA7C,EAGA9B,EAAA,EAAaA,EAAAyE,IAAiBzE,GAC9BiF,EAAAhB,EAAAjE,IACA,KACAqD,EAAA5P,KAAAkP,EAAAsC,IAeA,IAXAJ,EAAAC,EAAAzB,EAAA1R,OAMAmT,GACAzB,EAAA5P,KAAAuO,GAIA6C,EAAAJ,GAAA,CAIA,IAAAM,EAAAvD,EAAAxB,EAAA,EAA0BA,EAAAyE,IAAiBzE,GAC3CiF,EAAAhB,EAAAjE,KACA0E,GAAAO,EAAAF,IACAA,EAAAE,GAcA,IAPAF,EAAAL,EAAAjC,GAAAjB,EAAAqC,IADAqB,EAAAL,EAAA,KAEA9G,EAAA,YAGA8F,IAAAkB,EAAAL,GAAAQ,EACAR,EAAAK,EAEA/E,EAAA,EAAcA,EAAAyE,IAAiBzE,EAO/B,IANAiF,EAAAhB,EAAAjE,IAEA0E,KAAAb,EAAArC,GACAzD,EAAA,YAGAkH,GAAAP,EAAA,CAEA,IAAAM,EAAAnB,EAAAG,EAAAvC,IAEAuD,GADAV,EAAAN,GAAAW,EAAAjD,EAAAsC,GAAAW,EAAAhD,IAAAqC,EAAAW,IADkDX,GAAAvC,EAKlD0D,EAAAH,EAAAV,EACAC,EAAA9C,EAAA6C,EACAjB,EAAA5P,KACAkP,EAAAc,EAAAa,EAAAa,EAAAZ,EAAA,KAEAS,EAAAvC,EAAA0C,EAAAZ,GAGAlB,EAAA5P,KAAAkP,EAAAc,EAAAuB,EAAA,KACAL,EAAAf,EAAAC,EAAAqB,EAAAL,GAAAC,GACAjB,EAAA,IACAgB,IAIAhB,IACAa,EAGA,OAAArB,EAAAH,KAAA,IA4CA3B,GAMA6D,QAAA,QAQAC,MACAxE,OAAAsC,EACArC,OAAA0C,GAEA3C,SACAC,SACAwE,QA/BA,SAAArB,GACA,OAAAlB,EAAAkB,EAAA,SAAAjB,GACA,OAAAd,EAAAqD,KAAAvC,GACA,OAAAlC,EAAAkC,GACAA,KA4BAwC,UAnDA,SAAAvB,GACA,OAAAlB,EAAAkB,EAAA,SAAAjB,GACA,OAAAf,EAAAsD,KAAAvC,GACAnC,EAAAmC,EAAAxI,MAAA,GAAAiL,eACAzC,WA4DG9N,KAFH8L,EAAA,WACA,OAAAO,GACGtM,KAAAjM,EAAAqG,EAAArG,EAAAyM,QAAAzM,QAAAgY,GAngBF,0DCDDvL,EAAAzM,QAAAqG,EAAAqW,EAAA,qECEA,IAAApU,EAAAjC,EAAA,QACAsH,EAAAtH,EAAA,QACAsW,EAAAtW,EAAA,QACAuW,EAAAvW,EAAA,QACA+L,EAAA/L,EAAA,QACAgM,EAAAhM,EAAA,QAeAwW,EAAA,SAAAnU,EAAAsF,EAAAC,GACAvH,KAAA2H,SAAA3F,EACAhC,KAAA4H,YAAAN,EACAtH,KAAA6H,QAAAN,EACAvH,KAAAoW,SACApW,KAAAqW,cACArW,KAAAgI,oBAAAT,EAAAU,0BACAjI,KAAAkI,qBAAA,IAAAjB,EAAAjH,KAAA6H,QAAA7H,KAAAsW,WAAA/T,KAAAvC,QAsBAmW,EAAA7S,UAAAiT,QAAA,SAAAxU,EAAAkD,GACA,oBAAAlD,GAAA,IAAAA,EAAAE,OACA,UAAAC,MAAA,yBAEA,GAAAlC,KAAAqW,WAAAtU,GACA,UAAAG,MAAA,OAAAH,EAAA,uBAEA,sBAAAkD,EACA,UAAA/C,MAAA,6BAGAlC,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAK,IACA8G,OACAsD,OAAAzD,EAAAnF,QAAAY,YAEA2C,KAAAqW,WAAAtU,GAAAkD,EACAjF,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAK,IAAA2G,EAAAnF,QAAAY,WAAA0E,KAWAoU,EAAA7S,UAAAkT,UAAA,SAAAzU,GACA,oBAAAA,GAAA,IAAAA,EAAAE,OACA,UAAAC,MAAA,yBAGAlC,KAAAqW,WAAAtU,YACA/B,KAAAqW,WAAAtU,GACA/B,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAK,IACA8G,OACAsD,OAAAzD,EAAAnF,QAAAa,cAEA0C,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAK,IAAA2G,EAAAnF,QAAAa,aAAAyE,MAeAoU,EAAA7S,UAAAmT,KAAA,SAAA1U,EAAAtC,EAAAwF,GACA,oBAAAlD,GAAA,IAAAA,EAAAE,OACA,UAAAC,MAAA,yBAEA,sBAAA+C,EACA,UAAA/C,MAAA,6BAGA,IAAAwU,EAAA1W,KAAA6H,QAAA8O,SACAC,EAAAjL,EAAAgC,MAAAlO,GAEAO,KAAAoW,MAAAM,GAAA,IAAAR,EAAAnU,EAAAkD,EAAAjF,KAAA2H,SAAA3H,KAAA6H,SACA7H,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAK,IAAA2G,EAAAnF,QAAA4B,SAAA0D,EAAA2U,EAAAE,KAaAT,EAAA7S,UAAAuT,QAAA,SAAA3M,EAAA4M,EAAAC,GACA,IAAAC,EAAAhX,KAAAoW,MAAAlM,GAEA,OAAA8M,IACAhX,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAK,IAAA2G,EAAA7G,MAAAa,oBAAAmb,GACA,OAiBAZ,EAAA7S,UAAA2T,cAAA,SAAA7R,GACA,IAAArD,EAAAqD,EAAA3F,KAAA,GACAyK,EAAA9E,EAAA3F,KAAA,GACAA,EAAA,KACAyX,OAAA,EAEA9R,EAAA3F,KAAA,KACAA,EAAAiM,EAAAyC,aAAA/I,EAAA3F,KAAA,GAAAO,KAAA6H,UAGA7H,KAAAqW,WAAAtU,IACAmV,EAAA,IAAAjB,EAAAjW,KAAA4H,YAAA7F,EAAAmI,GACAlK,KAAAqW,WAAAtU,GAAAtC,EAAAyX,IAEAlX,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAK,IAAA2G,EAAAnF,QAAA8B,WAAAwD,EAAAmI,KAaAiM,EAAA7S,UAAAwK,SAAA,SAAA1I,GACA,IAAA0R,OAAA,EACA5M,OAAA,EAGA,GAAA9E,EAAAC,SAAAzD,EAAAnF,QAAA4B,QAMA,GAAA+G,EAAAC,SAAAzD,EAAAnF,QAAAG,KAAAwI,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAY,WAAA+H,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAa,YAAA,CAMA,GAAA8H,EAAAC,SAAAzD,EAAAnF,QAAA3C,MAAA,CACA,GAAAsL,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAkB,yBACA,OAEA,GAAAmJ,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAc,gBAAAuJ,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAAY,UAMA,YALA2C,KAAAgI,oBAAAmB,QACAiB,MAAAxI,EAAAhH,MAAAK,IACAoK,OAAAzD,EAAAnF,QAAAY,UACA0E,KAAAqD,EAAA3F,KAAA,KAUA2F,EAAAC,SAAAzD,EAAAnF,QAAA3C,OAAAsL,EAAAC,SAAAzD,EAAAnF,QAAAG,KAEAsN,EADA9E,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAc,gBAAAuJ,EAAA3F,KAAA,KAAAmC,EAAAnF,QAAA4B,QACA+G,EAAA3F,KAAA,GAEA2F,EAAA3F,KAAA,GAEAqX,EAAA1R,EAAA3F,KAAA,KAEAqX,EAAA1R,EAAA3F,KAAA,GACAyK,EAAA9E,EAAA3F,KAAA,IAMA,IAAAuX,EAAAhX,KAAA6W,QAAA3M,EAAA4M,EAAA1R,EAAA0K,KACA,OAAAkH,IAKA5R,EAAAC,SAAAzD,EAAAnF,QAAAG,IACAoa,EAAAG,MACG/R,EAAAC,SAAAzD,EAAAnF,QAAA6B,UACH0Y,EAAAI,QAAAhS,EAAA3F,KAAA,WACAO,KAAAoW,MAAAlM,IACG9E,EAAAC,SAAAzD,EAAAnF,QAAA3C,QACHsL,EAAAgE,gBAAA,EACA4N,EAAA3I,MAAAjJ,EAAA3F,KAAA,WACAO,KAAAoW,MAAAlM,UApDAlK,KAAAgI,oBAAAsB,MAAAlE,QANApF,KAAAiX,cAAA7R,IAoEA+Q,EAAA7S,UAAAgT,WAAA,WACA,QAAAQ,KAAA9W,KAAAqW,WACArW,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAK,IAAA2G,EAAAnF,QAAAY,WAAAyZ,KAIA/Q,EAAAzM,QAAA6c,qCClQA,IAAAvU,EAAAjC,EAAA,QACA+L,EAAA/L,EAAA,QAeAuW,EAAA,SAAAnU,EAAAkD,EAAAjD,EAAAuF,GACAvH,KAAA2H,SAAA3F,EACAhC,KAAAqX,UAAApS,EACAjF,KAAA6H,QAAAN,EACAvH,KAAAgI,oBAAAT,EAAAU,0BACAjI,KAAAsX,YAAAtX,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAK,IACAoK,OAAAzD,EAAAnF,QAAAG,IACAmF,OACAwV,QAAAvX,KAAA2H,SAAA6P,cACAvS,SAAAjF,KAAAqO,MAAA9L,KAAAvC,QAEAA,KAAAyX,iBAAAzX,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAK,IACAoK,OAAAzD,EAAAnF,QAAA4B,QACA0D,OACA2M,MAAA9M,EAAA7G,MAAAW,iBACA6b,QAAAvX,KAAA2H,SAAA+P,mBACAzS,SAAAjF,KAAAqO,MAAA9L,KAAAvC,SAUAkW,EAAA5S,UAAA6T,IAAA,WACAnX,KAAAgI,oBAAAmB,QACAwO,MAAA3X,KAAAsX,eAaApB,EAAA5S,UAAA8T,QAAA,SAAA3X,GACA,IAAAmY,EAAAlM,EAAAyC,aAAA1O,EAAAO,KAAA6H,SACA7H,KAAAqX,UAAA,KAAAO,GACA5X,KAAA6X,aAcA3B,EAAA5S,UAAA+K,MAAA,SAAAkJ,GACAvX,KAAAqX,UAAAE,EAAA7I,OAAA6I,GACAvX,KAAA6X,aAUA3B,EAAA5S,UAAAuU,UAAA,WACA7X,KAAAgI,oBAAAmB,QACAwO,MAAA3X,KAAAsX,cAEAtX,KAAAgI,oBAAAmB,QACAwO,MAAA3X,KAAAyX,oBAIA1R,EAAAzM,QAAA4c,qCChGA,IAAAlQ,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAA3C,UAAA,gBAAA6C,GAE5I2R,EAAAnY,EAAA,QACAsH,EAAAtH,EAAA,QACA+B,EAAA/B,EAAA,QACAiC,EAAAjC,EAAA,QACAgM,EAAAhM,EAAA,QACA+L,EAAA/L,EAAA,QACAoQ,EAAApQ,EAAA,QAgBAgC,EAAA,SAAAI,EAAAsK,EAAA/E,EAAAtF,EAAAuF,GACA,oBAAAxF,GAAA,IAAAA,EAAAE,OACA,UAAAC,MAAA,yBAGAlC,KAAA+B,OACA/B,KAAAyM,OAAA,EACAzM,KAAA+X,eAAA1L,EACArM,KAAA4H,YAAAN,EACAtH,KAAA6H,QAAAN,EACAvH,KAAA2H,SAAA3F,EACAhC,KAAA6C,SAAA,EACA7C,KAAA4C,aAAA,EACA5C,KAAAgY,aAAA,EACAhY,KAAAiY,OAAA5Y,OAAAuP,OAAA,MACA5O,KAAA0V,QAAA,KACA1V,KAAAkY,cAAA,IAAAxW,EACA1B,KAAAmY,sBACAnY,KAAAgM,mBAEAhM,KAAAoY,eAAA,KACApW,EAAAqW,eACArY,KAAAsY,iBAAAtW,EAAAqW,eAGArY,KAAAgI,oBAAAT,EAAAU,0BACAjI,KAAAkI,qBAAA,IAAAjB,EAAAjH,KAAA6H,QAAA7H,KAAAuY,UAAAhW,KAAAvC,OAEAA,KAAAwY,gBAAAxY,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAI,OACA+G,OACAsD,OAAAzD,EAAAnF,QAAAY,UACAka,QAAAvX,KAAA2H,SAAA8Q,uBAEAzY,KAAAyX,iBAAAzX,KAAAgI,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAI,OACA+G,OACAsD,OAAAzD,EAAAnF,QAAAO,KACA0R,MAAA9M,EAAA7G,MAAAW,iBACA6b,QAAAvX,KAAA2H,SAAAwE,oBAEAnM,KAAAuY,aAGA7W,EAAAC,EAAA2B,WAcA3B,EAAA2B,UAAAgV,iBAAA,SAAAD,GACA,sBAAAA,EAGA,UAAAnW,MAAA,8CAFAlC,KAAAoY,eAAAC,GAoBA1W,EAAA2B,UAAAG,IAAA,SAAAsB,GACA,OAAA+S,EAAArU,IAAAzD,KAAAiY,OAAAlT,EAAA/E,KAAA2H,SAAA+Q,iBAiBA/W,EAAA2B,UAAAW,IAAA,SAAAqJ,EAAAC,EAAAtI,GACA,IAAAF,OAAA,EACAtF,OAAA,EACA,OAAAqF,UAAA7C,OAAA,CAEA,wBAAAqL,EAAA,YAAAtH,EAAAsH,IACA,UAAApL,MAAA,yBAEAzC,EAAA6N,OACG,OAAAxI,UAAA7C,OACH,oBAAAqL,GAAA,IAAAA,EAAArL,QAAA,mBAAAsL,EAEAxI,EAAAuI,EACA7N,EAAA8N,MACK,yBAAAD,EAAA,YAAAtH,EAAAsH,KAAA,mBAAAC,EAKL,UAAArL,MAAA,yBAHAzC,EAAA6N,EACArI,EAAAsI,OAIG,OAAAzI,UAAA7C,OAAA,CAEH,oBAAAqL,GAAA,IAAAA,EAAArL,QAAA,mBAAAgD,EACA,UAAA/C,MAAA,oEAEA6C,EAAAuI,EACA7N,EAAA8N,EAGA,IAAAxI,IAAA,OAAAtF,GAAA,qBAAAA,EAAA,YAAAuG,EAAAvG,KACA,UAAAyC,MAAA,+DAGA,GAAAlC,KAAA2Y,gBAAA,OACA,OAAA3Y,KAGA,IAAAA,KAAA6C,QAEA,OADA7C,KAAAmY,mBAAApU,MAAkC6U,OAAA,MAAA9P,KAAAhE,YAClC9E,KAGA,IAAAmQ,EAAAnQ,KAAAiY,OACA7H,EAAA0H,EAAA7T,IAAAkM,EAAApL,EAAAtF,EAAAO,KAAA2H,SAAA+Q,gBAEA,GAAAvI,IAAAC,EAAA,CACA,sBAAAnL,EAAA,CACA,IAAA4T,EAAA,KACA9I,EAAA+I,YAAA9Y,KAAA6H,WACAgR,EAAA,oEAEA9I,EAAAgJ,oBAAA,WACA,OAAA9T,EAAA4T,KAGA,OAAA7Y,KAGA,IAAA4N,OAAA,EAcA,MAbA,mBAAA3I,KACA2I,MACAC,cAAA,EACAkC,EAAA+I,YAAA9Y,KAAA6H,SAKA7H,KAAAgZ,eAAAhZ,KAAA0V,QAAAzQ,GAJA8K,EAAAgJ,oBAAA,WACA,OAAA9T,EAAA,uEAMAjF,KAAAiZ,YAAAlU,EAAAtF,EAAAmO,GACA5N,KAAAkZ,aAAA9I,GACApQ,MAuBA2B,EAAA2B,UAAAqB,UAAA,SAAAI,EAAAE,EAAAuF,GACA,IAAA2O,EAAAnZ,KAEA8I,EAAA9I,KAAA6E,oBAAAC,WAEA,QAAAU,IAAAsD,EAAA/D,OAAA,iBAAA+D,EAAA/D,MAAA,IAAA+D,EAAA/D,KAAA9C,QACA,UAAAC,MAAA,yBAEA,sBAAA4G,EAAA7D,SACA,UAAA/C,MAAA,6BAGAlC,KAAA2Y,gBAAA,eAIA7P,EAAA0B,WACAxK,KAAAqD,UAAA,WACA8V,EAAAjB,cAAA1V,GAAAsG,EAAA/D,KAAA+D,EAAA7D,UACA6D,EAAA7D,SAAAkU,EAAA1V,IAAAqF,EAAA/D,SAGA/E,KAAAkY,cAAA1V,GAAAsG,EAAA/D,KAAA+D,EAAA7D,YAuBAtD,EAAA2B,UAAA6B,YAAA,SAAAiU,EAAAnU,GACA,IAAA6D,EAAA9I,KAAA6E,oBAAAC,WAEA,QAAAU,IAAAsD,EAAA/D,OAAA,iBAAA+D,EAAA/D,MAAA,IAAA+D,EAAA/D,KAAA9C,QACA,UAAAC,MAAA,yBAEA,QAAAsD,IAAAsD,EAAA7D,UAAA,mBAAA6D,EAAA7D,SACA,UAAA/C,MAAA,6BAGAlC,KAAA2Y,gBAAA,gBAGA3Y,KAAAkY,cAAAhP,IAAAJ,EAAA/D,KAAA+D,EAAA7D,WAUAtD,EAAA2B,UAAAF,QAAA,WACA,IAAAiW,EAAArZ,KAEAA,KAAA2Y,gBAAA,YAGA3Y,KAAAqD,UAAA,WACAgW,EAAA5M,SACA4M,EAAA5M,QAAA,IACA4M,EAAA5W,KAAA,kBACA4W,EAAAC,gBAAAD,EAAArR,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAI,OACA+G,KAAAsX,EAAAtX,KACAsD,OAAAzD,EAAAnF,QAAAa,cAEA+b,EAAAzR,YAAAe,QAAA/G,EAAAhH,MAAAI,OAAA4G,EAAAnF,QAAAa,aAAA+b,EAAAtX,WAWAJ,EAAA2B,UAAAH,OAAA,WACA,IAAAoW,EAAAvZ,KAEAA,KAAA2Y,gBAAA,WAGA3Y,KAAAqD,UAAA,WACAkW,EAAA9W,KAAA,kBACA8W,EAAAC,kBAAAD,EAAAvR,oBAAAmC,KACAC,MAAAxI,EAAAhH,MAAAI,OACA+G,KAAAwX,EAAAxX,KACAsD,OAAAzD,EAAAnF,QAAAW,OACAsR,MAAA9M,EAAA7G,MAAAY,eACA4b,QAAAgC,EAAA5R,SAAA8R,sBAEAF,EAAA3R,YAAAe,QAAA/G,EAAAhH,MAAAI,OAAA4G,EAAAnF,QAAAW,QAAAmc,EAAAxX,UAaAJ,EAAA2B,UAAAD,UAAA,SAAA4B,IACA,IAAAjF,KAAA6C,QACAoC,EAAAjF,MAEAA,KAAA4I,KAAA,QAAA3D,EAAA1C,KAAAvC,aAYA2B,EAAA2B,UAAAyK,YAAA,SAAA3I,GACA,GAAAA,EAAAC,SAAAzD,EAAAnF,QAAAO,KACA,OAAAgD,KAAA0V,SACA1V,KAAAgI,oBAAAsB,MAAAlE,GACApF,KAAA0Z,QAAAtU,IAEApF,KAAAsC,aAAA8C,EAAApF,KAAA6H,cAEG,GAAAzC,EAAAC,SAAAzD,EAAAnF,QAAAG,IACHoD,KAAA2Z,mBAAAvU,QACG,GAAAA,EAAAC,SAAAzD,EAAAnF,QAAAS,QAAAkI,EAAAC,SAAAzD,EAAAnF,QAAAU,MACH6C,KAAAsC,aAAA8C,EAAApF,KAAA6H,cACG,GAAAzC,EAAAC,SAAAzD,EAAAnF,QAAAiC,sBACHiD,EAAAyM,6BAAAhJ,EAAApF,KAAAgM,gBAAAhM,KAAA6H,cACG,GAAAzC,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAgB,eAEHiE,KAAA4Z,eAAAxU,EAAA3F,KAAA,GAAA8J,KAAAC,MAAApE,EAAA3F,KAAA,IAAA2F,QACG,GAAAA,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAc,eACHmE,KAAA6Z,sBACG,GAAAzU,EAAAC,SAAAzD,EAAAnF,QAAAmB,0BAAA,CACH,IAAAoa,EAAAtM,EAAAyC,aAAA/I,EAAA3F,KAAA,GAAAO,KAAA6H,SACA7H,KAAAgY,cACAhY,KAAAyC,KAAA,qBAAAuV,KAIArW,EAAAyM,6BAAA,SAAAhJ,EAAAsE,EAAAnC,GAEA,IADA,IAAAuS,EAAAvQ,KAAAC,MAAApE,EAAA3F,KAAA,IACAqE,EAAA,EAAiBA,EAAAgW,EAAA7X,OAAqB6B,IAAA,CACtC,IAAAmB,EAAAyE,EAAAoQ,EAAAhW,SACA0B,IAAAP,IACAA,EAAAyG,EAAAyC,aAAA/I,EAAA3F,KAAA,GAAA8H,WACAmC,EAAAoQ,EAAAhW,OAiBAnC,EAAA2B,UAAAsW,eAAA,SAAAG,EAAAC,EAAA5U,GACAA,EAAAgE,gBAAA,EACApJ,KAAAoY,eACApY,KAAAoY,eAAApY,KAAAga,EAAAD,EAAA/Z,KAAAia,mBAAA1X,KAAAvC,KAAA+Z,EAAAC,EAAA5U,IAEApF,KAAAyC,KAAA,QAAAb,EAAA7G,MAAAgB,eAAA,uBAAAge,EAAA,mBAAA/Z,KAAA0V,UAIA/T,EAAA2B,UAAA2V,YAAA,SAAAlU,EAAAtF,EAAAmO,GACA5N,KAAA0V,UACA,IAAAwE,OAAA,EACAnV,GAIAmV,OAAA1U,IAAAoI,GAAA5N,KAAA+B,KAAA/B,KAAA0V,QAAA3Q,EAAA4G,EAAAgC,MAAAlO,KAAAO,KAAA+B,KAAA/B,KAAA0V,QAAA3Q,EAAA4G,EAAAgC,MAAAlO,GAAAmO,GACA5N,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAI,OAAA4G,EAAAnF,QAAAU,MAAA+c,KAJAA,OAAA1U,IAAAoI,GAAA5N,KAAA+B,KAAA/B,KAAA0V,QAAAjW,IAAAO,KAAA+B,KAAA/B,KAAA0V,QAAAjW,EAAAmO,GACA5N,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAI,OAAA4G,EAAAnF,QAAAS,OAAAgd,KAmBAvY,EAAA2B,UAAA2W,mBAAA,SAAAF,EAAAC,EAAA5U,EAAAiJ,EAAA5O,GACA,GAAA4O,EAgCArO,KAAAyC,KAAA,QAAAb,EAAA7G,MAAAgB,eAAA,uBAAAge,EAAA,mBAAA/Z,KAAA0V,aAhCA,CACA,IAAAyE,EAAAna,KAAA0V,QACA1V,KAAA0V,QAAAqE,EAEA,IAAA5J,EAAAnQ,KAAAiY,OAEA,GAAAlI,EAAAqK,WAAAjK,EAAA6J,GACA,OAGA,IAAA5J,EAAA0H,EAAA7T,IAAAkM,OAAA3K,EAAA/F,GAAA,GAEA,GAAAsQ,EAAAqK,WAAA3a,EAAAua,GAAA,CACAha,KAAAkZ,aAAAzZ,GAEA,IAAAwF,EAAAjF,KAAAgM,gBAAA+N,GAKA,iBAJAvU,IAAAP,IACAA,EAAA,aACAjF,KAAAgM,gBAAA+N,KAKA,IAAAnM,EAAAxI,EAAA3F,KAAA,GACA,GAAAmO,GAAArE,KAAAC,MAAAoE,GAAAC,aAAA,CACA,IAAAwJ,EAAArX,KAAAgM,gBAAAmO,UACAna,KAAAgM,gBAAAmO,GACAna,KAAAgZ,eAAAhZ,KAAA0V,QAAA2B,GAEArX,KAAAiZ,iBAAAzT,EAAA/F,EAAAmO,GACA5N,KAAAkZ,aAAA9I,KAeAzO,EAAA2B,UAAAqW,mBAAA,SAAAvU,GACA,IAAAiV,EAAAjV,EAAA3F,KAAA,GAEA4a,IAAAzY,EAAAnF,QAAAY,UACA2C,KAAAgI,oBAAAsB,MAAAlE,GACGiV,IAAAzY,EAAAnF,QAAAW,QACH4C,KAAAyC,KAAA,UACAzC,KAAAsa,YACGD,IAAAzY,EAAAnF,QAAAa,cACH0C,KAAAyC,KAAA,WACAzC,KAAAsa,aAYA3Y,EAAA2B,UAAAhB,aAAA,SAAA8C,GACA,IAAAsQ,EAAA6E,SAAAnV,EAAA3F,KAAA,OACAA,OAAA,EAOA,GALAA,EADA2F,EAAAC,SAAAzD,EAAAnF,QAAAU,MACAuO,EAAAyC,aAAA/I,EAAA3F,KAAA,GAAAO,KAAA6H,SAEA0B,KAAAC,MAAApE,EAAA3F,KAAA,IAGA,OAAAO,KAAA0V,QACA1V,KAAA0V,eACG,GAAA1V,KAAA0V,QAAA,IAAAA,EAUH,YATAtQ,EAAAC,SAAAzD,EAAAnF,QAAAU,MAKA6C,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAI,OAAA4G,EAAAnF,QAAAe,UAAAwC,KAAA+B,OAEA/B,KAAA4Z,eAAAlE,EAAAjW,EAAA2F,IAKApF,KAAA0V,UACA1V,KAAAkZ,aAAApB,EAAA7T,IAAAjE,KAAAiY,OAAA7S,EAAAC,SAAAzD,EAAAnF,QAAAU,MAAAiI,EAAA3F,KAAA,QAAA+F,EAAA/F,KAWAkC,EAAA2B,UAAAoW,QAAA,SAAAtU,GACApF,KAAA0V,QAAA6E,SAAAnV,EAAA3F,KAAA,OACAO,KAAAkZ,aAAApB,EAAA7T,IAAAjE,KAAAiY,YAAAzS,EAAA+D,KAAAC,MAAApE,EAAA3F,KAAA,MACAO,KAAAwa,aAUA7Y,EAAA2B,UAAAkX,UAAA,WACAxa,KAAA6C,SAAA,EACA,QAAAiB,EAAA,EAAiBA,EAAA9D,KAAAmY,mBAAAlW,OAAoC6B,IACrD9D,UAAAmY,mBAAArU,GAAA8U,QAAA7N,MAAA/K,UAAAmY,mBAAArU,GAAAgF,MAEA9I,KAAAmY,sBACAnY,KAAAyC,KAAA,UAGAd,EAAA2B,UAAA0V,eAAA,SAAAyB,EAAAxV,GACA,IAAAyV,EAAAC,OAAA3a,KAAA0V,SAAA,EACA1V,KAAAgM,gBAAA0O,GAAAzV,GAUAtD,EAAA2B,UAAAiV,UAAA,WACAvY,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAI,OAAA4G,EAAAnF,QAAA0B,cAAA6B,KAAA+B,QAUAJ,EAAA2B,UAAA4V,aAAA,SAAA0B,GACA,IAAA5a,KAAA4C,YAAA,CAIA,IAAAiY,EAAA7a,KAAAiY,OACAjY,KAAAiY,OAAA2C,EAGA,IADA,IAAAE,EAAA9a,KAAAkY,cAAAlJ,aACAlL,EAAA,EAAiBA,EAAAgX,EAAA7Y,OAAkB6B,IAAA,CACnCgU,EAAArU,IAAAmX,EAAAE,EAAAhX,IAAA,KACAgU,EAAArU,IAAAoX,EAAAC,EAAAhX,IAAA,IAGA9D,KAAAkY,cAAAzV,KAAAqY,EAAAhX,GAAA9D,KAAAyD,IAAAqX,EAAAhX,QAaAnC,EAAA2B,UAAAuB,oBAAA,SAAAiE,GAGA,OAAAA,EAAA7G,QAAA,WAAA+D,EAAA8C,EAAA,IACA,OAAAA,EAAA,GAKA,IAFA,IAAA+H,EAAAxR,OAAAuP,OAAA,MAEA9K,EAAA,EAAiBA,EAAAgF,EAAA7G,OAAiB6B,IAClC,iBAAAgF,EAAAhF,GACA+M,EAAA9L,KAAA+D,EAAAhF,GACK,mBAAAgF,EAAAhF,GACL+M,EAAA5L,SAAA6D,EAAAhF,GACK,kBAAAgF,EAAAhF,KACL+M,EAAArG,WAAA1B,EAAAhF,IAIA,OAAA+M,GASAlP,EAAA2B,UAAAuW,eAAA,WACA7Z,KAAAgI,oBAAAmB,QAAmCwO,MAAA3X,KAAAwY,gBAAAuC,QAAA,IACnC/a,KAAAgI,oBAAAmB,QAAmCwO,MAAA3X,KAAAyX,iBAAAsD,QAAA,IACnC/a,KAAAgI,oBAAAmB,QAAmCwO,MAAA3X,KAAAwZ,kBAAAuB,QAAA,IACnC/a,KAAAgI,oBAAAmB,QAAmCwO,MAAA3X,KAAAsZ,gBAAAyB,QAAA,KAYnCpZ,EAAA2B,UAAAqV,gBAAA,SAAA/N,GACA,QAAA5K,KAAA4C,cACA5C,KAAAyC,KAAA,yBAAAmI,EAAA,cAAA5K,KAAA+B,KAAA,2BACA,IAaAJ,EAAA2B,UAAAgX,SAAA,WACAta,KAAA6Z,iBACA7Z,KAAAkY,cAAAhP,MACAlJ,KAAAkI,qBAAAkD,UACApL,KAAA4C,aAAA,EACA5C,KAAA6C,SAAA,EACA7C,KAAA6H,QAAA,KACA7H,KAAAkY,cAAA,KACAlY,KAAA4H,YAAA,MAGA7B,EAAAzM,QAAAqI,4DC9qBA,IAAAqE,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAA3C,UAAA,gBAAA6C,GAE5IvE,EAAAjC,EAAA,QAEAqb,EAAApZ,EAAAzH,uBAYAb,EAAA2hB,OAAA,SAAA7Q,EAAA/E,EAAA5F,GACA,GAAAA,kBAAAiE,OACA,UAAAxB,MAAA,yBAEA,IAAAgZ,GAAA9Q,EAAA/E,GAEA,GAAA5F,EACA,QAAAqE,EAAA,EAAmBA,EAAArE,EAAAwC,OAAiB6B,IACpC,WAAAkC,EAAAvG,EAAAqE,IACAoX,EAAAnX,KAAAwF,KAAA8H,UAAA5R,EAAAqE,KAEAoX,EAAAnX,KAAAtE,EAAAqE,IAKA,OAAAoX,EAAA1H,KAAAwH,GAAApZ,EAAA5H,mBAcAV,EAAAqU,MAAA,SAAAlF,GACA,IAAAlJ,OAAA,IAAAkJ,EAAA,YAAAzC,EAAAyC,GAEA,cAAAlJ,EACA,OAAAqC,EAAAxH,MAAAC,OAAAoO,EAGA,UAAAA,EACA,OAAA7G,EAAAxH,MAAAI,KAGA,cAAA+E,EACA,OAAAqC,EAAAxH,MAAAE,OAAAiP,KAAA8H,UAAA5I,GAGA,cAAAlJ,EACA,OAAAqC,EAAAxH,MAAAG,OAAAkO,EAAAgH,WAGA,QAAAhH,EACA,OAAA7G,EAAAxH,MAAAK,KAGA,QAAAgO,EACA,OAAA7G,EAAAxH,MAAAM,MAGA,QAAA8K,IAAAiD,EACA,OAAA7G,EAAAxH,MAAAO,UAGA,UAAAuH,MAAA,wBAAAuG,4DC7EA,IAAA7G,EAAAjC,EAAA,QACAsH,EAAAtH,EAAA,QAeA6L,EAAA,SAAApB,EAAAyC,EAAA5H,EAAAjD,EAAAuF,EAAAD,GACAtH,KAAAmb,OAAA/Q,EACApK,KAAAqX,UAAApS,EACAjF,KAAAob,SAAAvO,EACA7M,KAAA2H,SAAA3F,EACAhC,KAAA6H,QAAAN,EACAvH,KAAA4H,YAAAN,EACAtH,KAAAgI,oBAAAT,EAAAU,0BACAjI,KAAAgI,oBAAAmC,KACAC,MAAApK,KAAAmb,OACApZ,KAAA8K,EACAxH,OAAAzD,EAAAnF,QAAAoB,SAGAmC,KAAAkI,qBAAA,IAAAjB,EAAAM,EAAAvH,KAAAqb,YAAA9Y,KAAAvC,OACAA,KAAAqb,cACArb,KAAA8M,gBAAA,GAGAtB,EAAAlI,UAAA2J,YAAA,WACAjN,KAAA8M,gBAAA,EACA9M,KAAA4H,YAAAe,QAAA3I,KAAAmb,OAAAvZ,EAAAnF,QAAAqB,UAAAkC,KAAAob,WACApb,KAAAkI,qBAAAkD,WAQAI,EAAAlI,UAAA8H,QAAA,WACApL,KAAAqX,UAAA,KACArX,KAAAob,SAAA,KACApb,KAAA6H,QAAA,KACA7H,KAAA4H,YAAA,MAYA4D,EAAAlI,UAAAgY,OAAA,SAAAvZ,GACA/B,KAAA4H,YAAAe,QAAA3I,KAAAmb,OAAAvZ,EAAAnF,QAAAsB,eAAAiC,KAAAob,SAAArZ,KAaAyJ,EAAAlI,UAAAiY,OAAA,SAAAxZ,GACA/B,KAAA4H,YAAAe,QAAA3I,KAAAmb,OAAAvZ,EAAAnF,QAAAuB,eAAAgC,KAAAob,SAAArZ,KASAyJ,EAAAlI,UAAAkY,wBAAA,SAAApW,GACA,OACAkW,OAAAtb,KAAAsb,OAAA/Y,KAAAvC,KAAAoF,EAAA3F,KAAA,IACA8b,OAAAvb,KAAAub,OAAAhZ,KAAAvC,KAAAoF,EAAA3F,KAAA,MAUA+L,EAAAlI,UAAAyK,YAAA,SAAA3I,GACAA,EAAAC,SAAAzD,EAAAnF,QAAAG,IACAoD,KAAAgI,oBAAAsB,MAAAlE,GACGA,EAAAC,SAAAzD,EAAAnF,QAAAiB,+BACHsC,KAAAqX,UAAAjS,EAAA3F,KAAA,MAAAO,KAAAwb,wBAAApW,IACGA,EAAAC,SAAAzD,EAAAnF,QAAAkB,iCACHqC,KAAAqX,UAAAjS,EAAA3F,KAAA,OAEAO,KAAA6H,QAAAwB,UAAArJ,KAAAmb,OAAAvZ,EAAA7G,MAAAa,oBAAAwJ,EAAA3F,KAAA,OAAA2F,EAAA3F,KAAA,KAUA+L,EAAAlI,UAAA+X,YAAA,WACArb,KAAA4H,YAAAe,QAAA3I,KAAAmb,OAAAvZ,EAAAnF,QAAAoB,QAAAmC,KAAAob,YAGArV,EAAAzM,QAAAkS,mJCxEAiQ,GACA1Z,KAAA,YACAtC,KAFA,WAGA,OACAic,UAEAC,MAAA,MACA9U,IAAA,YACA+U,UAAA,EACAC,MAAA,IACA/b,OAAA,SAAAgc,EAAAC,GACA,OAAAD,EACA,KAEAzb,OACA2b,KAAA,yBAAAD,EAAAE,IAAAC,UACA3V,OAAA,WAGAwV,EAAAE,IAAAC,cAKAP,MAAA,OACA9U,IAAA,aAGA8U,MAAA,OACA9U,IAAA,eACAgV,MAAA,KAGAF,MAAA,MACA9U,IAAA,cACAgV,MAAA,KAGAF,MAAA,OACA9U,IAAA,UACA+U,UAAA,EACAC,MAAA,IACA/b,OAAA,SAAAgc,EAAAC,GAmBA,OAAAD,EAAA,OAjBA,SAAAK,GACA,IAAAC,EAAA,IAAAC,KAAAF,GACAG,EAAAF,EAAAG,cACAlH,EAAA+G,EAAAI,WAAA,EACAnH,IAAA,OAAAA,IACA,IAAAoH,EAAAL,EAAAM,UACAD,IAAA,OAAAA,IACA,IAAAX,EAAAM,EAAAO,WACAb,IAAA,OAAAA,IACA,IAAAc,EAAAR,EAAAS,aACAC,EAAAV,EAAAW,aAGA,OACAT,EAAA,IAAAjH,EAAA,IAAAoH,EAAA,IAAAX,EAAA,KAHAc,IAAA,OAAAA,KAGA,KAFAE,IAAA,OAAAA,KAKAE,CAAAjB,EAAAE,IAAAgB,aAIAC,cACAC,SAAA,EACAC,UAAA,EACAC,SAAA,EACAC,YAAA,EACAC,YAAA,EACAC,YAEAtB,UAAA,GACAuB,YAAA,GACAR,WACAS,aAAA,GACAC,SAAA,IAEAC,QAAA,EACAC,YAAA,KACAC,WAAA,aAGA3e,OAAA,qCAEA4e,OACAC,QACAC,QAAA,SAAAxV,EAAA0H,GACAnQ,KAAAke,gBAGAC,MAAA,SAAA1V,EAAA0H,GACAnQ,KAAAud,WAAA9U,IAIA7I,SAIAwe,kBAJA,SAIAd,GAAA,IAAAnE,EAAAnZ,KACAA,KAAAsd,cACA,IAAAL,EAAA,GACAjd,KAAAwd,WAAAP,QAAAhb,OAAA,GAAAjC,KAAAwd,WAAAP,QAAA,KACAA,EACA5d,OAAA0Q,EAAA,EAAA1Q,CAAAW,KAAAwd,WAAAP,QAAA,iBACA,IACA5d,OAAA0Q,EAAA,EAAA1Q,CAAAW,KAAAwd,WAAAP,QAAA,kBAEA,IAAAlB,GACAxc,KAAAS,KAAAT,KACA8e,KAAAre,KAAAsd,YACAU,OAAAhe,KAAAge,OACAM,MAAAte,KAAAqd,SACAkB,QACArC,UAAAlc,KAAAwd,WAAAtB,UACAuB,YAAAzd,KAAAwd,WAAAC,YACAC,aAAA1d,KAAAwd,WAAAE,aACAC,SAAA3d,KAAAwd,WAAAG,SACAV,YAGA,QAAAuB,KAAAzC,EAAAwC,OACAxC,EAAAwC,OAAAC,WACAzC,EAAAwC,OAAAC,GAIAxe,KAAAmd,SAAA,EACA9d,OAAAof,EAAA,EAAApf,CAAA0c,GAAA2C,KAAA,SAAAC,GACAxF,EAAAiE,UAAAuB,EAAAC,MACAzF,EAAA+D,WAAAyB,EAAAE,aACA1F,EAAAgE,SAAA,KASA2B,WA7CA,SA6CAC,EAAAlY,EAAAmY,KAGAC,mBAhDA,SAgDA3T,GACAA,IACAtL,KAAAkf,MAAA,aAAAf,OAAA,EAAAH,OAAA,KACAhe,KAAAwd,WAAAtB,UAAA,GACAlc,KAAAwd,WAAAC,YAAA,GACAzd,KAAAwd,WAAAP,QAAA,GACAjd,KAAAwd,WAAAE,aAAA,GACA1d,KAAAwd,WAAAG,SAAA,GACA3d,KAAA4d,QAAA,EACA5d,KAAAsd,YAAA,EACAtd,KAAA6d,YAAA,OAKAsB,gBAAA,WACAnf,KAAAwd,WAAAtB,UAAA,GACAlc,KAAAwd,WAAAC,YAAA,GACAzd,KAAAwd,WAAAP,QAAA,GACAjd,KAAAwd,WAAAE,aAAA,GACA1d,KAAAwd,WAAAG,SAAA,GACA3d,KAAAof,iBAGAlB,YAAA,eAAA7E,EAAArZ,KACA+b,GACAxc,KAAAS,KAAAT,KACA8e,KAAAre,KAAAsd,YACAU,OAAAhe,KAAAge,OACAM,MAAAte,KAAAqd,UAEArd,KAAAmd,SAAA,EACA9d,OAAAof,EAAA,EAAApf,CAAA0c,GAAA2C,KAAA,SAAAC,GACAtF,EAAA+D,UAAAuB,EAAAC,MACAvF,EAAA6D,WAAAyB,EAAAE,aACAxF,EAAA8D,SAAA,KAKAiC,cAAA,SAAA3V,GAAA,IAAA8P,EAAAvZ,KACAid,EAAA,GACAjd,KAAAwd,WAAAP,QAAAhb,OAAA,GAAAjC,KAAAwd,WAAAP,QAAA,KACAA,EACA5d,OAAA0Q,EAAA,EAAA1Q,CAAAW,KAAAwd,WAAAP,QAAA,iBACA,IACA5d,OAAA0Q,EAAA,EAAA1Q,CAAAW,KAAAwd,WAAAP,QAAA,kBAEA,IAAAlB,GACAxc,KAAAS,KAAAT,KACA8e,KAAA,EACAL,OAAAhe,KAAAge,OACAM,MAAAte,KAAAqd,SACAkB,QACArC,UAAAlc,KAAAwd,WAAAtB,UACAuB,YAAAzd,KAAAwd,WAAAC,YACAC,aAAA1d,KAAAwd,WAAAE,aACAC,SAAA3d,KAAAwd,WAAAG,SACAV,YAIA,QAAAuB,KAAAzC,EAAAwC,OACAxC,EAAAwC,OAAAC,WACAzC,EAAAwC,OAAAC,GAIAxe,KAAAsd,YAAA,EACAtd,KAAAmd,SAAA,EACA9d,OAAAof,EAAA,EAAApf,CAAA0c,GAAA2C,KAAA,SAAAC,GACApF,EAAA6D,UAAAuB,EAAAC,MAEArF,EAAA2D,WAAAyB,EAAAE,aACAtF,EAAA4D,SAAA,KAKAkC,cAAA,WACArf,KAAA4d,QAKA5d,KAAA4d,QAAA,EACA5d,KAAA6d,YAAA,KACA7d,KAAA8d,WAAA,aANA9d,KAAA4d,QAAA,EACA5d,KAAA6d,YAAA,KACA7d,KAAA8d,WAAA,eCpRAwB,GADiBxf,OAFjB,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,SAAmBE,OAAOsb,MAAA,UAAA5b,EAAAwf,UAAA1D,MAAA,MAAA2D,SAAA,IAA4Dhd,IAAKid,oBAAA1f,EAAAkf,oBAA2CS,OAAQjX,MAAA1I,EAAA,WAAAkF,SAAA,SAAA0a,GAAgD5f,EAAAwd,WAAAoC,GAAmBC,WAAA,gBAA0Bzf,EAAA,OAAYa,aAAa6e,SAAA,cAAuB1f,EAAA,OAAYQ,YAAA,qBAA+BR,EAAA,SAAcQ,YAAA,uBAAiCZ,EAAAU,GAAA,UAAAV,EAAAU,GAAA,KAAAN,EAAA,SAA2Ca,aAAa6a,MAAA,QAAAiE,cAAA,QAAqCzf,OAAQ0f,YAAA,UAAuBL,OAAQjX,MAAA1I,EAAAyd,WAAA,UAAAvY,SAAA,SAAA0a,GAA0D5f,EAAAigB,KAAAjgB,EAAAyd,WAAA,YAAAmC,IAA2CC,WAAA,2BAAoC,GAAA7f,EAAAU,GAAA,KAAAN,EAAA,OAA4BQ,YAAA,qBAA+BR,EAAA,SAAcQ,YAAA,uBAAiCZ,EAAAU,GAAA,UAAAV,EAAAU,GAAA,KAAAN,EAAA,SAA2Ca,aAAa6a,MAAA,QAAAiE,cAAA,QAAqCzf,OAAQ0f,YAAA,UAAuBL,OAAQjX,MAAA1I,EAAAyd,WAAA,YAAAvY,SAAA,SAAA0a,GAA4D5f,EAAAigB,KAAAjgB,EAAAyd,WAAA,cAAAmC,IAA6CC,WAAA,6BAAsC,GAAA7f,EAAAU,GAAA,KAAAN,EAAA,OAA4BQ,YAAA,qBAA+BR,EAAA,SAAcQ,YAAA,uBAAiCZ,EAAAU,GAAA,WAAAV,EAAAU,GAAA,KAAAN,EAAA,SAA4Ca,aAAa6a,MAAA,QAAAiE,cAAA,QAAqCzf,OAAQ0f,YAAA,UAAuBL,OAAQjX,MAAA1I,EAAAyd,WAAA,aAAAvY,SAAA,SAAA0a,GAA6D5f,EAAAigB,KAAAjgB,EAAAyd,WAAA,eAAAmC,IAA8CC,WAAA,8BAAuC,GAAA7f,EAAAU,GAAA,KAAAN,EAAA,OAA4B8f,aAAale,KAAA,OAAAme,QAAA,SAAAzX,MAAA1I,EAAA,OAAA6f,WAAA,WAAoEjf,YAAA,kBAA8BR,EAAA,OAAYQ,YAAA,qBAA+BR,EAAA,SAAcQ,YAAA,uBAAiCZ,EAAAU,GAAA,WAAAV,EAAAU,GAAA,KAAAN,EAAA,SAA4Ca,aAAa6a,MAAA,QAAAiE,cAAA,QAAqCzf,OAAQ0f,YAAA,WAAwBL,OAAQjX,MAAA1I,EAAAyd,WAAA,SAAAvY,SAAA,SAAA0a,GAAyD5f,EAAAigB,KAAAjgB,EAAAyd,WAAA,WAAAmC,IAA0CC,WAAA,0BAAmC,GAAA7f,EAAAU,GAAA,KAAAN,EAAA,OAA4BQ,YAAA,qBAA+BR,EAAA,SAAcQ,YAAA,uBAAiCZ,EAAAU,GAAA,WAAAV,EAAAU,GAAA,KAAAN,EAAA,cAAiDa,aAAa6a,MAAA,SAAgBxb,OAAQ8f,OAAA,aAAA5gB,KAAA,YAAAe,UAAA,aAAAyf,YAAA,WAA0FL,OAAQjX,MAAA1I,EAAAyd,WAAA,QAAAvY,SAAA,SAAA0a,GAAwD5f,EAAAigB,KAAAjgB,EAAAyd,WAAA,UAAAmC,IAAyCC,WAAA,yBAAkC,KAAA7f,EAAAU,GAAA,KAAAN,EAAA,OAA8BQ,YAAA,eAAyBR,EAAA,UAAeE,OAAOd,KAAA,UAAA6gB,KAAA,SAAgC5d,IAAK6d,MAAAtgB,EAAAqf,iBAA2Brf,EAAAU,GAAA,QAAAV,EAAAU,GAAA,KAAAN,EAAA,UAA0CE,OAAO+f,KAAA,SAAe5d,IAAK6d,MAAAtgB,EAAAof,mBAA6Bpf,EAAAU,GAAA,QAAAV,EAAAU,GAAA,KAAAN,EAAA,QAAwCQ,YAAA,SAAA6B,IAAyB6d,MAAAtgB,EAAAsf,iBAA2Btf,EAAAU,GAAA,aAAAV,EAAAe,GAAAf,EAAA8d,aAAA,cAAA1d,EAAA,KAAoEQ,YAAA,WAAA2f,UAAiCC,UAAAxgB,EAAAe,GAAAf,EAAA+d,kBAAoC,KAAA/d,EAAAU,GAAA,KAAAN,EAAA,SAAkCE,OAAO8c,QAAApd,EAAAod,QAAA1d,KAAAM,EAAAmd,WAAAxB,QAAA3b,EAAA2b,QAAA0E,KAAA,QAAAI,OAAA,IAA6Fhe,IAAKie,iBAAA1gB,EAAA+e,cAAiC/e,EAAAU,GAAA,KAAAN,EAAA,OAAwBa,aAAa0f,OAAA,OAAA/N,SAAA,YAAqCxS,EAAA,OAAYa,aAAa2f,MAAA,WAAiBxgB,EAAA,QAAaE,OAAOue,MAAA7e,EAAAqd,UAAAwD,QAAA7gB,EAAAud,YAAAuD,YAAA9gB,EAAAsd,SAAA+C,KAAA,QAAAU,aAAA,GAAAC,gBAAA,IAA2Hve,IAAKwe,YAAAjhB,EAAAqe,sBAAmC,KAAAre,EAAAU,GAAA,KAAAN,EAAA,OAA8BE,OAAOK,KAAA,UAAgBA,KAAA,YAAe,IAE70GW,oBCCjB,IAuBA4f,EAvBAthB,EAAA,OAcA4B,CACAka,EACA6D,GATA,EAVA,SAAA9d,GACA7B,EAAA,SAaA,kBAEA,MAUA,6BCjBAuhB,EAAAvhB,EAAA,QAEAwhB,GACAhiB,OAAA,UACAM,KAFA,WAGA,OACA2hB,SACAC,SACAC,YAAA,EACAC,YACA5F,MAAA,KAIA/b,SACA4hB,YADA,WAGA,IAAAC,EAAAP,EAAAQ,KAAAC,SAAAC,eAAA,kBAIA,QAAA5M,KAFAyM,EAAAjf,GAAA,QAAAxC,KAAA6hB,YAEA7hB,KAAAohB,aAGAphB,KAAAohB,MAAApM,GAAA8M,OAIA,IAAAC,EAAA/hB,KAAAuhB,SAAApO,IAAA,SAAA6O,EAAA3d,GACA,OACAtC,KAAAigB,EAAAjgB,QAIA/B,KAAAohB,MAAAa,QAAA,SAAAlR,GACAA,EAAAmR,SAAAnR,EAAA1M,MACA0M,EAAAoR,WAAA,EACApR,EAAA+Q,OAAA,kCAAA/Q,EAAAqR,KAAA,SAKA,IAAAC,GACAC,WACAC,WAAA,EACAC,SAEA/iB,KAAAsiB,EAAA5O,IAAA,SAAAsP,GACA,OAAAA,EAAA1gB,SAIA2gB,kBAAA,IACAC,wBAAA,IACAC,sBAAA,eACAC,SAEA9gB,KAAA/B,KAAA2b,MACApc,KAAA,QACAsc,MAAA,QACAiH,OAAA,QACAC,IAAA,OACAC,OAAA,WACAC,UACAC,aAAA,GAEAzjB,KAAAO,KAAAohB,MACAC,MAAArhB,KAAAqhB,MACAU,aACAI,WAAA,EACAgB,YAAA,gBAGAC,OACAC,QACAxD,UAAA,aACAyD,UAAA,QAGAC,WACAF,QACApiB,MAAA,SACAuiB,UAAA,KAGAC,OACAC,UAAA,OAKAjC,EAAAkC,UAAAtB,IAGAR,WAhFA,SAgFA+B,GACA,YAAAA,EAAAC,aAGA,SAAAD,EAAArkB,KAAA,CACA,YAAAqkB,EAAAnkB,KAAAF,KASA,OARA,GAAAqkB,EAAAnkB,KAAAqkB,IAAA,CACA,IAAAA,EAAA,aAAAF,EAAAnkB,KAAAqkB,IACAnS,OAAAoR,IAAAgB,aACAxkB,KAAA,WACAukB,OACA,SASAE,QAhHA,WAgHA,IAAA7K,EAAAnZ,KACAikB,EAAAjkB,KACAX,OAAAof,EAAA,EAAApf,CAAAW,KAAAkkB,QAAAxF,KAAA,SAAAC,GACA,IAAAyC,KACAjI,EAAAmI,YAAA3C,EAAA4C,SAAAtf,OACAkX,EAAAoI,SAAA5C,EAAA4C,SACApI,EAAAwC,MAAAgD,EAAAhD,MACAgD,GACAA,EAAA4C,SAAApO,IAAA,SAAA6O,EAAA3d,GACA,QAAA2Q,EAAA,EAAAA,EAAAgN,EAAAmC,MAAAliB,OAAA+S,IACAgN,EAAAmC,MAAAnP,GAAA3Q,QACA2d,EAAAmC,MAAAnP,GAAAoN,KAAA/d,EAAA,IAAA2Q,EAEAoM,KAAAgD,OAAAC,IAAAjD,GAAAiD,IAAArC,EAAAmC,UAGAG,QAAAC,IAAAnD,GACAA,EAAAjO,IAAA,SAAA6O,GACA7I,EAAAiI,MAAArd,MACAhC,KAAAigB,EAAAvZ,MACA+b,GAAAxC,EAAAwC,GACAngB,MAAA2d,EAAA3d,MACA+d,KAAAJ,EAAAI,KACA3Z,MAAA,GACAqb,IAAA9B,EAAA8B,IACAvkB,KAAAyiB,EAAAziB,KAEAuiB,OAAA,OACAsB,OACAqB,MAAA,GAEAC,WACAC,YAAA,OACAC,WAAA,GACAC,cAAA,EACAC,cAAA,KAKA9C,EAAA+C,QAAA5R,IAAA,SAAA5M,GACA4S,EAAAkI,MAAAtd,MACAihB,OAAAhD,EAAAwC,GACAje,SAAAie,SAIAP,EAAAzC,iBAIAyD,QAnKA,cCRAC,GADiBplB,OAFjB,WAA0BE,KAAaE,eAAbF,KAAuCI,MAAAD,GAAwB,OAA/DH,KAA+DmlB,GAAA,IAExE9jB,iBADjB,WAAoC,IAAapB,EAAbD,KAAaE,eAA0BC,EAAvCH,KAAuCI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBQ,YAAA,cAAwBR,EAAA,OAAYQ,YAAA,QAAAN,OAA2BmkB,GAAA,wBCEnL,IC2IAY,GACA3lB,KADA,WAEA,OACA4lB,UAAA,EACAC,WAAA,GACAC,WAAA,GACAC,gBAAA,UACAC,kBAAA,UACAC,gBAAA,UACAC,kBAAA,UACAC,UAAA,EACApV,OACAmL,MAAA,GACA4F,YACAsE,aACAC,sBACAC,aACAC,UAAA,EACAC,kBAAA,OACAC,GAAA3e,EAAA,uCACA4e,QAAA,KAEAC,gBAAA,SACAC,kBAAA,OACAC,WAAA,OACAC,SAAA,SAEAC,sBACAC,YACAC,YACAC,UACAC,UACAC,eAEA1I,OAAA,EACAoB,UAAA,GACAuH,WAAA,GACAvnB,KAAA,WAIAwnB,YACAtL,UAAAwF,EACA+F,cDtLArnB,EAAA,OAcAsnB,CACA9F,EACA+D,GATA,EAVA,SAAA1jB,GACA7B,EAAA,SAaA,kBAEA,MAUA,SCkKAR,OAAA,UAEAS,SACAsnB,KADA,WAkBA,IAhBA,IAAA5B,EAAAtlB,KAAAslB,WACAC,EAAAvlB,KAAAulB,WACA9lB,EAAAO,KAAAuhB,SACA4F,KASAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAEAxjB,EAAA,EAAAA,EAAArE,EAAAwC,OAAA6B,IAAA,CACA,IAAAwY,EAAA,QAAAxY,EAEA,GADArE,EAAAqE,GAAAyjB,MAAA,KAAAjL,EAAA,SAAAA,EACA7c,EAAAqE,GAAAqgB,MAAAliB,OAAA,EACA,QAAAulB,EAAA,EAAAA,EAAA/nB,EAAAqE,GAAAqgB,MAAAliB,OAAAulB,IAAA,CACAxnB,KAAAuhB,SAAAzd,GAAAqgB,MAAAqD,GAAAC,OACA,IAAAnC,EAAAC,GAAA9lB,EAAAqE,GAAAqgB,MAAAqD,GAAAE,KACA1nB,KAAAuhB,SAAAzd,GAAAqgB,MAAAqD,GAAAG,OAAA,GAAArC,EAAA,MAAAxhB,EAEAqjB,EAAAnnB,KAAAuhB,SAAAzd,GAAAqgB,MAAAqD,GAAAhD,IACAxkB,KAAAuhB,SAAAzd,GAAAqgB,MAAAqD,GAAAC,OACA,IACAznB,KAAAuhB,SAAAzd,GAAAqgB,MAAAqD,GAAAG,OAEA,IAAAC,EAAAnoB,EAAAqE,GAAAqgB,MAAAqD,GACAI,EAAAnB,SAAA,IACAzmB,KAAAymB,SAAAmB,EAAA5J,QACA4J,EAAAnB,SAAA,SAAAmB,EAAAnB,UAEAmB,EAAAlB,SAAA,IACA1mB,KAAA0mB,SAAAkB,EAAA5J,QACA4J,EAAAlB,SAAA,SAAAkB,EAAAlB,UAEAkB,EAAAjB,OAAA,IACA3mB,KAAA2mB,OAAAiB,EAAA5J,QACA4J,EAAAjB,OAAA,SAAAiB,EAAAjB,QAEAiB,EAAAhB,OAAA,IACA5mB,KAAA4mB,OAAAgB,EAAA5J,QACA4J,EAAAhB,OAAA,SAAAgB,EAAAhB,QAEAgB,EAAAf,YAAA,IACA7mB,KAAA6mB,YAAAe,EAAApD,IACAoD,EAAAf,YAAA,SAAAe,EAAAf,cAMA,IAAA5C,EAAAjkB,KACAP,EAAAwiB,QAAA,SAAAD,EAAA6F,GACA7F,EAAAmC,MAAAlC,QAAA,SAAAkC,EAAA2D,GACA3D,EAAA4D,cAAA5D,EAAA4D,aAAA9lB,OAAA,GAEAkiB,EAAA4D,aAAA9F,QAAA,SAAA8F,EAAAC,GACAD,EAAAvD,MAAA2C,IACAC,EAAAD,EAAAY,EAAAvD,IAAAlV,MAAA,KACA+X,EAAA1M,OAAAyM,EAAA,IACAE,EAAA3M,OAAAyM,EAAA,IAGAW,EAAAE,WAAAjG,EAAA3d,MACA4f,EAAA6B,mBAAA/hB,MACAygB,GAAAL,EAAAK,GAAA,IAAAuD,EAAAvD,GACA/b,MACA0b,EAAAsD,OACAnC,EAAA,EACA,KACAnB,EAAAwD,OAAArC,EAAA,GACA,KACA+B,EAAA/B,EAAA,GACA,KACAgC,EAAAhC,EAAA,QAEAyC,EAAAE,WAAAjG,EAAA3d,MAGA4f,EAAA6B,mBAAA/hB,MACAygB,GAAAL,EAAAK,GAAA,IAAAuD,EAAAvD,GACA/b,MACA0b,EAAAsD,OACAnC,EAAA,EACA,KACAnB,EAAAwD,OAAArC,EAAA,MACA,KACA+B,EAAA/B,EAAA,GACA,KACAgC,EAAAhC,EAAA,SAGAnB,EAAAsD,OAAAJ,EAAA,GAAA/B,EAAAC,EAEAtB,EAAA6B,mBAAA/hB,MACAygB,GAAAL,EAAAK,GAAA,IAAAuD,EAAAvD,GACA/b,MACA0b,EAAAsD,OACAnC,EAAA,EACA,KACAnB,EAAAwD,OAAArC,EAAA,GACA,KACAnB,EAAAsD,OAAAnC,EAAA,GACA,KACAnB,EAAAwD,OAAArC,EAAA,MACA,KACA+B,EAAA/B,EAAA,GACA,KACAgC,EAAAhC,EAAA,MACA,KACA+B,EAAA/B,EAAA,GACA,KACAgC,EAAAhC,EAAA,SAGArB,EAAA6B,mBAAA/hB,MACAygB,GAAAL,EAAAK,GAAA,IAAAuD,EAAAvD,GACA/b,MACA0b,EAAAsD,OACAnC,EACA,IACAnB,EAAAwD,OACA,KACAN,EAAA,KACA,IACAC,OAQAnD,EAAAY,SAAAZ,EAAAY,QAAA9iB,OAAA,GACAkiB,EAAAY,QAAA9C,QAAA,SAAA8C,EAAAmD,GACA,GAAAnD,EAAAP,MAAA2C,EAKA,GAJAC,EAAAD,EAAApC,EAAAP,IAAAlV,MAAA,KACA+X,EAAA1M,OAAAyM,EAAA,IACAE,EAAA3M,OAAAyM,EAAA,IAEArC,EAAAkD,WAAAjG,EAAA3d,MAAA,CACA,IAAA8jB,GACAd,EAAAlD,EAAAsD,SAAAnC,EAAAC,GAAA,IACAtB,EAAA4B,UAAA9hB,MACAygB,GAAAL,EAAAK,GAAA,IAAAO,EAAAP,GACA/b,MACA0b,EAAAsD,OACAnC,EAAA,EACA,KACAnB,EAAAwD,OAAArC,EAAA,GACA,KACA+B,EAAA/B,EAAA,EAAA6C,GACA,KACAb,EAAAhC,EAAA,aAEA,GAAAP,EAAAkD,WAAAjG,EAAA3d,MAAA,CAEA,IAAA+jB,GACAf,EAAAlD,EAAAsD,SAAAnC,EAAAC,GAAA,IACAtB,EAAA4B,UAAA9hB,MACAygB,GAAAL,EAAAK,GAAA,IAAAO,EAAAP,GACA/b,MACA0b,EAAAsD,OACAnC,EAAA,EACA,KACAnB,EAAAwD,OAAArC,EAAA,MACA,KACA+B,EAAA/B,EAAA,EAAA8C,GACA,KACAd,EAAAhC,EAAA,iBAYA+C,aAAA,SAAA9G,GACA,IAAA+G,EAAA,EACA,GAAA/G,EAAAtf,OAAA,GACAqmB,EAAA/G,EAAA,GAAA4C,MAAAliB,OAEA,QAAA6B,EAAA,EAAAA,EAAAyd,EAAAtf,OAAA6B,IACAwkB,EAAA/G,EAAAzd,GAAAqgB,MAAAliB,SACAqmB,EAAA/G,EAAAzd,GAAAqgB,MAAAliB,QAIA,IAAAsmB,EACAD,GAAA,GAAAtoB,KAAAslB,WAAAtlB,KAAAulB,YAAA,GACA,OAAA5D,SAAA6G,KAAAC,YAAAF,EACA5G,SAAA6G,KAAAC,YAEAF,GAMAG,cAAA,SAAAnH,GACA,IAAAzF,EAAAyF,EAAAtf,OAAA,MAAAsf,EAAAtf,OAAA,OACA,OAAA0f,SAAA6G,KAAAG,aAAA7M,EACA6F,SAAA6G,KAAAG,aAEA7M,GAIA8M,SAAA,SAAA5G,EAAAtT,GAGA,GAFA1O,KAAA+lB,aAEA/D,EAAA+C,SAAA/C,EAAA+C,QAAA9iB,OAAA,EACA,QAAA6B,EAAA,EAAAA,EAAAke,EAAA+C,QAAA9iB,OAAA6B,IACA9D,KAAA+lB,UAAA/D,EAAAwC,GAAA,IAAAxC,EAAA+C,QAAAjhB,GAAA0gB,IAAAxC,EAAA+C,QAAAjhB,GAIA,GAAAke,EAAA6G,UAAA7G,EAAA6G,SAAA5mB,OAAA,EACA,QAAAqO,EAAA,EAAAA,EAAA0R,EAAA6G,SAAA5mB,OAAAqO,IACAtQ,KAAA+lB,UAAA/D,EAAA6G,SAAAvY,GAAAkU,GAAA,IAAAxC,EAAAwC,IACAxC,EAAA6G,SAAAvY,IAKAwY,QAAA,SAAArf,GACAzJ,KAAA+lB,cAMAlE,WAAA,SAAAG,EAAAtT,GACA,IAAAoV,EAAA9B,EAAA8B,IACAiF,EAAApX,OAAAoR,IAAApB,SAAAC,eAAA,UAAAoH,aAAA,MACA,WAAAhH,EAAAzb,OACAoL,OAAAsX,KAAAjH,EAAA8B,IAAA,WAEAiF,IAEAjF,GADAA,EAAAja,QAAA,WACAmY,EAAA8B,KACAA,EAAAja,QAAA,OACA,aAAAia,EAEA,UAAAA,GAGAnS,OAAAoR,IAAAgB,aAEAxkB,KAAA,WACAukB,OAEA,OAMAoF,iBAAA,WACA,IAAAC,EAAA9pB,OAAA0Q,EAAA,EAAA1Q,GACAW,KAAAkmB,GAAAxX,MAAA/J,UAAA,cAAAwkB,EAAA,SAAAC,OAGAC,iBAAA,SAAA5f,GACAzJ,KAAAumB,SAAA9c,EACA,aAAAzJ,KAAAumB,UAAA,SAAAvmB,KAAAsmB,YACAtmB,KAAAT,KAAA,WACAS,KAAAwmB,mBAAAxmB,KAAAymB,UACA,aAAAzmB,KAAAumB,UAAA,SAAAvmB,KAAAsmB,YACAtmB,KAAAT,KAAA,WACAS,KAAAwmB,mBAAAxmB,KAAA0mB,UACA,WAAA1mB,KAAAumB,UAAA,SAAAvmB,KAAAsmB,YACAtmB,KAAAT,KAAA,SACAS,KAAAwmB,mBAAAxmB,KAAA2mB,QACA,WAAA3mB,KAAAumB,UAAA,SAAAvmB,KAAAsmB,aACAtmB,KAAAT,KAAA,SACAS,KAAAwmB,mBAAAxmB,KAAA4mB,QAEA5mB,KAAAwmB,mBAAA8C,IACAtpB,KAAAwmB,mBACAxmB,KAAA6mB,cAIA0C,2BAAA,SAAA9f,GACAzJ,KAAAsmB,WAAA7c,EACA,aAAAzJ,KAAAumB,UAAA,SAAAvmB,KAAAsmB,YACAtmB,KAAAT,KAAA,WACAS,KAAAwmB,mBAAAxmB,KAAAymB,UACA,aAAAzmB,KAAAumB,UAAA,SAAAvmB,KAAAsmB,YACAtmB,KAAAT,KAAA,WACAS,KAAAwmB,mBAAAxmB,KAAA0mB,UACA,WAAA1mB,KAAAumB,UAAA,SAAAvmB,KAAAsmB,YACAtmB,KAAAT,KAAA,SACAS,KAAAwmB,mBAAAxmB,KAAA2mB,QACA,WAAA3mB,KAAAumB,UAAA,SAAAvmB,KAAAsmB,aACAtmB,KAAAT,KAAA,SACAS,KAAAwmB,mBAAAxmB,KAAA4mB,QAEA5mB,KAAAwmB,mBAAA8C,IACAtpB,KAAAwmB,mBACAxmB,KAAA6mB,cAOA2C,SA9TA,SA8TAxH,GACA,YAAAA,EAAAziB,KACAS,KAAA6hB,WAAAG,EAAAtT,QAEA1O,KAAAme,OAAA,EAEAne,KAAA8mB,WAAApY,MAAAnI,OAAAyiB,aAAA,UACAhpB,KAAAuf,UAAA7Q,MAAAnI,OAAAyiB,aAAA,eAKAS,UA1UA,SA0UAC,EAAAjgB,GACAzJ,KAAA8mB,WAAA4C,EAAA1L,OACAhe,KAAAme,OAAA,GAMAC,kBAlVA,SAkVAd,GAAA,IAAAnE,EAAAnZ,KACA+b,GACAxc,KAAAS,KAAAT,KACA8e,KAAAf,EACAU,OAAAhe,KAAA8mB,WACAxI,MAAAte,KAAAqd,UAEArd,KAAAmd,SAAA,EACA9d,OAAAof,EAAA,EAAApf,CAAA0c,GAAA2C,KAAA,SAAAC,GACAA,EAAAE,aAAA5c,OAAA,IACAkX,EAAA+D,WAAAyB,EAAAE,aACA1F,EAAAgE,SAAA,OAMA6G,QAnZA,WAoZA,IACA2F,EAAA3pB,KAAA4pB,aACAC,GAAAF,EAAA5oB,SAAA4oB,EAAAxiB,QAAAqM,KAAA,KACA2V,EAAA9pB,OAAA0Q,EAAA,EAAA1Q,GAHAW,KAIAkmB,GAAA4D,OAEAX,QACAU,YAEA,SAAApqB,GACA6kB,QAAAC,IAAA,sBAIAvkB,KAAAkpB,oBAEAjE,QApaA,WAoaA,IAAA5L,EAAArZ,KACAikB,EAAAjkB,KACAX,OAAAof,EAAA,EAAApf,CAAAW,KAAAkkB,QACAxF,KAAA,SAAAC,GAwCAA,EAAA4C,SAAApO,IAAA,SAAAsJ,GACAA,EAAA0H,OACA1H,EAAA0H,MAAAhR,IAAA,SAAA4W,GACA,IA1CAC,EACA5H,EA0CA,YAAA2H,EAAAxqB,MAAAwqB,EAAAthB,QACAshB,EAAA3H,KAAA,0BA5CA4H,EA4CAD,EAAAthB,MA3CA2Z,EAAA,KAEArgB,KAAA,KAAAqgB,KAAA,aACArgB,KAAA,KAAAqgB,KAAA,oBACArgB,KAAA,KAAAqgB,KAAA,wBACArgB,KAAA,KAAAqgB,KAAA,cACArgB,KAAA,KAAAqgB,KAAA,cACArgB,KAAA,KAAAqgB,KAAA,YACArgB,KAAA,KAAAqgB,KAAA,cACArgB,KAAA,KAAAqgB,KAAA,qBACArgB,KAAA,KAAAqgB,KAAA,oBACArgB,KAAA,KAAAqgB,KAAA,mBACArgB,KAAA,KAAAqgB,KAAA,aACArgB,KAAA,KAAAqgB,KAAA,iBACArgB,KAAA,KAAAqgB,KAAA,mBACArgB,KAAA,KAAAqgB,KAAA,iBACArgB,KAAA,KAAAqgB,KAAA,uBACArgB,KAAA,MAAAqgB,KAAA,mBACArgB,KAAA,MAAAqgB,KAAA,oBACArgB,KAAA,OAAAqgB,KAAA,iBACArgB,KAAA,OAAAqgB,KAAA,wBACArgB,KAAA,MAAAqgB,KAAA,aACArgB,KAAA,MAAAqgB,KAAA,oBACArgB,KAAA,MAAAqgB,KAAA,wBACArgB,KAAA,MAAAqgB,KAAA,cACArgB,KAAA,MAAAqgB,KAAA,YACArgB,KAAA,OAAAqgB,KAAA,iBACArgB,KAAA,OAAAqgB,KAAA,iBAGAjP,IAAA,SAAA8W,GACAA,EAAAloB,OAAAioB,IACA5H,EAAA6H,EAAA7H,QAIAA,QAaA6B,EAAAtI,MAAAgD,EAAAhD,MACAsI,EAAA1C,SAAA5C,EAAA4C,SAEA,IAAA8G,EACApE,EAAAoE,aAAA1J,EAAA4C,UAAA,KACA0C,EAAAoE,aAAA1J,EAAA4C,UACA,KACAmH,EAAAzE,EAAAyE,cAAA/J,EAAA4C,UACA5P,OAAAgQ,SAAAC,eAAA,cACAjQ,OAAAgQ,SAAAC,eAAA,YAAAsI,MAAArO,MACAwM,EAAA,KACA1W,OAAAgQ,SAAAC,eAAA,YAAAsI,MAAApH,OACA4F,EAAA,KAEAzE,EAAAiD,OACA7N,EAAAmN,mBAAA8C,IACAjQ,EAAAuN,OACAvN,EAAAwN,aAEA5C,EAAAoB,UAAA,KAGA8E,MAAA,SAAA9b,GACA,IAEA+b,EAAA,MAAA/b,EAAA,OAFAgL,EAGAgR,OAAAhc,OACAsN,MAHA,KAIAyO,UACA5K,UAAA,QCloBA8K,GADiBxqB,OAFjB,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBQ,YAAA,mCAA6CZ,EAAA,SAAAI,EAAA,QAA4BE,OAAO+f,KAAA,QAAAmK,IAAA,MAAyBxqB,EAAAyqB,KAAAzqB,EAAAU,GAAA,KAAAN,EAAA,OAAiCE,OAAOmkB,GAAA,cAAiBrkB,EAAA,cAAmBQ,YAAA,UAAAN,OAA6B+f,KAAA,SAAe5d,IAAKwe,YAAAjhB,EAAAspB,kBAAiC3J,OAAQjX,MAAA1I,EAAA,gBAAAkF,SAAA,SAAA0a,GAAqD5f,EAAAqmB,gBAAAzG,GAAwBC,WAAA,qBAA+Bzf,EAAA,SAAcE,OAAO+iB,MAAA,YAAkBjjB,EAAA,QAAAJ,EAAAU,GAAA,YAAAV,EAAAU,GAAA,KAAAN,EAAA,SAAwDE,OAAO+iB,MAAA,cAAoBjjB,EAAA,QAAAJ,EAAAU,GAAA,YAAAV,EAAAU,GAAA,KAAAN,EAAA,KAAoDQ,YAAA,qBAA8B,GAAAZ,EAAAU,GAAA,KAAAN,EAAA,cAAmCQ,YAAA,YAAAN,OAA+B+f,KAAA,SAAe5d,IAAKwe,YAAAjhB,EAAAwpB,4BAA2C7J,OAAQjX,MAAA1I,EAAA,kBAAAkF,SAAA,SAAA0a,GAAuD5f,EAAAsmB,kBAAA1G,GAA0BC,WAAA,uBAAiCzf,EAAA,SAAcE,OAAO+iB,MAAA,UAAgBjjB,EAAA,QAAAJ,EAAAU,GAAA,WAAAV,EAAAU,GAAA,KAAAN,EAAA,SAAuDE,OAAO+iB,MAAA,UAAgBjjB,EAAA,QAAAJ,EAAAU,GAAA,WAAAV,EAAAU,GAAA,KAAAN,EAAA,KAAmDQ,YAAA,qBAA8B,GAAAZ,EAAAU,GAAA,KAAAN,EAAA,cAAmCQ,YAAA,YAAAN,OAA+B+f,KAAA,WAAgBjgB,EAAA,SAAcE,OAAO+iB,MAAA,gBAAsBjjB,EAAA,QAAAJ,EAAAU,GAAA,WAAAV,EAAAU,GAAA,KAAAN,EAAA,SAAuDE,OAAO+iB,MAAA,cAAoBjjB,EAAA,QAAAJ,EAAAU,GAAA,UAAAV,EAAAU,GAAA,KAAAN,EAAA,KAAkDQ,YAAA,qBAA8B,GAAAZ,EAAAU,GAAA,KAAAN,EAAA,YAAiCa,aAAa6e,SAAA,QAAAkD,IAAA,OAAA0H,KAAA,QAAAC,UAAA,MAAAC,YAAA,UAAmFxqB,EAAA,QAAAJ,EAAAU,GAAA,4BAAAN,EAAA,QAA2DE,OAAOd,KAAA,qBAAyB,GAAAQ,EAAAU,GAAA,KAAAN,EAAA,gBAAqCE,OAAOK,KAAA,QAAcA,KAAA,SAAaP,EAAA,gBAAAJ,EAAAU,GAAA,WAAAV,EAAAU,GAAA,KAAAN,EAAA,gBAAAJ,EAAAU,GAAA,WAAAV,EAAAU,GAAA,KAAAN,EAAA,gBAAAJ,EAAAU,GAAA,mBAAAV,EAAAU,GAAA,KAAAN,EAAA,YAA4Ka,aAAa6e,SAAA,QAAAkD,IAAA,OAAA0H,KAAA,QAAAC,UAAA,MAAAC,YAAA,UAAmFxqB,EAAA,QAAAJ,EAAAU,GAAA,4BAAAN,EAAA,QAA2DE,OAAOd,KAAA,qBAAyB,GAAAQ,EAAAU,GAAA,KAAAN,EAAA,gBAAqCE,OAAOK,KAAA,QAAcA,KAAA,SAAaP,EAAA,gBAAAJ,EAAAU,GAAA,UAAAV,EAAAU,GAAA,KAAAN,EAAA,gBAAAJ,EAAAU,GAAA,UAAAV,EAAAU,GAAA,KAAAN,EAAA,gBAAAJ,EAAAU,GAAA,kBAAAV,EAAAU,GAAA,KAAAN,EAAA,OAAoKQ,YAAA,WAAqBZ,EAAAU,GAAA,KAAAN,EAAA,OAAwBQ,YAAA,gBAAAK,aAAyC6a,MAAA,SAAgB9b,EAAA6qB,GAAA7qB,EAAA,kBAAAiiB,EAAA3d,GAA4C,OAAAlE,EAAA,OAAiB0G,IAAAxC,EAAA1D,YAAA,cAAkCR,EAAA,aAAeJ,EAAAU,GAAA,KAAAN,EAAA,OAAyBQ,YAAA,UAAA6B,IAA0B6d,MAAAtgB,EAAA+oB,WAAqB3oB,EAAA,OAAYE,OAAOwqB,MAAA,6BAAAnV,QAAA,SAAsDvV,EAAA,QAAAA,EAAA,UAA0BE,OAAOmkB,GAAA,KAAAsG,EAAA,IAAAxO,EAAA,IAAAT,MAAA,OAAAiH,OAAA,UAA0D3iB,EAAA,YAAiBE,OAAOwQ,OAAA,SAAAka,GAAA,gBAAAC,GAAA,IAAAC,GAAA,OAA0DlrB,EAAAU,GAAA,KAAAN,EAAA,iBAAkCE,OAAOwQ,OAAA,YAAAka,GAAA,SAAAxrB,KAAA,SAAA2rB,OAAA,mDAA6GnrB,EAAAU,GAAA,KAAAN,EAAA,kBAAmCE,OAAOwQ,OAAA,UAAAka,GAAA,YAAAI,aAAA,OAAwDprB,EAAAU,GAAA,KAAAN,EAAA,WAA4BE,OAAO0qB,GAAA,gBAAAK,IAAA,UAAAC,KAAA,aAAsD,KAAAtrB,EAAAU,GAAA,KAAAN,EAAA,QAAAA,EAAA,UAA4CE,OAAOmkB,GAAA,QAAA8G,YAAA,iBAAAC,YAAA,KAAAC,aAAA,KAAAC,QAAA,YAAAC,KAAA,IAAAC,KAAA,IAAAC,OAAA,UAAgJzrB,EAAA,QAAaa,aAAa6qB,KAAA,QAAcxrB,OAAQoc,EAAA,oCAAkC1c,EAAAU,GAAA,KAAAN,EAAA,QAAAA,EAAA,UAA0CE,OAAOmkB,GAAA,SAAA8G,YAAA,iBAAAC,YAAA,KAAAC,aAAA,KAAAC,QAAA,YAAAC,KAAA,IAAAC,KAAA,IAAAC,OAAA,UAAiJzrB,EAAA,QAAaa,aAAa6qB,KAAA,QAAcxrB,OAAQoc,EAAA,oCAAkC1c,EAAAU,GAAA,KAAAN,EAAA,QAAAA,EAAA,UAA0CE,OAAOmkB,GAAA,oBAAA8G,YAAA,iBAAAC,YAAA,KAAAC,aAAA,KAAAC,QAAA,YAAAC,KAAA,IAAAC,KAAA,IAAAC,OAAA,UAA4JzrB,EAAA,QAAaa,aAAa6qB,KAAA,OAAaxrB,OAAQoc,EAAA,oCAAkC1c,EAAAU,GAAA,KAAAN,EAAA,QAAAA,EAAA,kBAAkDE,OAAOmkB,GAAA,aAAAsH,GAAA,KAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,UAA6D9rB,EAAA,QAAaa,aAAakrB,aAAA,UAAAC,eAAA,KAA0C9rB,OAAQ+rB,OAAA,QAAersB,EAAAU,GAAA,KAAAN,EAAA,QAAyBa,aAAakrB,aAAA,0BAAsC7rB,OAAQ+rB,OAAA,WAAiB,OAAArsB,EAAAU,GAAA,KAAAV,EAAA6qB,GAAA7qB,EAAA,kBAAAssB,EAAAvoB,GAAiE,OAAA3D,EAAA,KAAe0G,IAAA/C,GAAM/D,EAAA6qB,GAAAyB,EAAA,eAAArK,EAAA1R,GAA0C,OAAAnQ,EAAA,KAAe0G,IAAAyJ,IAAMnQ,EAAA,SAAcE,OAAOyqB,EAAA,IAAA/qB,EAAAulB,WAAAvlB,EAAAwlB,YAAAvD,EAAA0F,KAAApL,EAAA,OAAAxY,EAAA+X,MAAA9b,EAAAulB,WAAAxC,OAAA/iB,EAAAulB,WAAAgH,aAAAtK,EAAAI,KAAAmK,GAAA,MAA8I/pB,IAAK6d,MAAA,SAAAmM,GAAyBA,EAAAC,kBAAyB1sB,EAAA6oB,SAAA5G,OAAqBjiB,EAAAU,GAAA,KAAAN,EAAA,KAAsBQ,YAAA,kBAAA6B,IAAkC6d,MAAA,SAAAmM,GAAyBzsB,EAAA8hB,WAAAG,OAAuB7hB,EAAA,QAAaE,OAAOyqB,EAAA,GAAA/qB,EAAAulB,WAAA,GAAAvlB,EAAAulB,WAAAvlB,EAAAwlB,YAAAvD,EAAA0F,KAAApL,EAAA,GAAAvc,EAAAulB,WAAA,IAAAxhB,KAA+F/D,EAAAU,GAAA,qBAAAV,EAAAe,GAAAkhB,EAAAvZ,OAAA,wBAAA1I,EAAAU,GAAA,MAAAuhB,EAAAhE,OAAAgE,EAAAhE,OAAAgE,EAAAwC,MAAAzkB,EAAAymB,mBAAArmB,EAAA,UAAgKE,OAAOqsB,GAAA,IAAA3sB,EAAAulB,WAAAvlB,EAAAwlB,YAAAvD,EAAA0F,KAAAiF,GAAA,OAAA7oB,EAAA8oB,EAAA,KAAAC,eAAA,IAAAhB,KAAA,SAAA7J,EAAAziB,KAAA,mBAAuIQ,EAAAyqB,KAAAzqB,EAAAU,GAAA,KAAAN,EAAA,QAAkCQ,YAAA,wBAAAK,aAAiD2pB,YAAA,QAAmBtqB,OAAQyqB,EAAA,IAAA/qB,EAAAulB,WAAAvlB,EAAAwlB,YAAAvD,EAAA0F,KAAApL,EAAA,OAAAxY,EAAA+nB,KAAA,OAAA7N,OAAA,YAAAgE,EAAAziB,KAAAyiB,EAAAwC,GAAAxC,EAAAhE,OAAAuB,UAAAyC,EAAAvZ,OAAsJjG,IAAK6d,MAAA,SAAAmM,GAAyBzsB,EAAAypB,SAAAxH,OAAqBjiB,EAAAU,GAAA,mBAAAV,EAAAe,GAAA,YAAAkhB,EAAAziB,KAAAQ,EAAAymB,mBAAAxE,EAAAwC,IAAAzkB,EAAAymB,mBAAAxE,EAAAhE,SAAA,2BAAuJje,EAAAU,GAAA,KAAAV,EAAA6qB,GAAA7qB,EAAA,mBAAAwnB,GAAqD,OAAApnB,EAAA,KAAe0G,IAAA0gB,EAAA/C,KAAarkB,EAAA,YAAiB2sB,WAAAtnB,IAAAzF,EAAAgmB,UAAAwB,EAAA/C,IAAA,UAAAxjB,aAAiE6qB,KAAA,OAAAkB,OAAA,OAAAF,eAAA,KAAiDxsB,OAAQ2sB,OAAAzF,EAAA9e,MAAAwkB,kBAAAznB,IAAAzF,EAAAgmB,UAAAwB,EAAA/C,IAAA,gDAAoHzkB,EAAAU,GAAA,KAAAV,EAAA6qB,GAAA7qB,EAAA,4BAAAwnB,GAA8D,OAAApnB,EAAA,KAAe0G,IAAA0gB,EAAA/C,KAAarkB,EAAA,YAAiBQ,YAAA,qBAAAN,OAAwC2sB,OAAAzF,EAAA9e,MAAAwkB,aAAA,sBAAqD,SAAAltB,EAAAU,GAAA,KAAAN,EAAA,cAAyCE,OAAO8d,MAAApe,EAAAoe,MAAAH,OAAAje,EAAA+mB,WAAAvH,UAAAxf,EAAAwf,UAAAhgB,KAAAQ,EAAAR,MAAoFiD,IAAKinB,UAAA1pB,EAAA0pB,cAA2B,IAE1uMpoB,oBCCjB,IAcA6rB,EAdAvtB,EAAA,OAcAwtB,CACA/H,EACAkF,GATA,EAVA,SAAA9oB,GACA7B,EAAA,SAaA,KAEA,MAUA8B,EAAA,QAAAyrB,EAAA,gECxBA,IAAAtrB,EAAAjC,EAAA,QACAytB,EAAAztB,EAAA,QACA4O,EAAA5O,EAAA,QACA0tB,EAAA1tB,EAAA,QACAqR,EAAArR,EAAA,QACAwW,EAAAxW,EAAA,QACAiM,EAAAjM,EAAA,QACA0H,EAAA1H,EAAA,QACA2tB,EAAA3tB,EAAA,QACA4tB,EAAA5tB,EAAA,QAkBA6tB,EAAA,SAAA1J,EAAA9hB,GACAhC,KAAAytB,KAAA3J,EACA9jB,KAAA2H,SAAA3H,KAAA0tB,YAAA1rB,OAEAhC,KAAA4H,YAAA,IAAAylB,EAAArtB,UAAAytB,KAAAztB,KAAA2H,UACA3H,KAAAgI,oBAAA,IAAAulB,EAAAvtB,UAAA2H,UAEA3H,KAAA0O,MAAA,IAAAsC,EAAAhR,KAAA2H,SAAA3H,KAAA4H,YAAA5H,MACAA,KAAAgX,IAAA,IAAAb,EAAAnW,KAAA2H,SAAA3H,KAAA4H,YAAA5H,MACAA,KAAAyN,OAAA,IAAA7B,EAAA5L,KAAA2H,SAAA3H,KAAA4H,YAAA5H,MACAA,KAAA2tB,SAAA,IAAAtmB,EAAArH,KAAA2H,SAAA3H,KAAA4H,YAAA5H,MAEAA,KAAA4tB,qBACA5tB,KAAA4tB,kBAAAhsB,EAAAhH,MAAAG,OAAAiF,KAAA0O,MAAAZ,SAAAvL,KAAAvC,KAAA0O,OACA1O,KAAA4tB,kBAAAhsB,EAAAhH,MAAAK,KAAA+E,KAAAgX,IAAAlJ,SAAAvL,KAAAvC,KAAAgX,KACAhX,KAAA4tB,kBAAAhsB,EAAAhH,MAAAI,QAAAgF,KAAAyN,OAAAK,SAAAvL,KAAAvC,KAAAyN,QACAzN,KAAA4tB,kBAAAhsB,EAAAhH,MAAAM,UAAA8E,KAAA2tB,SAAA7f,SAAAvL,KAAAvC,KAAA2tB,UACA3tB,KAAA4tB,kBAAAhsB,EAAAhH,MAAAd,OAAAkG,KAAA6tB,gBAAAtrB,KAAAvC,OA+MA,SAAA8tB,EAAAhK,EAAA9hB,GACA,WAAAwrB,EAAA1J,EAAA9hB,GA7MAuM,EAAAif,EAAAlqB,WA6BAkqB,EAAAlqB,UAAAwmB,MAAA,SAAAiE,EAAA9oB,GAMA,MALA,mBAAA8oB,EACA/tB,KAAA4H,YAAAomB,gBAAoCD,GAEpC/tB,KAAA4H,YAAAomB,aAAAD,MAA4D9oB,GAE5DjF,MASAwtB,EAAAlqB,UAAA2qB,MAAA,WACAjuB,KAAA4H,YAAAqmB,SAUAT,EAAAlqB,UAAAiI,mBAAA,WACA,OAAAvL,KAAA4H,YAAAsmB,YAWAV,EAAAlqB,UAAAqT,OAAA,WAIA,OAHA,IAAA0F,MAAA8R,UAAA1e,SAAA,IAGA,KAFA,KAAAuD,KAAAob,UAAA3e,SAAA,IAAA8D,QAAA,SAaAia,EAAAlqB,UAAA2E,wBAAA,WACA,OAAAjI,KAAAgI,qBAYAwlB,EAAAlqB,UAAAyK,YAAA,SAAA3I,GACApF,KAAA4tB,kBAAAxoB,EAAAgF,OACApK,KAAA4tB,kBAAAxoB,EAAAgF,OAAAhF,IAEAA,EAAAgE,gBAAA,EACApJ,KAAAqJ,UAAAjE,EAAAgF,MAAAxI,EAAA7G,MAAAe,oBAAA,sCAAAsJ,EAAAgF,QAGAhF,EAAAC,SAAAzD,EAAAnF,QAAA3C,OAAAsL,EAAAgE,gBACApJ,KAAAqJ,UAAAjE,EAAAgF,MAAAhF,EAAA3F,KAAA,GAAA2F,EAAA3F,KAAAqL,MAAA,KAwBA0iB,EAAAlqB,UAAA+F,UAAA,SAAAe,EAAAsE,EAAA0a,GACA,IAAAvlB,OAAA,EAaA,GAPA6K,IAAA9M,EAAA7G,MAAAS,aAAAkT,IAAA9M,EAAA7G,MAAAW,kBACAsE,KAAAuL,uBAAA3J,EAAArI,iBAAAI,0BACAkK,EAAA,oFACAoF,WAAAjJ,KAAAqJ,UAAA9G,KAAAvC,KAAA4B,EAAA7G,MAAAiB,kBAAA4F,EAAAhH,MAAAd,MAAA+J,GAAA,KAIA7D,KAAA+I,aAAA,SAYA,MARAub,QAAAC,IAAA,iFAEA1gB,EAAA6K,EAAA,KAAA0a,EAEAhf,IACAvG,GAAA,KAAAuG,EAAA,KAGA,IAAAlI,MAAA2B,GAXA7D,KAAAyC,KAAA,QAAA2mB,EAAA1a,EAAAtE,GACApK,KAAAyC,KAAAiM,EAAAtE,EAAAgf,IAuBAoE,EAAAlqB,UAAAuqB,gBAAA,SAAAhV,GACA7Y,KAAAqJ,UAAAwP,EAAAzO,MAAAyO,EAAApZ,KAAA,GAAAoZ,EAAApZ,KAAA,KAYA+tB,EAAAlqB,UAAAoqB,YAAA,SAAA1rB,GACA,IAAAqsB,KAEA,QAAAxnB,KAAAymB,OACA,IAAAtrB,EAAA6E,GACAwnB,EAAAxnB,GAAAymB,EAAAzmB,GAEAwnB,EAAAxnB,GAAA7E,EAAA6E,GAIA,OAAAwnB,GAoBAb,EAAAlqB,UAAAgrB,UAAA1sB,EACAksB,EAAAQ,UAAA1sB,EAKA4rB,EAAAlqB,UAAAirB,iBAAAnB,EACAU,EAAAS,iBAAAnB,EAEArnB,EAAAzM,QAAAw0B,qCC3QA,IAAAlsB,EAAAjC,EAAA,QAgBA4tB,EAAA,SAAAhmB,EAAAvF,GACAhC,KAAA2H,SAAA3F,EACAhC,KAAA6H,QAAAN,EACAvH,KAAAwuB,aACAxuB,KAAAoI,SAAA,EACAb,EAAA/E,GAAA,yBAAAxC,KAAAyuB,0BAAAlsB,KAAAvC,QApBAL,EAAA,OAuBA+B,CAAA6rB,EAAAjqB,WAUAiqB,EAAAjqB,UAAA6G,IAAA,SAAAoN,GACA,IAAAmX,EAAAnX,WAAAvX,KAAA2H,SAAAgnB,oBAEA,OAAA3uB,KAAA6H,QAAA0D,uBAAA3J,EAAArI,iBAAAM,MAAA60B,EAAA,GACA,GAGA1uB,KAAAmJ,OAAAoO,GACAA,EAAAI,MAAA3X,KAAAoI,WACAmP,EAAA7I,MAAA6I,EAAA7I,OAAA9M,EAAA7G,MAAAS,YACA+b,EAAAqX,UAAA3lB,WAAAjJ,KAAA6uB,WAAAtsB,KAAAvC,KAAAuX,GAAAmX,GACA1uB,KAAAwuB,UAAAxuB,KAAA8uB,eAAAvX,MACAA,EAAAI,QAWA4V,EAAAjqB,UAAA6F,OAAA,SAAAoO,GACA,GAAAA,EAAAI,MACA,QAAAoX,KAAA/uB,KAAAwuB,UACAjX,EAAAI,QAAA3X,KAAAwuB,UAAAO,GAAApX,OACA3X,KAAAsJ,OACAc,MAAApK,KAAAwuB,UAAAO,GAAA3kB,MACA/E,OAAArF,KAAAwuB,UAAAO,GAAA1pB,OACA5F,MAAAO,KAAAwuB,UAAAO,GAAAhtB,QAMA/B,KAAAwuB,UAAAxuB,KAAA8uB,eAAAvX,KACAvX,KAAAsJ,OACAc,MAAAmN,EAAAnN,MACA/E,OAAAkS,EAAAlS,OACA5F,MAAA8X,EAAAxV,SAaAwrB,EAAAjqB,UAAAgG,MAAA,SAAAlE,GACA,IAAA2pB,OAAA,EAEAA,EADA3pB,EAAAC,SAAAzD,EAAAnF,QAAAG,KAAAwI,EAAA3F,KAAAwC,OAAA,EACAmD,EAAAgF,MAAAhF,EAAA3F,KAAA,IAAA2F,EAAA3F,KAAA,GAAA2F,EAAA3F,KAAA,OAEA2F,EAAAgF,MAAAhF,EAAAC,OAAAD,EAAA3F,KAAA,GAGAO,KAAAwuB,UAAAO,IACAC,aAAAhvB,KAAAwuB,UAAAO,GAAAH,kBAGA5uB,KAAAwuB,UAAAO,IAWAxB,EAAAjqB,UAAAurB,WAAA,SAAAtX,GAGA,UAFAvX,KAAAwuB,UAAAxuB,KAAA8uB,eAAAvX,IAEAA,EAAAtS,gBACAsS,EAAAqX,iBACArX,UACAA,EAAAtS,SAAAsS,OACG,CACH,IAAA6R,EAAA,mCAAA7R,EAAAxV,KAAA,QAAAwV,EAAAxV,KAAA,IACA/B,KAAA6H,QAAAwB,UAAAkO,EAAAnN,MAAAmN,EAAA7I,MAAA0a,KAUAmE,EAAAjqB,UAAAwrB,eAAA,SAAAvX,GACA,OAAAA,EAAAnN,MAAAmN,EAAAlS,QAAAkS,EAAAxV,KAAAwV,EAAAxV,KAAA,KASAwrB,EAAAjqB,UAAAmrB,0BAAA,SAAAQ,GACA,GAAAA,IAAArtB,EAAArI,iBAAAM,KACA,QAAAk1B,KAAA/uB,KAAAwuB,UACAQ,aAAAhvB,KAAAwuB,UAAAO,GAAAH,YAKA7oB,EAAAzM,QAAAi0B,qCCnJA,IAAAgB,EAAA5uB,EAAA,QAEAoG,EAAAzM,SAQA41B,kBAAA,IAaAC,2BAAA,IAQAC,qBAAA,KAMAC,qBAAA,EAMA7X,cAAA,IAOAE,mBAAA,IAQAiX,oBAAA,IAeAW,qBAAA,IAOAC,iCAAA,GAOA9W,qBAAA,KAOAtM,kBAAA,KAWAsN,oBAAA,KAKA1U,KAAA,cAUAsT,cAAAkW,EAAAiB,YAQA9W,gBAAA,EASA+W,kBAAA,2ECzIA,IAAAzpB,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAA3C,UAAA,gBAAA6C,GAE5IupB,EAAAhe,EAAAie,WAAAje,EAAAke,aACAC,EAAAlwB,EAAA,GACA+L,EAAA/L,EAAA,QACAgM,EAAAhM,EAAA,QACAoQ,EAAApQ,EAAA,QACAiC,EAAAjC,EAAA,QAWA0tB,EAAA,SAAA9lB,EAAAuc,EAAA9hB,GACAhC,KAAA6H,QAAAN,EACAvH,KAAA2H,SAAA3F,EACAhC,KAAA8vB,YAAA,KACA9vB,KAAA+vB,cAAA,KACA/vB,KAAAgwB,kBAAA,EACAhwB,KAAAiwB,cAAA,EACAjwB,KAAAkwB,sBAAA,EACAlwB,KAAAmwB,kCAAA,EACAnwB,KAAAowB,kBAAA,EACApwB,KAAAqwB,mBACArwB,KAAAswB,kBAAA,KACAtwB,KAAAuwB,qBAAA,EACAvwB,KAAAwwB,2BAAA,EACAxwB,KAAAywB,uBAAA,KACAzwB,KAAA0wB,4BAAA,KACA1wB,KAAA2wB,UAAA,KACA3wB,KAAA4wB,eAAA,KACA5wB,KAAA6wB,mBAAA,KAEA7wB,KAAA8wB,aAAA/gB,EAAAghB,SAAAjN,EAAA9jB,KAAA2H,SAAA5C,MACA/E,KAAAytB,KAAAztB,KAAA8wB,aAEA9wB,KAAAgxB,OAAApvB,EAAArI,iBAAAC,OACAwG,KAAAixB,mBAUA5D,EAAA/pB,UAAA4qB,SAAA,WACA,OAAAluB,KAAAgxB,QAeA3D,EAAA/pB,UAAA0qB,aAAA,SAAAkD,EAAAjsB,GACA,wBAAAisB,EAAA,YAAAlrB,EAAAkrB,IAAA,CAQA,GAHAlxB,KAAA8vB,YAAAoB,EACAlxB,KAAA+vB,cAAA9qB,IAEAjF,KAAAkwB,sBAAAlwB,KAAAowB,kBAAApwB,KAAAmwB,kCAGG,WAAAnwB,KAAAgwB,kBAAAhwB,KAAAgxB,SAAApvB,EAAArI,iBAAAC,QACHwG,KAAAixB,uBACAjxB,KAAAgwB,kBAAA,SAIAhwB,KAAAgxB,SAAApvB,EAAArI,iBAAAI,yBACAqG,KAAAmxB,mBATAnxB,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAd,MAAA8H,EAAA7G,MAAAuB,UAAA,4CARA0D,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAd,MAAA8H,EAAA7G,MAAAsB,iBAAA,gCAiCAgxB,EAAA/pB,UAAAqF,QAAA,SAAAyB,EAAA/E,EAAA5F,GACAO,KAAAoxB,KAAAzlB,EAAAsP,OAAA7Q,EAAA/E,EAAA5F,KAaA4tB,EAAA/pB,UAAA8tB,KAAA,SAAAhsB,GACApF,KAAAqwB,gBAAAtsB,KAAAqB,GACApF,KAAAwwB,6BAEA,OAAAxwB,KAAA0wB,8BACA1wB,KAAA0wB,4BAAA3gB,EAAAshB,SAAArxB,KAAAsxB,0BAAA/uB,KAAAvC,QAGAA,KAAAgxB,SAAApvB,EAAArI,iBAAAM,MAAAmG,KAAAqwB,gBAAApuB,OAAAjC,KAAA2H,SAAA2nB,sBAAAtvB,KAAAwwB,2BAAAxwB,KAAA2H,SAAA2nB,qBACAtvB,KAAAuxB,sBACG,OAAAvxB,KAAAywB,wBACHzwB,KAAAwxB,oBAYAnE,EAAA/pB,UAAA2qB,MAAA,WACAwD,cAAAzxB,KAAA6wB,oBACA7wB,KAAAgwB,kBAAA,EACAhwB,KAAA2wB,UAAA1C,SAUAZ,EAAA/pB,UAAA2tB,gBAAA,WACAjxB,KAAA2wB,UAAAjB,EAAA,IAAAA,EAAA1vB,KAAAytB,MAAA,IAAAoC,EAAA7vB,KAAAytB,KAAAztB,KAAA2H,SAAA8nB,mBAEAzvB,KAAA2wB,UAAAe,OAAA1xB,KAAA2xB,QAAApvB,KAAAvC,MACAA,KAAA2wB,UAAA9vB,QAAAb,KAAA4xB,SAAArvB,KAAAvC,MACAA,KAAA2wB,UAAAkB,QAAA7xB,KAAA8xB,SAAAvvB,KAAAvC,MACAA,KAAA2wB,UAAAoB,UAAA/xB,KAAAgyB,WAAAzvB,KAAAvC,OAgBAqtB,EAAA/pB,UAAAguB,0BAAA,WACAtxB,KAAAwwB,2BAAA,EACAxwB,KAAA0wB,4BAAA,MAWArD,EAAA/pB,UAAAiuB,oBAAA,WACA,GAAAvxB,KAAAgxB,SAAApvB,EAAArI,iBAAAM,MAAAmG,KAAA2wB,UAAAsB,aAAAjyB,KAAA2wB,UAAA92B,KAIA,OAAAmG,KAAAqwB,gBAAApuB,OAAA,CAKA,IAAAmD,EAAApF,KAAAqwB,gBAAA3rB,OAAA,EAAA1E,KAAA2H,SAAA2nB,sBAAA9b,KAAA,IAEA,IAAAxT,KAAAqwB,gBAAApuB,OACAjC,KAAAwxB,mBAEAxxB,KAAAywB,uBAAA,KAGAzwB,KAAAkyB,QAAA9sB,QAZApF,KAAAywB,uBAAA,MAwBApD,EAAA/pB,UAAA4uB,QAAA,SAAA9sB,GACApF,KAAA2wB,UAAAsB,aAAAjyB,KAAA2wB,UAAA92B,KACAmG,KAAA2wB,UAAAS,KAAAhsB,GAEApF,KAAA4xB,SAAA,2DAWAvE,EAAA/pB,UAAAkuB,iBAAA,WACA,IAAA7iB,EAAA3O,KAAAuxB,oBAAAhvB,KAAAvC,MACAmyB,EAAAnyB,KAAA2H,SAAA4nB,iCAEAvvB,KAAAywB,uBAAAxnB,WAAA0F,EAAAwjB,IAUA9E,EAAA/pB,UAAA6tB,gBAAA,WACAnxB,KAAAoyB,UAAAxwB,EAAArI,iBAAAK,gBACA,IAAAy4B,EAAA1mB,EAAAsP,OAAArZ,EAAAhH,MAAAE,KAAA8G,EAAAnF,QAAA4B,SAAA2B,KAAA8vB,cACA9vB,KAAAkyB,QAAAG,IAQAhF,EAAA/pB,UAAAgvB,gBAAA,WACA,IAAAC,EAAA,EAAAvyB,KAAA2H,SAAAunB,kBAEA7S,KAAAmW,MAAAxyB,KAAA4wB,eAAA2B,IACAd,cAAAzxB,KAAA6wB,oBACA7wB,KAAA2wB,UAAA1C,QACAjuB,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAC,WAAA+G,EAAA7G,MAAAK,iBAAA,sCAAAm3B,EAAA,mBAYAlF,EAAA/pB,UAAAquB,QAAA,WACA3xB,KAAAyyB,kBACAzyB,KAAA4wB,eAAAvU,KAAAmW,MACAxyB,KAAA6wB,mBAAA9gB,EAAA2iB,YAAA1yB,KAAAsyB,gBAAA/vB,KAAAvC,WAAA2H,SAAAunB,mBACAlvB,KAAAoyB,UAAAxwB,EAAArI,iBAAAE,sBAeA4zB,EAAA/pB,UAAAsuB,SAAA,SAAAvjB,GACA,IAAA8K,EAAAnZ,KAEAyxB,cAAAzxB,KAAA6wB,oBACA7wB,KAAAoyB,UAAAxwB,EAAArI,iBAAAO,OAMAmP,WAAA,WACA,IAAAmgB,OAAA,EACA,kBAAA/a,EAAAskB,MAAA,iBAAAtkB,EAAAskB,KACAvJ,EAAA,mDAAAjQ,EAAA2X,kBAEA,IACA1H,EAAA7f,KAAA8H,UAAAhD,GACO,MAAA5E,GACP2f,EAAA/a,EAAAoB,WAGA0J,EAAAtR,QAAAwB,UAAAzH,EAAAhH,MAAAC,WAAA+G,EAAA7G,MAAAK,iBAAAguB,IACG,IAcHiE,EAAA/pB,UAAAwuB,SAAA,WACAL,cAAAzxB,KAAA6wB,qBAEA,IAAA7wB,KAAAiwB,cACAjwB,KAAAiwB,cAAA,EACAjwB,KAAAixB,oBACG,IAAAjxB,KAAAgwB,iBACHhwB,KAAAoyB,UAAAxwB,EAAArI,iBAAAC,QAEAwG,KAAA4yB,iBAYAvF,EAAA/pB,UAAA0uB,WAAA,SAAA5sB,GAGA,IAFA,IAAAgK,EAAA1D,EAAAlC,MAAApE,EAAA3F,KAAAO,KAAA6H,SAEA/D,EAAA,EAAiBA,EAAAsL,EAAAnN,OAA2B6B,IAC5C,OAAAsL,EAAAtL,KAEKsL,EAAAtL,GAAAsG,QAAAxI,EAAAhH,MAAAC,WACLmF,KAAA6yB,0BAAAzjB,EAAAtL,IACKsL,EAAAtL,GAAAsG,QAAAxI,EAAAhH,MAAAE,KACLkF,KAAA8yB,oBAAA1jB,EAAAtL,IAEA9D,KAAA6H,QAAAkG,YAAAqB,EAAAtL,MA2BAupB,EAAA/pB,UAAAuvB,0BAAA,SAAAztB,GACAA,EAAAC,SAAAzD,EAAAnF,QAAAC,MACAsD,KAAA4wB,eAAAvU,KAAAmW,MACAxyB,KAAAkyB,QAAAvmB,EAAAsP,OAAArZ,EAAAhH,MAAAC,WAAA+G,EAAAnF,QAAAE,QACGyI,EAAAC,SAAAzD,EAAAnF,QAAAG,KACHoD,KAAAoyB,UAAAxwB,EAAArI,iBAAAI,yBACAqG,KAAA8vB,aACA9vB,KAAAmxB,mBAEG/rB,EAAAC,SAAAzD,EAAAnF,QAAAK,WACHkD,KAAAoyB,UAAAxwB,EAAArI,iBAAAG,aACAsG,KAAAkyB,QAAAvmB,EAAAsP,OAAArZ,EAAAhH,MAAAC,WAAA+G,EAAAnF,QAAAM,oBAAAiD,KAAA8wB,iBACG1rB,EAAAC,SAAAzD,EAAAnF,QAAA8B,WACHyB,KAAAowB,kBAAA,EACApwB,KAAAiuB,SACG7oB,EAAAC,SAAAzD,EAAAnF,QAAAI,UACHmD,KAAAytB,KAAAroB,EAAA3F,KAAA,GACAO,KAAAiwB,cAAA,EACAjwB,KAAA2wB,UAAA1C,SACG7oB,EAAAC,SAAAzD,EAAAnF,QAAA3C,OACHsL,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAQ,oCACAyE,KAAAgwB,kBAAA,EACAhwB,KAAAmwB,kCAAA,EACAnwB,KAAA6H,QAAAwB,UAAAzH,EAAAhH,MAAAC,WAAAuK,EAAA3F,KAAA,GAAA2F,EAAA3F,KAAA,MAgBA4tB,EAAA/pB,UAAAwvB,oBAAA,SAAA1tB,GACA,GAAAA,EAAAC,SAAAzD,EAAAnF,QAAA3C,MAAA,CAEA,GAAAsL,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAqB,uBACA4D,KAAAgwB,kBAAA,EACAhwB,KAAAkwB,sBAAA,MACK,IAAA9qB,EAAA3F,KAAA,KAAAmC,EAAA7G,MAAAsB,iBAOL,OANA2D,KAAAgwB,kBAAA,OAEAhwB,KAAA+vB,eACA/vB,KAAA+vB,eAAA,qCAKA/vB,KAAAoyB,UAAAxwB,EAAArI,iBAAAI,yBAGAqG,KAAA+vB,eACA/vB,KAAA+vB,eAAA,EAAA/vB,KAAA+yB,aAAA3tB,EAAA3F,KAAA,UAEG2F,EAAAC,SAAAzD,EAAAnF,QAAAG,MACHoD,KAAAoyB,UAAAxwB,EAAArI,iBAAAM,MAEAmG,KAAA+vB,eACA/vB,KAAA+vB,eAAA,EAAA/vB,KAAA+yB,aAAA3tB,EAAA3F,KAAA,KAGAO,KAAAuxB,wBAaAlE,EAAA/pB,UAAAyvB,aAAA,SAAAtzB,GACA,YAAA+F,IAAA/F,EACA,KAEAiM,EAAAyC,aAAA1O,EAAAO,KAAA6H,UAUAwlB,EAAA/pB,UAAA8uB,UAAA,SAAA9mB,GACAtL,KAAAgxB,OAAA1lB,EACAtL,KAAA6H,QAAApF,KAAAb,EAAA7G,MAAAM,yBAAAiQ,IAaA+hB,EAAA/pB,UAAAsvB,cAAA,WACA,OAAA5yB,KAAAswB,oBAIAtwB,KAAAuwB,qBAAAvwB,KAAA2H,SAAA0nB,sBACArvB,KAAAoyB,UAAAxwB,EAAArI,iBAAAQ,cACAiG,KAAAswB,kBAAArnB,WAAAjJ,KAAAgzB,SAAAzwB,KAAAvC,MAAAgT,KAAAigB,IAAAjzB,KAAA2H,SAAAynB,qBAAApvB,KAAA2H,SAAAwnB,2BAAAnvB,KAAAuwB,uBACAvwB,KAAAuwB,yBAEAvwB,KAAAyyB,kBACAzyB,KAAAiuB,QACAjuB,KAAA6H,QAAApF,KAAAb,EAAA7G,MAAAO,kCAAA0E,KAAAuwB,yBAUAlD,EAAA/pB,UAAA0vB,SAAA,WACAhzB,KAAA8wB,eAAA9wB,KAAAytB,OACAztB,KAAAytB,KAAAztB,KAAA8wB,cAEA9wB,KAAAixB,kBACAjxB,KAAAswB,kBAAA,MAYAjD,EAAA/pB,UAAAmvB,gBAAA,WACAzD,aAAAhvB,KAAAswB,mBACAtwB,KAAAswB,kBAAA,KACAtwB,KAAAuwB,qBAAA,GAGAxqB,EAAAzM,QAAA+zB,2DChiBAtnB,EAAAzM,SAIAk2B,YAAA,SAAA/hB,EAAAylB,EAAAnZ,EAAA9U,GACAA,EAAA,KAAAiuB,IAMAC,WAAA,SAAA1lB,EAAAylB,EAAAnZ,EAAA9U,GACAA,EAAA,KAAAwI,EAAAhK,4CCZAsC,EAAAzM,SACA85B,SAAA,SAAAC,GACA,0BAEAC,SAAA,SAAAD,GACA,iCAAAA,GAEAE,OAAA,SAAAF,GACA,cAAAA,GAEAG,kBAAA,SAAAH,GACA,aAAAA,0BCbAttB,EAAAzM,QAAA,SAAAyM,GAoBA,OAnBAA,EAAA0tB,kBACA1tB,EAAA2tB,UAAA,aACA3tB,EAAA+U,SAEA/U,EAAA4tB,WAAA5tB,EAAA4tB,aACAt0B,OAAAuH,eAAAb,EAAA,UACAU,YAAA,EACAhD,IAAA,WACA,OAAAsC,EAAA6tB,KAGAv0B,OAAAuH,eAAAb,EAAA,MACAU,YAAA,EACAhD,IAAA,WACA,OAAAsC,EAAAjC,KAGAiC,EAAA0tB,gBAAA,GAEA1tB,2DClBA,IAAAnE,EAAAjC,EAAA,QACAoQ,EAAApQ,EAAA,QACAgM,EAAAhM,EAAA,QAUAsW,EAAA,SAAA3O,EAAAvF,EAAAmI,GACAlK,KAAA4H,YAAAN,EACAtH,KAAA6zB,MAAA9xB,EACA/B,KAAA8zB,eAAA5pB,EACAlK,KAAA+zB,iBAAA,EACA/zB,KAAAg0B,aAAA,EACAh0B,KAAAi0B,SAAA,EACAlkB,EAAAshB,SAAArxB,KAAAk0B,gBAAA3xB,KAAAvC,QAWAiW,EAAA3S,UAAA6T,IAAA,YACA,IAAAnX,KAAA+zB,kBACA/zB,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAK,IAAA2G,EAAAnF,QAAAG,KAAAgF,EAAAnF,QAAA4B,QAAA2B,KAAA6zB,MAAA7zB,KAAA8zB,iBACA9zB,KAAA+zB,iBAAA,IAcA9d,EAAA3S,UAAAiY,OAAA,WACAvb,KAAAi0B,SAAA,EACAj0B,KAAAg0B,aAAA,EACAh0B,KAAA+zB,iBAAA,EACA/zB,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAK,IAAA2G,EAAAnF,QAAA8B,WAAAyB,KAAA6zB,MAAA7zB,KAAA8zB,kBAWA7d,EAAA3S,UAAA+K,MAAA,SAAAxK,GACA7D,KAAAi0B,SAAA,EACAj0B,KAAAg0B,aAAA,EACAh0B,KAAA+zB,iBAAA,EACA/zB,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAK,IAAA2G,EAAAnF,QAAA3C,OAAA+J,EAAA7D,KAAA6zB,MAAA7zB,KAAA8zB,kBAgBA7d,EAAA3S,UAAA8tB,KAAA,SAAA3xB,GACA,QAAAO,KAAAg0B,YACA,UAAA9xB,MAAA,OAAAlC,KAAA6zB,MAAA,sBAEA7zB,KAAAmX,MAEA,IAAAP,EAAAjL,EAAAgC,MAAAlO,GACAO,KAAA4H,YAAAe,QAAA/G,EAAAhH,MAAAK,IAAA2G,EAAAnF,QAAA6B,UAAA0B,KAAA6zB,MAAA7zB,KAAA8zB,eAAAld,IACA5W,KAAAg0B,aAAA,GAUA/d,EAAA3S,UAAA4wB,gBAAA,YACA,IAAAl0B,KAAAi0B,SACAj0B,KAAAmX,OAIApR,EAAAzM,QAAA2c,qCClFA,SAAAke,EAAAhuB,EAAAiuB,GACA,OAAA/0B,OAAAiE,UAAA6wB,eAAA5uB,KAAAY,EAAAiuB,GAGAruB,EAAAzM,QAAA,SAAA+6B,EAAAC,EAAAC,EAAAvyB,GACAsyB,KAAA,IACAC,KAAA,IACA,IAAApuB,KAEA,oBAAAkuB,GAAA,IAAAA,EAAApyB,OACA,OAAAkE,EAGA,IAAAquB,EAAA,MACAH,IAAA/kB,MAAAglB,GAEA,IAAAG,EAAA,IACAzyB,GAAA,iBAAAA,EAAAyyB,UACAA,EAAAzyB,EAAAyyB,SAGA,IAAA1lB,EAAAslB,EAAApyB,OAEAwyB,EAAA,GAAA1lB,EAAA0lB,IACA1lB,EAAA0lB,GAGA,QAAA3wB,EAAA,EAAiBA,EAAAiL,IAASjL,EAAA,CAC1B,IAEA4wB,EAAAC,EAAArgB,EAAAsgB,EAFA9J,EAAAuJ,EAAAvwB,GAAAyP,QAAAihB,EAAA,OACAK,EAAA/J,EAAAjhB,QAAA0qB,GAGAM,GAAA,GACAH,EAAA5J,EAAAtb,OAAA,EAAAqlB,GACAF,EAAA7J,EAAAtb,OAAAqlB,EAAA,KAEAH,EAAA5J,EACA6J,EAAA,IAGArgB,EAAAwgB,mBAAAJ,GACAE,EAAAE,mBAAAH,GAEAR,EAAAhuB,EAAAmO,GAEK/D,EAAApK,EAAAmO,IACLnO,EAAAmO,GAAAvQ,KAAA6wB,GAEAzuB,EAAAmO,IAAAnO,EAAAmO,GAAAsgB,GAJAzuB,EAAAmO,GAAAsgB,EAQA,OAAAzuB,GAGA,IAAAoK,EAAA7M,MAAA6M,SAAA,SAAAwkB,GACA,yBAAA11B,OAAAiE,UAAAmM,SAAAlK,KAAAwvB,qJC9CAC,GACA71B,OAAA,0BACA4nB,YACA7nB,mBAAA,GAEAO,KALA,WAMA,OACAw1B,UAAA,EACA11B,KAAAS,KAAAk1B,QAAApR,IAAAxU,MAAA,QACAoM,UAEAC,MAAA,MACA9U,IAAA,YACA+U,UAAA,EACAC,MAAA,IACAsZ,MAAA,SACAr1B,OAAA,SAAAgc,EAAAC,GACA,OAAAD,EACA,KAEAzb,OACA2b,KAAA,yBAAAD,EAAAE,IAAAC,UACA3V,OAAA,WAGAwV,EAAAE,IAAAC,cAKAP,MAAA,OACA9U,IAAA,aAGA8U,MAAA,OACA9U,IAAA,eACAgV,MAAA,KAGAF,MAAA,MACA9U,IAAA,cACA+U,UAAA,IAGAD,MAAA,SACA9U,IAAA,UACAgV,MAAA,IACAsZ,MAAA,SACAvZ,UAAA,EACA9b,OAAA,SAAAgc,EAAAC,GAmBA,OAAAD,EAAA,OAjBA,SAAAK,GACA,IAAAC,EAAA,IAAAC,KAAAF,GACAG,EAAAF,EAAAG,cACAlH,EAAA+G,EAAAI,WAAA,EACAnH,IAAA,OAAAA,IACA,IAAAoH,EAAAL,EAAAM,UACAD,IAAA,OAAAA,IACA,IAAAX,EAAAM,EAAAO,WACAb,IAAA,OAAAA,IACA,IAAAc,EAAAR,EAAAS,aACAC,EAAAV,EAAAW,aAGA,OACAT,EAAA,IAAAjH,EAAA,IAAAoH,EAAA,IAAAX,EAAA,KAHAc,IAAA,OAAAA,KAGA,KAFAE,IAAA,OAAAA,KAKAE,CAAAjB,EAAAE,IAAAgB,aAIAC,cACAC,SAAA,EACAC,UAAA,EACAC,SAAA,GACAC,YAAA,EACAwJ,WAAA,GAEA1nB,cAGA4kB,QAlFA,YAmFAhkB,KAAAk1B,QAAA9S,KAAAvY,QAAA,YACA7J,KAAAk1B,QAAA9S,KAAA,SAAApiB,KAAAk1B,QAAA9S,MAEA,IAAApE,EAAAhe,KAAAk1B,QAAApR,IAAAxU,MAAA,QACAkP,EAAAxe,KAAAo1B,aAAA7W,OAAA,SAAAC,GACA,OAAAA,EAAAR,aAEAQ,EAAAvc,OAAA,IACAjC,KAAAi1B,UAAAzW,EAAA,GAAAI,QAIAb,OACAqX,cACAnX,QAAA,SAAAyL,EAAAvZ,GACA,IAAA6N,EAAAhe,KAAAk1B,QAAApR,IAAAxU,MAAA,QACAkP,EAAAkL,EAAAnL,OAAA,SAAAC,GACA,OAAAA,EAAAR,aAEAQ,EAAAvc,OAAA,IACAjC,KAAAi1B,UAAAzW,EAAA,GAAAI,QAGAyW,MAAA,IAGAz1B,SAIAiiB,WAAA,SAAAyT,GACA,IAAAxR,EAAAwR,EAAAxR,IACAiF,EAAApX,OAAAoR,IAAApB,SAAAC,eAAA,UAAAoH,aAAA,MACA,WAAAsM,EAAA/uB,OACAoL,OAAAsX,KAAAnF,EAAA,WAEAiF,IAEAjF,GADAA,EAAAja,QAAA,WACAia,GACAwR,EAAAxR,IAAAja,QAAA,OACA,aAAAia,EAEA,UAAAA,GAIAnS,OAAAoR,IAAAgB,aAEAxkB,KAAA,WACAukB,OAEA,OAKAyR,aA9BA,WA8BA,IAAApc,EAAAnZ,KAEAmH,EAAAnH,KAAAk1B,QAAAM,QACAn2B,OAAAo2B,EAAA,EAAAp2B,CAAA8H,GAAAuX,KAAA,SAAAC,GACAA,EAAA+W,YACAvc,EAAA/Z,SAAAuf,EAAAE,aAAA,OAKA8W,WAxCA,SAwCAlsB,GAAA,IAAA4P,EAAArZ,KACAA,KAAA8mB,WAAA9mB,KAAAk1B,QAAApR,IAAAxU,MAAA,QACA,IAAAyM,GACAxc,KAAA,SACA8e,KAAAre,KAAAsd,YACAU,OAAAhe,KAAA8mB,WACAxI,MAAAte,KAAAqd,UAEAhe,OAAAof,EAAA,EAAApf,CAAA0c,GAAA2C,KAAA,SAAAC,GACAtF,EAAA+D,UAAAuB,EAAAC,MACAD,EAAAE,aAAA5c,OAAA,IACAoX,EAAA6D,WAAAyB,EAAAE,aACAxF,EAAA8D,SAAA,MAQAiB,kBA5DA,SA4DAd,GAAA,IAAA/D,EAAAvZ,KACA+b,GACAxc,KAAA,SACA8e,KAAAf,EACAU,OAAAhe,KAAA8mB,WACAxI,MAAAte,KAAAqd,UAEArd,KAAAmd,SAAA,EACA9d,OAAAof,EAAA,EAAApf,CAAA0c,GAAA2C,KAAA,SAAAC,GACAA,EAAAE,aAAA5c,OAAA,IACAsX,EAAA2D,WAAAyB,EAAAE,aACAtF,EAAA4D,SAAA,MAIAyY,aA3EA,SA2EAC,GACA,IAAA/R,EAAA,cAAA+R,EAAA7X,OACArM,OAAAoR,IAAAgB,aAEAxkB,KAAA,WACAukB,OAEA,QChOAgS,GADiBh2B,OAFjB,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBQ,YAAA,oCAA8C,YAAAZ,EAAAR,KAAAY,EAAA,UAAsCQ,YAAA,eAAAN,OAAkCwb,MAAA,MAAAvb,UAAA,YAAAC,UAAA,GAAsDiC,IAAKuzB,iBAAAh2B,EAAA41B,cAAiCx1B,EAAA,SAAcE,OAAO21B,MAAAj2B,EAAAk1B,aAAuBl1B,EAAAU,GAAA,KAAAN,EAAA,OAAwBE,OAAOK,KAAA,SAAeA,KAAA,UAAcP,EAAA,MAAAJ,EAAAU,GAAAV,EAAAe,GAAAf,EAAAm1B,QAAAe,KAAA,gBAAAl2B,EAAAU,GAAA,KAAAN,EAAA,OAAgFQ,YAAA,MAAAN,OAAyBK,KAAA,WAAiBA,KAAA,YAAgBP,EAAA,SAAcE,OAAOqb,QAAA3b,EAAA2b,QAAAjc,KAAAM,EAAAmd,WAAAkD,KAAA,WAA4DrgB,EAAAU,GAAA,KAAAN,EAAA,OAAwBa,aAAa0f,OAAA,OAAA/N,SAAA,YAAqCxS,EAAA,OAAYa,aAAa2f,MAAA,WAAiBxgB,EAAA,QAAaE,OAAOue,MAAA7e,EAAAqd,UAAAwD,QAAA7gB,EAAAud,YAAA8C,KAAA,QAAAS,YAAA9gB,EAAAsd,SAAAyD,aAAA,IAAwGte,IAAKwe,YAAAjhB,EAAAqe,sBAAmC,aAAAre,EAAAyqB,KAAAzqB,EAAAU,GAAA,KAAAN,EAAA,OAA+CQ,YAAA,eAAA6B,IAA+B6d,MAAA,SAAAmM,GAAyBzsB,EAAA8hB,WAAA9hB,EAAAm1B,aAA8B,YAAAn1B,EAAAR,KAAAY,EAAA,SAAqCE,OAAO21B,MAAAj2B,EAAAk1B,UAAA11B,KAAA,aAAwCQ,EAAAyqB,MAAA,GAAAzqB,EAAAU,GAAA,KAAAN,EAAA,OAAqCE,OAAOO,IAAAb,EAAAm1B,QAAA9S,QAAwBriB,EAAAU,GAAA,KAAAN,EAAA,OAAwBQ,YAAA,YAAsBR,EAAA,KAAUQ,YAAA,iBAAA6B,IAAiC6d,MAAA,SAAAmM,GAAyBA,EAAAC,kBAAyB1sB,EAAA61B,aAAA71B,EAAAm1B,aAAgCn1B,EAAAU,GAAA,QAAAV,EAAAU,GAAA,KAAAN,EAAA,MAAsCqC,IAAI6d,MAAA,SAAAmM,GAAyBzsB,EAAA8hB,WAAA9hB,EAAAm1B,aAA8Bn1B,EAAAU,GAAAV,EAAAe,GAAAf,EAAAm1B,QAAAe,SAAAl2B,EAAAU,GAAA,KAAAN,EAAA,QAAAJ,EAAAU,GAAAV,EAAAe,GAAAf,EAAAm1B,QAAAgB,cAAAn2B,EAAAm1B,QAAAiB,UAAA,KAAAp2B,EAAAm1B,QAAAiB,cAAAp2B,EAAAU,GAAA,KAAAN,EAAA,cAAsLE,OAAOjB,SAAAW,EAAAX,SAAAE,QAAA,WAA2Ca,EAAA,QAAaQ,YAAA,gBAAAN,OAAmCK,KAAA,YAAkB8B,IAAK6d,MAAAtgB,EAAAw1B,cAAyB70B,KAAA,aAAiBX,EAAAU,GAAAV,EAAAe,GAAAf,EAAAm1B,QAAAgB,qBAAA,QAExwD70B,oBCCjB,IAuBA+0B,EAvBAz2B,EAAA,OAcA4B,CACAyzB,EACAc,GATA,EAVA,SAAAt0B,GACA7B,EAAA,SAaA,kBAEA,MAUA,QCXA02B,GACAl3B,OAAA,2BAEA4nB,YACAiO,SAAAoB,GAEApS,QANA,cCZAsS,GADiBx2B,OAFjB,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBQ,YAAA,iBAAAN,OAAoCk2B,OAAA,MAAap2B,EAAA,SAAAJ,EAAAU,GAAAV,EAAAe,GAAAf,EAAAy2B,SAAAP,SAAAl2B,EAAAU,GAAA,KAAAV,EAAA6qB,GAAA7qB,EAAAy2B,SAAA,kBAAAxU,EAAA1R,GAA8G,OAAAnQ,EAAA,OAAiB0G,IAAAyJ,EAAAjQ,OAAao2B,KAAA,OAAYt2B,EAAA,aAAkBE,OAAO60B,QAAAlT,EAAAoT,aAAAr1B,EAAAq1B,iBAAgD,MAAM,IAEjX/zB,oBCCjB,IAuBAq1B,EAvBA/2B,EAAA,OAcAg3B,CACAN,EACAC,GATA,EAVA,SAAA90B,GACA7B,EAAA,SAaA,kBAEA,MAUA,oBC8CAi3B,GACA7P,YACAsP,SAAAK,EACA1B,SAAAoB,EACAS,qBAAA,SAEAp3B,KANA,WAOA,OACA4lB,UAAA,EACAyR,SAAA,EACAC,YACAC,cACAC,MAAA,EACAhB,KAAA,OACAtC,aAEAzP,OAAA,OACAgT,oBACA9B,gBACAlP,GAAA3e,EAAA,kDACA4e,QAAA,KACAgR,QAAAn3B,KAAA4pB,aAAAuN,QACAzX,MAAA,SAGAuF,QAzBA,WAyBA,IAAA9L,EAAAnZ,KACAA,KAAAkpB,mBAEA7pB,OAAAof,EAAA,EAAApf,GAAAqf,KAAA,SAAAC,GACAA,EAAAE,aAAA5c,OAAA,IACAkX,EAAA6d,aAAArD,SAAAhV,EAAAE,gBAKAxf,OAAAof,EAAA,EAAApf,GAAAqf,KAAA,SAAAC,GACAxF,EAAAic,aAAAzW,EAAAE,aAEAxf,OAAAof,EAAA,EAAApf,GAAAqf,KAAA,SAAAC,GACAxF,EAAAie,OAAAzY,GAEAxF,EAAA6d,aAAArD,SAAA1xB,OAAA,EACAkX,EAAA4d,UAAA5d,EAAA6d,cAAA5S,OAAAC,IAAA1F,IAEAxF,EAAA4d,SAAApY,EAEAxF,EAAAkM,UAAA,MAIAhmB,OAAAof,EAAA,EAAApf,GAAAqf,KAAA,SAAAC,GACAxF,EAAA+d,iBAAAvY,EAAAE,gBAIAjf,SACAy3B,WADA,SACAnT,GACAA,IACA,SAAAA,GACAlkB,KAAA82B,SAAA,EACA92B,KAAAkkB,WAEAlkB,KAAA82B,SAAA,EACA92B,KAAAkkB,OAAAvJ,OAAAuJ,MAIAoT,YAZA,WAaA3lB,OAAAoR,IAAAwU,SAAAC,KAAA,oBAIAtO,iBAAA,eAAA7P,EAAArZ,KACA2pB,EAAA3pB,KAAA4pB,aACA,GAAAD,EAAA5nB,MAAA4nB,EAAA8N,GAAA,CACA,IAAA5N,GAAAF,EAAA5nB,KAAA4nB,EAAAxiB,QAAAqM,KAAA,KACA2V,EAAA9pB,OAAA0Q,EAAA,EAAA1Q,GAEAW,KAAAkmB,GAAA4D,OAEAX,QACAU,YAEA,SAAApqB,GACA6kB,QAAAC,IAAA,sBAIAvkB,KAAAkmB,GAAAxX,MAAA/J,UAAA,cAAAwkB,EAAA,SAAAC,GACA/P,EAAA+b,aAAAhM,EAAAvK,iBAMAuY,OAAA,SAAAzY,IACA,SAAA+Y,EAAA/Y,GAIA,IAHA,IAAAiV,EAAAjV,EAAA1c,OACA+f,OAAA,EAEA4R,KAAA,CAEA,IADA5R,EAAArD,EAAAiV,IACA9P,KAAA,WAAA9B,EAAAzb,OAAA,CACA,IAAAud,EAAA9B,EAAA8B,IAGA6T,EAAA,WADAhmB,OAAAoR,IAAA6U,IAAA9T,GAEA9B,EAAA8B,IAAA6T,EAEA3V,EAAA2R,UAAA+D,EAAA1V,EAAA2R,WAGA+D,CAAA/Y,MCrLAkZ,GADiB/3B,OAFjB,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBQ,YAAA,SAAmBZ,EAAA,SAAAI,EAAA,QAA4BE,OAAO+f,KAAA,QAAAmK,IAAA,MAAyBxqB,EAAAyqB,KAAAzqB,EAAAU,GAAA,KAAAN,EAAA,OAAiCQ,YAAA,gBAA0BR,EAAA,OAAYQ,YAAA,oBAA8BR,EAAA,OAAAA,EAAA,OAAsBE,OAAOo2B,KAAA,QAAat2B,EAAA,eAAoBQ,YAAA,OAAiBR,EAAA,QAAaE,OAAOd,KAAA,SAAAQ,EAAA2f,MAAA,sBAAAU,KAAA,QAA6DrgB,EAAAU,GAAA,KAAAN,EAAA,UAA2BQ,YAAA,eAAAK,aAAwC6a,MAAA,QAAA8O,YAAA,QAAmCtqB,OAAQ0f,YAAA,WAAwBvd,IAAKwe,YAAAjhB,EAAAs3B,YAA2B3X,OAAQjX,MAAA1I,EAAA,MAAAkF,SAAA,SAAA0a,GAA2C5f,EAAA2f,MAAAC,GAAcC,WAAA,WAAqBzf,EAAA,UAAeE,OAAOoI,MAAA,UAAgBtI,EAAA,QAAaE,OAAOd,KAAA,WAAA6gB,KAAA,QAA+BrgB,EAAAU,GAAA,6BAAAV,EAAAU,GAAA,KAAAV,EAAA6qB,GAAA7qB,EAAA,0BAAAiiB,GAA+F,OAAA7hB,EAAA,UAAoB0G,IAAAmb,EAAAwC,GAAAnkB,OAAmBoI,MAAAuZ,EAAAwC,MAAiBrkB,EAAA,QAAaE,OAAOd,KAAA,WAAA6gB,KAAA,QAA+BrgB,EAAAU,GAAA,IAAAV,EAAAe,GAAAkhB,EAAAjgB,MAAA,yBAAqD,qBAAAhC,EAAAU,GAAA,KAAAV,EAAA+2B,SAAA,SAAA/2B,EAAAmkB,OAAA/jB,EAAA,MAAAJ,EAAA6qB,GAAA7qB,EAAA,kBAAAg3B,EAAAjzB,GAA2H,OAAA3D,EAAA,WAAqB0G,IAAA/C,EAAAnD,YAAA,oBAAoCR,EAAA,OAAYQ,YAAA,eAAyBR,EAAA,OAAAA,EAAA,MAAqBQ,YAAA,qBAA+BZ,EAAAU,GAAAV,EAAAe,GAAAi2B,EAAAd,WAAAl2B,EAAAU,GAAA,KAAAN,EAAA,OAA0DE,OAAOk2B,OAAA,KAAax2B,EAAA6qB,GAAAmM,EAAA,kBAAA/U,EAAA1R,GAA6C,OAAA0R,EAAA,KAAA7hB,EAAA,OAA6B0G,IAAAyJ,EAAAjQ,OAAao2B,KAAA,OAAYzU,EAAA,KAAA7hB,EAAA,aAA8BE,OAAO60B,QAAAlT,EAAAoT,aAAAr1B,EAAAq1B,gBAAgDr1B,EAAAyqB,MAAA,GAAArqB,EAAA,aAA+BE,OAAOm2B,SAAAxU,EAAA3d,MAAAiM,EAAA8kB,aAAAr1B,EAAAq1B,oBAA6D,UAAWr1B,EAAAyqB,KAAAzqB,EAAAU,GAAA,KAAAV,EAAA6qB,GAAA7qB,EAAA,0BAAAqlB,EAAA/gB,GAAiF,OAAAtE,EAAA+2B,SAAA1R,EAAAZ,KAAAzkB,EAAAmkB,OAA6HnkB,EAAAyqB,KAA7HrqB,EAAA,OAAgE0G,IAAAxC,IAAUlE,EAAA,eAAoBE,OAAO6jB,OAAAkB,EAAAZ,OAAwB,MAAe,IAE/1DnjB,oBCCjB,IAcAy2B,EAdAn4B,EAAA,OAcAo4B,CACAnB,EACAiB,GATA,EAVA,SAAAr2B,GACA7B,EAAA,SAaA,KAEA,MAUA8B,EAAA,QAAAq2B,EAAA,2CCHA,IAAAE,EAAA,SAAApD,GACA,cAAAA,GACA,aACA,OAAAA,EAEA,cACA,OAAAA,EAAA,eAEA,aACA,OAAAqD,SAAArD,KAAA,GAEA,QACA,WAIA7uB,EAAAzM,QAAA,SAAA6M,EAAAmuB,EAAAC,EAAAxyB,GAOA,OANAuyB,KAAA,IACAC,KAAA,IACA,OAAApuB,IACAA,OAAAX,GAGA,iBAAAW,EACAgN,EAAA+kB,EAAA/xB,GAAA,SAAAmO,GACA,IAAA6jB,EAAAC,mBAAAJ,EAAA1jB,IAAAigB,EACA,OAAAhkB,EAAApK,EAAAmO,IACAnB,EAAAhN,EAAAmO,GAAA,SAAAsgB,GACA,OAAAuD,EAAAC,mBAAAJ,EAAApD,MACSphB,KAAA8gB,GAET6D,EAAAC,mBAAAJ,EAAA7xB,EAAAmO,OAEKd,KAAA8gB,GAILvyB,EACAq2B,mBAAAJ,EAAAj2B,IAAAwyB,EACA6D,mBAAAJ,EAAA7xB,IAFA,IAKA,IAAAoK,EAAA7M,MAAA6M,SAAA,SAAAwkB,GACA,yBAAA11B,OAAAiE,UAAAmM,SAAAlK,KAAAwvB,IAGA,SAAA5hB,EAAA4hB,EAAAvW,GACA,GAAAuW,EAAA5hB,IAAA,OAAA4hB,EAAA5hB,IAAAqL,GAEA,IADA,IAAAG,KACA7a,EAAA,EAAiBA,EAAAixB,EAAA9yB,OAAe6B,IAChC6a,EAAA5a,KAAAya,EAAAuW,EAAAjxB,OAEA,OAAA6a,EAGA,IAAAuZ,EAAA74B,OAAAsK,MAAA,SAAAxD,GACA,IAAAwY,KACA,QAAA9X,KAAAV,EACA9G,OAAAiE,UAAA6wB,eAAA5uB,KAAAY,EAAAU,IAAA8X,EAAA5a,KAAA8C,GAEA,OAAA8X,sCC5DA,IAAA9M,EAAAlS,EAAA,QACA04B,EAAA14B,EAAA,QASA,SAAA24B,IACAt4B,KAAAu4B,SAAA,KACAv4B,KAAAw4B,QAAA,KACAx4B,KAAAy4B,KAAA,KACAz4B,KAAA04B,KAAA,KACA14B,KAAA24B,KAAA,KACA34B,KAAA44B,SAAA,KACA54B,KAAAw3B,KAAA,KACAx3B,KAAA64B,OAAA,KACA74B,KAAA84B,MAAA,KACA94B,KAAA+4B,SAAA,KACA/4B,KAAA+E,KAAA,KACA/E,KAAAgc,KAAA,KAnBA1iB,EAAAkQ,MAAAwvB,EACA1/B,EAAA2/B,QA0ZA,SAAAjU,EAAAkU,GACA,OAAAF,EAAAhU,GAAA,MAAAiU,QAAAC,IA1ZA5/B,EAAA6/B,cAiaA,SAAAnU,EAAAkU,GACA,OAAAlU,EACAgU,EAAAhU,GAAA,MAAAmU,cAAAD,GADAA,GAjaA5/B,EAAA6mB,OAsVA,SAAAha,GAKAkyB,EAAAjF,SAAAjtB,OAAA6yB,EAAA7yB,IACA,OAAAA,aAAAmyB,EACAnyB,EAAAga,SADAmY,EAAAh1B,UAAA6c,OAAA5a,KAAAY,IA1VA7M,EAAAg/B,MAqBA,IAAAc,EAAA,oBACAC,EAAA,WAGAC,EAAA,qCAOAC,GAAA,IAAgB,IAAK,kBAAAnV,QAHrB,qCAMAoV,GAAA,KAAApV,OAAAmV,GAKAE,GAAA,gBAAqC,KAAArV,OAAAoV,GACrCE,GAAA,aAEAC,EAAA,yBACAC,EAAA,+BAEAC,GACAC,YAAA,EACAC,eAAA,GAGAC,GACAF,YAAA,EACAC,eAAA,GAGAE,GACAC,MAAA,EACAC,OAAA,EACAC,KAAA,EACAC,QAAA,EACAC,MAAA,EACAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,WAAA,EACAC,SAAA,GAEAC,EAAAj7B,EAAA,QAEA,SAAAq5B,EAAAlV,EAAA+W,EAAAC,GACA,GAAAhX,GAAAuU,EAAA/E,SAAAxP,iBAAAwU,EAAA,OAAAxU,EAEA,IAAAiX,EAAA,IAAAzC,EAEA,OADAyC,EAAAvxB,MAAAsa,EAAA+W,EAAAC,GACAC,EAGAzC,EAAAh1B,UAAAkG,MAAA,SAAAsa,EAAA+W,EAAAC,GACA,IAAAzC,EAAAjF,SAAAtP,GACA,UAAArc,UAAA,gDAAAqc,GAMA,IAAAkX,EAAAlX,EAAAja,QAAA,KACAoxB,GACA,IAAAD,KAAAlX,EAAAja,QAAA,aACAqxB,EAAApX,EAAAxU,MAAA2rB,GAEAC,EAAA,GAAAA,EAAA,GAAA3nB,QADA,MACA,KAGA,IAAA4nB,EAFArX,EAAAoX,EAAA1nB,KAAAynB,GAQA,GAFAE,IAAAC,QAEAN,GAAA,IAAAhX,EAAAxU,MAAA,KAAArN,OAAA,CAEA,IAAAo5B,EAAA/B,EAAAgC,KAAAH,GACA,GAAAE,EAeA,OAdAr7B,KAAA+E,KAAAo2B,EACAn7B,KAAAgc,KAAAmf,EACAn7B,KAAA+4B,SAAAsC,EAAA,GACAA,EAAA,IACAr7B,KAAA64B,OAAAwC,EAAA,GAEAr7B,KAAA84B,MADA+B,EACAD,EAAApxB,MAAAxJ,KAAA64B,OAAArpB,OAAA,IAEAxP,KAAA64B,OAAArpB,OAAA,IAEOqrB,IACP76B,KAAA64B,OAAA,GACA74B,KAAA84B,UAEA94B,KAIA,IAAAu7B,EAAAnC,EAAAkC,KAAAH,GACA,GAAAI,EAAA,CAEA,IAAAC,GADAD,IAAA,IACAxlB,cACA/V,KAAAu4B,SAAAiD,EACAL,IAAA3rB,OAAA+rB,EAAAt5B,QAOA,GAAA64B,GAAAS,GAAAJ,EAAAxqB,MAAA,yBACA,IAAA6nB,EAAA,OAAA2C,EAAA3rB,OAAA,MACAgpB,GAAA+C,GAAAvB,EAAAuB,KACAJ,IAAA3rB,OAAA,GACAxP,KAAAw4B,SAAA,GAIA,IAAAwB,EAAAuB,KACA/C,GAAA+C,IAAAtB,EAAAsB,IAAA,CAmBA,IADA,IASA9C,EAAAgD,EATAC,GAAA,EACA53B,EAAA,EAAmBA,EAAA41B,EAAAz3B,OAA4B6B,IAAA,EAE/C,KADA63B,EAAAR,EAAAtxB,QAAA6vB,EAAA51B,QACA,IAAA43B,GAAAC,EAAAD,KACAA,EAAAC,IAiBA,KATAF,GAFA,IAAAC,EAEAP,EAAAjmB,YAAA,KAIAimB,EAAAjmB,YAAA,IAAAwmB,MAMAjD,EAAA0C,EAAArwB,MAAA,EAAA2wB,GACAN,IAAArwB,MAAA2wB,EAAA,GACAz7B,KAAAy4B,KAAA3D,mBAAA2D,IAIAiD,GAAA,EACA,IAAA53B,EAAA,EAAmBA,EAAA21B,EAAAx3B,OAAyB6B,IAAA,CAC5C,IAAA63B,GACA,KADAA,EAAAR,EAAAtxB,QAAA4vB,EAAA31B,QACA,IAAA43B,GAAAC,EAAAD,KACAA,EAAAC,IAGA,IAAAD,IACAA,EAAAP,EAAAl5B,QAEAjC,KAAA04B,KAAAyC,EAAArwB,MAAA,EAAA4wB,GACAP,IAAArwB,MAAA4wB,GAGA17B,KAAA47B,YAIA57B,KAAA44B,SAAA54B,KAAA44B,UAAA,GAIA,IAAAiD,EAAA,MAAA77B,KAAA44B,SAAA,IACA,MAAA54B,KAAA44B,SAAA54B,KAAA44B,SAAA32B,OAAA,GAGA,IAAA45B,EAEA,IADA,IAAAC,EAAA97B,KAAA44B,SAAAtpB,MAAA,MACAskB,GAAA9vB,EAAA,EAAAg4B,EAAA75B,QAA2C6B,EAAA8vB,EAAO9vB,IAAA,CAClD,IAAAi4B,EAAAD,EAAAh4B,GACA,GAAAi4B,IACAA,EAAAprB,MAAAgpB,GAAA,CAEA,IADA,IAAAqC,EAAA,GACA1rB,EAAA,EAAAgE,EAAAynB,EAAA95B,OAA0CqO,EAAAgE,EAAOhE,IACjDyrB,EAAAloB,WAAAvD,GAAA,IAIA0rB,GAAA,IAEAA,GAAAD,EAAAzrB,GAIA,IAAA0rB,EAAArrB,MAAAgpB,GAAA,CACA,IAAAsC,EAAAH,EAAAhxB,MAAA,EAAAhH,GACAo4B,EAAAJ,EAAAhxB,MAAAhH,EAAA,GACAq4B,EAAAJ,EAAAprB,MAAAipB,GACAuC,IACAF,EAAAl4B,KAAAo4B,EAAA,IACAD,EAAAE,QAAAD,EAAA,KAEAD,EAAAj6B,SACAk5B,EAAA,IAAAe,EAAA1oB,KAAA,KAAA2nB,GAEAn7B,KAAA44B,SAAAqD,EAAAzoB,KAAA,KACA,QAMAxT,KAAA44B,SAAA32B,OAjNA,IAkNAjC,KAAA44B,SAAA,GAGA54B,KAAA44B,SAAA54B,KAAA44B,SAAA7iB,cAGA8lB,IAKA77B,KAAA44B,SAAA/mB,EAAA+D,QAAA5V,KAAA44B,WAGA,IAAA5iB,EAAAhW,KAAA24B,KAAA,IAAA34B,KAAA24B,KAAA,GACA7c,EAAA9b,KAAA44B,UAAA,GACA54B,KAAA04B,KAAA5c,EAAA9F,EACAhW,KAAAgc,MAAAhc,KAAA04B,KAIAmD,IACA77B,KAAA44B,SAAA54B,KAAA44B,SAAAppB,OAAA,EAAAxP,KAAA44B,SAAA32B,OAAA,GACA,MAAAk5B,EAAA,KACAA,EAAA,IAAAA,IAOA,IAAAtB,EAAA2B,GAKA,IAAA13B,EAAA,EAAA8vB,EAAA4F,EAAAv3B,OAA0C6B,EAAA8vB,EAAO9vB,IAAA,CACjD,IAAAu4B,EAAA7C,EAAA11B,GACA,QAAAq3B,EAAAtxB,QAAAwyB,GAAA,CAEA,IAAAC,EAAAlE,mBAAAiE,GACAC,IAAAD,IACAC,EAAAC,OAAAF,IAEAlB,IAAA7rB,MAAA+sB,GAAA7oB,KAAA8oB,IAMA,IAAA9E,EAAA2D,EAAAtxB,QAAA,MACA,IAAA2tB,IAEAx3B,KAAAw3B,KAAA2D,EAAA3rB,OAAAgoB,GACA2D,IAAArwB,MAAA,EAAA0sB,IAEA,IAAAgF,EAAArB,EAAAtxB,QAAA,KAoBA,IAnBA,IAAA2yB,GACAx8B,KAAA64B,OAAAsC,EAAA3rB,OAAAgtB,GACAx8B,KAAA84B,MAAAqC,EAAA3rB,OAAAgtB,EAAA,GACA3B,IACA76B,KAAA84B,MAAA8B,EAAApxB,MAAAxJ,KAAA84B,QAEAqC,IAAArwB,MAAA,EAAA0xB,IACG3B,IAEH76B,KAAA64B,OAAA,GACA74B,KAAA84B,UAEAqC,IAAAn7B,KAAA+4B,SAAAoC,GACAlB,EAAAuB,IACAx7B,KAAA44B,WAAA54B,KAAA+4B,WACA/4B,KAAA+4B,SAAA,KAIA/4B,KAAA+4B,UAAA/4B,KAAA64B,OAAA,CACA7iB,EAAAhW,KAAA+4B,UAAA,OACA9O,EAAAjqB,KAAA64B,QAAA,GACA74B,KAAA+E,KAAAiR,EAAAiU,EAKA,OADAjqB,KAAAgc,KAAAhc,KAAAmgB,SACAngB,MAcAs4B,EAAAh1B,UAAA6c,OAAA,WACA,IAAAsY,EAAAz4B,KAAAy4B,MAAA,GACAA,IAEAA,GADAA,EAAAL,mBAAAK,IACAllB,QAAA,YACAklB,GAAA,KAGA,IAAAF,EAAAv4B,KAAAu4B,UAAA,GACAQ,EAAA/4B,KAAA+4B,UAAA,GACAvB,EAAAx3B,KAAAw3B,MAAA,GACAkB,GAAA,EACAI,EAAA,GAEA94B,KAAA04B,KACAA,EAAAD,EAAAz4B,KAAA04B,KACG14B,KAAA44B,WACHF,EAAAD,IAAA,IAAAz4B,KAAA44B,SAAA/uB,QAAA,KACA7J,KAAA44B,SACA,IAAA54B,KAAA44B,SAAA,KACA54B,KAAA24B,OACAD,GAAA,IAAA14B,KAAA24B,OAIA34B,KAAA84B,OACAT,EAAA/E,SAAAtzB,KAAA84B,QACAz5B,OAAAsK,KAAA3J,KAAA84B,OAAA72B,SACA62B,EAAA8B,EAAAvpB,UAAArR,KAAA84B,QAGA,IAAAD,EAAA74B,KAAA64B,QAAAC,GAAA,IAAAA,GAAA,GAsBA,OApBAP,GAAA,MAAAA,EAAA/oB,QAAA,KAAA+oB,GAAA,KAIAv4B,KAAAw4B,WACAD,GAAA0B,EAAA1B,MAAA,IAAAG,GACAA,EAAA,MAAAA,GAAA,IACAK,GAAA,MAAAA,EAAAzzB,OAAA,KAAAyzB,EAAA,IAAAA,IACGL,IACHA,EAAA,IAGAlB,GAAA,MAAAA,EAAAlyB,OAAA,KAAAkyB,EAAA,IAAAA,GACAqB,GAAA,MAAAA,EAAAvzB,OAAA,KAAAuzB,EAAA,IAAAA,GAOAN,EAAAG,GALAK,IAAAxlB,QAAA,iBAAA5C,GACA,OAAAynB,mBAAAznB,OAEAkoB,IAAAtlB,QAAA,YAEAikB,GAOAc,EAAAh1B,UAAA21B,QAAA,SAAAC,GACA,OAAAl5B,KAAAm5B,cAAAH,EAAAE,GAAA,OAAA/Y,UAQAmY,EAAAh1B,UAAA61B,cAAA,SAAAD,GACA,GAAAb,EAAAjF,SAAA8F,GAAA,CACA,IAAAuD,EAAA,IAAAnE,EACAmE,EAAAjzB,MAAA0vB,GAAA,MACAA,EAAAuD,EAKA,IAFA,IAAA5rB,EAAA,IAAAynB,EACAoE,EAAAr9B,OAAAsK,KAAA3J,MACA28B,EAAA,EAAkBA,EAAAD,EAAAz6B,OAAmB06B,IAAA,CACrC,IAAAC,EAAAF,EAAAC,GACA9rB,EAAA+rB,GAAA58B,KAAA48B,GAQA,GAHA/rB,EAAA2mB,KAAA0B,EAAA1B,KAGA,KAAA0B,EAAAld,KAEA,OADAnL,EAAAmL,KAAAnL,EAAAsP,SACAtP,EAIA,GAAAqoB,EAAAV,UAAAU,EAAAX,SAAA,CAGA,IADA,IAAAsE,EAAAx9B,OAAAsK,KAAAuvB,GACA4D,EAAA,EAAoBA,EAAAD,EAAA56B,OAAmB66B,IAAA,CACvC,IAAAC,EAAAF,EAAAC,GACA,aAAAC,IACAlsB,EAAAksB,GAAA7D,EAAA6D,IAUA,OANA9C,EAAAppB,EAAA0nB,WACA1nB,EAAA+nB,WAAA/nB,EAAAkoB,WACAloB,EAAA9L,KAAA8L,EAAAkoB,SAAA,KAGAloB,EAAAmL,KAAAnL,EAAAsP,SACAtP,EAGA,GAAAqoB,EAAAX,UAAAW,EAAAX,WAAA1nB,EAAA0nB,SAAA,CASA,IAAA0B,EAAAf,EAAAX,UAAA,CAEA,IADA,IAAA5uB,EAAAtK,OAAAsK,KAAAuvB,GACAtE,EAAA,EAAqBA,EAAAjrB,EAAA1H,OAAiB2yB,IAAA,CACtC,IAAAtgB,EAAA3K,EAAAirB,GACA/jB,EAAAyD,GAAA4kB,EAAA5kB,GAGA,OADAzD,EAAAmL,KAAAnL,EAAAsP,SACAtP,EAIA,GADAA,EAAA0nB,SAAAW,EAAAX,SACAW,EAAAR,MAAAsB,EAAAd,EAAAX,UASA1nB,EAAAkoB,SAAAG,EAAAH,aATA,CAEA,IADA,IAAAiE,GAAA9D,EAAAH,UAAA,IAAAzpB,MAAA,KACA0tB,EAAA/6B,UAAAi3B,EAAAR,KAAAsE,EAAAC,WACA/D,EAAAR,OAAAQ,EAAAR,KAAA,IACAQ,EAAAN,WAAAM,EAAAN,SAAA,IACA,KAAAoE,EAAA,IAAAA,EAAAZ,QAAA,IACAY,EAAA/6B,OAAA,GAAA+6B,EAAAZ,QAAA,IACAvrB,EAAAkoB,SAAAiE,EAAAxpB,KAAA,KAWA,GAPA3C,EAAAgoB,OAAAK,EAAAL,OACAhoB,EAAAioB,MAAAI,EAAAJ,MACAjoB,EAAA6nB,KAAAQ,EAAAR,MAAA,GACA7nB,EAAA4nB,KAAAS,EAAAT,KACA5nB,EAAA+nB,SAAAM,EAAAN,UAAAM,EAAAR,KACA7nB,EAAA8nB,KAAAO,EAAAP,KAEA9nB,EAAAkoB,UAAAloB,EAAAgoB,OAAA,CACA,IAAA7iB,EAAAnF,EAAAkoB,UAAA,GACA9O,EAAApZ,EAAAgoB,QAAA,GACAhoB,EAAA9L,KAAAiR,EAAAiU,EAIA,OAFApZ,EAAA2nB,QAAA3nB,EAAA2nB,SAAAU,EAAAV,QACA3nB,EAAAmL,KAAAnL,EAAAsP,SACAtP,EAGA,IAAAqsB,EAAArsB,EAAAkoB,UAAA,MAAAloB,EAAAkoB,SAAAzzB,OAAA,GACA63B,EACAjE,EAAAR,MACAQ,EAAAH,UAAA,MAAAG,EAAAH,SAAAzzB,OAAA,GAEA83B,EAAAD,GAAAD,GACArsB,EAAA6nB,MAAAQ,EAAAH,SACAsE,EAAAD,EACAE,EAAAzsB,EAAAkoB,UAAAloB,EAAAkoB,SAAAzpB,MAAA,SAEAiuB,GADAP,EAAA9D,EAAAH,UAAAG,EAAAH,SAAAzpB,MAAA,SACAuB,EAAA0nB,WAAA0B,EAAAppB,EAAA0nB,WA2BA,GApBAgF,IACA1sB,EAAA+nB,SAAA,GACA/nB,EAAA8nB,KAAA,KACA9nB,EAAA6nB,OACA,KAAA4E,EAAA,GAAAA,EAAA,GAAAzsB,EAAA6nB,KACA4E,EAAAlB,QAAAvrB,EAAA6nB,OAEA7nB,EAAA6nB,KAAA,GACAQ,EAAAX,WACAW,EAAAN,SAAA,KACAM,EAAAP,KAAA,KACAO,EAAAR,OACA,KAAAsE,EAAA,GAAAA,EAAA,GAAA9D,EAAAR,KACAsE,EAAAZ,QAAAlD,EAAAR,OAEAQ,EAAAR,KAAA,MAEA0E,MAAA,KAAAJ,EAAA,SAAAM,EAAA,KAGAH,EAEAtsB,EAAA6nB,KAAAQ,EAAAR,MAAA,KAAAQ,EAAAR,KACAQ,EAAAR,KAAA7nB,EAAA6nB,KACA7nB,EAAA+nB,SAAAM,EAAAN,UAAA,KAAAM,EAAAN,SACAM,EAAAN,SAAA/nB,EAAA+nB,SACA/nB,EAAAgoB,OAAAK,EAAAL,OACAhoB,EAAAioB,MAAAI,EAAAJ,MACAwE,EAAAN,OAEG,GAAAA,EAAA/6B,OAGHq7B,UACAA,EAAAE,MACAF,IAAAlZ,OAAA4Y,GACAnsB,EAAAgoB,OAAAK,EAAAL,OACAhoB,EAAAioB,MAAAI,EAAAJ,WACG,IAAAT,EAAA7E,kBAAA0F,EAAAL,QAAA,CAIH,GAAA0E,EACA1sB,EAAA+nB,SAAA/nB,EAAA6nB,KAAA4E,EAAAL,SAIAQ,KAAA5sB,EAAA6nB,MAAA7nB,EAAA6nB,KAAA7uB,QAAA,SACAgH,EAAA6nB,KAAAppB,MAAA,QAEAuB,EAAA4nB,KAAAgF,EAAAR,QACApsB,EAAA6nB,KAAA7nB,EAAA+nB,SAAA6E,EAAAR,SAWA,OARApsB,EAAAgoB,OAAAK,EAAAL,OACAhoB,EAAAioB,MAAAI,EAAAJ,MAEAT,EAAA9E,OAAA1iB,EAAAkoB,WAAAV,EAAA9E,OAAA1iB,EAAAgoB,UACAhoB,EAAA9L,MAAA8L,EAAAkoB,SAAAloB,EAAAkoB,SAAA,KACAloB,EAAAgoB,OAAAhoB,EAAAgoB,OAAA,KAEAhoB,EAAAmL,KAAAnL,EAAAsP,SACAtP,EAGA,IAAAysB,EAAAr7B,OAWA,OARA4O,EAAAkoB,SAAA,KAEAloB,EAAAgoB,OACAhoB,EAAA9L,KAAA,IAAA8L,EAAAgoB,OAEAhoB,EAAA9L,KAAA,KAEA8L,EAAAmL,KAAAnL,EAAAsP,SACAtP,EAcA,IARA,IAAA6sB,EAAAJ,EAAAxyB,OAAA,MACA6yB,GACA9sB,EAAA6nB,MAAAQ,EAAAR,MAAA4E,EAAAr7B,OAAA,KACA,MAAAy7B,GAAA,OAAAA,IAAA,KAAAA,EAIAE,EAAA,EACA95B,EAAAw5B,EAAAr7B,OAA8B6B,GAAA,EAAQA,IAEtC,OADA45B,EAAAJ,EAAAx5B,IAEAw5B,EAAA54B,OAAAZ,EAAA,GACK,OAAA45B,GACLJ,EAAA54B,OAAAZ,EAAA,GACA85B,KACKA,IACLN,EAAA54B,OAAAZ,EAAA,GACA85B,KAKA,IAAAR,IAAAC,EACA,KAAUO,IAAMA,EAChBN,EAAAlB,QAAA,OAIAgB,GAAA,KAAAE,EAAA,IACAA,EAAA,UAAAA,EAAA,GAAAh4B,OAAA,IACAg4B,EAAAlB,QAAA,IAGAuB,GAAA,MAAAL,EAAA9pB,KAAA,KAAAhE,QAAA,IACA8tB,EAAAv5B,KAAA,IAGA,IAUA05B,EAVAI,EAAA,KAAAP,EAAA,IACAA,EAAA,UAAAA,EAAA,GAAAh4B,OAAA,GAGAi4B,IACA1sB,EAAA+nB,SAAA/nB,EAAA6nB,KAAAmF,EAAA,GACAP,EAAAr7B,OAAAq7B,EAAAL,QAAA,IAIAQ,KAAA5sB,EAAA6nB,MAAA7nB,EAAA6nB,KAAA7uB,QAAA,SACAgH,EAAA6nB,KAAAppB,MAAA,QAEAuB,EAAA4nB,KAAAgF,EAAAR,QACApsB,EAAA6nB,KAAA7nB,EAAA+nB,SAAA6E,EAAAR,UAyBA,OArBAG,KAAAvsB,EAAA6nB,MAAA4E,EAAAr7B,UAEA47B,GACAP,EAAAlB,QAAA,IAGAkB,EAAAr7B,OAIA4O,EAAAkoB,SAAAuE,EAAA9pB,KAAA,MAHA3C,EAAAkoB,SAAA,KACAloB,EAAA9L,KAAA,MAMAszB,EAAA9E,OAAA1iB,EAAAkoB,WAAAV,EAAA9E,OAAA1iB,EAAAgoB,UACAhoB,EAAA9L,MAAA8L,EAAAkoB,SAAAloB,EAAAkoB,SAAA,KACAloB,EAAAgoB,OAAAhoB,EAAAgoB,OAAA,KAEAhoB,EAAA4nB,KAAAS,EAAAT,MAAA5nB,EAAA4nB,KACA5nB,EAAA2nB,QAAA3nB,EAAA2nB,SAAAU,EAAAV,QACA3nB,EAAAmL,KAAAnL,EAAAsP,SACAtP,GAGAynB,EAAAh1B,UAAAs4B,UAAA,WACA,IAAAlD,EAAA14B,KAAA04B,KACAC,EAAAU,EAAAiC,KAAA5C,GACAC,IAEA,OADAA,IAAA,MAEA34B,KAAA24B,OAAAnpB,OAAA,IAEAkpB,IAAAlpB,OAAA,EAAAkpB,EAAAz2B,OAAA02B,EAAA12B,SAEAy2B,IAAA14B,KAAA44B,SAAAF,uCCxtBA,IAAA92B,EAAAjC,EAAA,QACAsH,EAAAtH,EAAA,QAgBA8L,EAAA,SAAAlE,EAAAD,EAAA8C,EAAA/E,EAAAqpB,GACA1uB,KAAA6H,QAAAN,EACAvH,KAAA4H,YAAAN,EACAtH,KAAAmb,OAAA/Q,EACApK,KAAA89B,QAAAz4B,EACArF,KAAA+9B,iBAAArP,EACA1uB,KAAAg+B,aACAh+B,KAAAgI,oBAAAT,EAAAU,0BACAjI,KAAAkI,qBAAA,IAAAjB,EAAAjH,KAAA6H,QAAA7H,KAAAi+B,gBAAA17B,KAAAvC,OACAA,KAAAk+B,mBAAAl+B,KAAAk+B,mBAAA37B,KAAAvC,OAWAyL,EAAAnI,UAAA4K,WAAA,SAAAnM,GACA,QAAA/B,KAAAg+B,UAAAj8B,IAaA0J,EAAAnI,UAAA6J,QAAA,SAAApL,EAAAkD,GACAjF,KAAAg+B,UAAAj8B,KACA/B,KAAAg+B,UAAAj8B,MACA/B,KAAA4H,YAAAe,QAAA3I,KAAAmb,OAAAnb,KAAA89B,SAAA/7B,KAGA,IAAA4V,EAAA3X,KAAAgI,oBAAAmC,KACAC,MAAApK,KAAAmb,OACAzM,MAAA9M,EAAA7G,MAAAW,iBACAqG,OACAsD,OAAArF,KAAA89B,QACAvmB,QAAAvX,KAAA+9B,iBACA94B,SAAAjF,KAAAk+B,qBAEAl+B,KAAAg+B,UAAAj8B,GAAAgC,MAA6BkB,WAAA0S,WAc7BlM,EAAAnI,UAAA0K,QAAA,SAAAjM,EAAAsM,EAAA5O,GACA,IAAA+D,EAAAxD,KAAAg+B,UAAAj8B,GAEA,GAAAyB,EAAA,CAKA,QAAAM,EAAA,EAAiBA,EAAAN,EAAAvB,OAAoB6B,IAAA,CACrC,IAAAM,EAAAZ,EAAAM,GACA9D,KAAAgI,oBAAAmB,QACAwO,MAAAvT,EAAAuT,QAEAvT,EAAAa,SAAAoJ,EAAA5O,UAEAO,KAAAg+B,UAAAj8B,QAXA/B,KAAA6H,QAAAwB,UAAArJ,KAAAmb,OAAAvZ,EAAA7G,MAAAa,oBAAA,gBAAAmG,IAsBA0J,EAAAnI,UAAA46B,mBAAA,SAAA3mB,GACA,IAAA6R,EAAA,oCAAAppB,KAAAmb,OAAA,IAAAnb,KAAA89B,QAAA,IAAAvmB,EAAAxV,KACA/B,KAAA6H,QAAAwB,UAAArJ,KAAAmb,OAAAvZ,EAAA7G,MAAAW,iBAAA0tB,IASA3d,EAAAnI,UAAA26B,gBAAA,WACA,QAAA9wB,KAAAnN,KAAAg+B,UACAh+B,KAAA4H,YAAAe,QAAA3I,KAAAmb,OAAAnb,KAAA89B,SAAA3wB,KAIApH,EAAAzM,QAAAmS,kDCzHA,IAAAzF,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAA3C,UAAA,gBAAA6C,GAE5IvE,EAAAjC,EAAA,QAQAw+B,EAAA,qCAiBA7kC,EAAA8kC,YAAA,IAAAC,GAAA,qBAAAA,EAAA5uB,WAWAnW,EAAA+3B,SAAA,SAAA1iB,GACArV,EAAA8kC,OACAC,EAAAhN,SAAA1iB,GAEA1F,WAAA0F,EAAA,IAYArV,EAAA8hC,KAAA,SAAAkD,GACA,OAAAA,EAAAlD,KACAkD,EAAAlD,OAEAkD,EAAA/qB,QAAA4qB,EAAA,KAwBA7kC,EAAA8gB,WAAA,SAAAmkB,EAAAC,GACA,OAAAD,IAAAC,GAlEA,iBAoEG,IAAAD,EAAA,YAAAv4B,EAAAu4B,KApEH,iBAoEG,IAAAC,EAAA,YAAAx4B,EAAAw4B,KAIHj1B,KAAA8H,UAAAktB,KAAAh1B,KAAA8H,UAAAmtB,IAqBAllC,EAAA+W,SAAA,SAAAlK,GACA,MA9FA,iBA8FA,IAAAA,EAAA,YAAAH,EAAAG,IACAoD,KAAAC,MAAAD,KAAA8H,UAAAlL,IAEAA,GAaA7M,EAAAwX,YAAA,SAAA3K,GACA,GAAAzC,MAAA6M,QAAApK,GACA,OAAAA,EAAA2E,MAAA,GACG,GAjHH,iBAiHG,IAAA3E,EAAA,YAAAH,EAAAG,IAAA,CAGH,IAFA,IAAAs4B,EAAAp/B,OAAAuP,OAAA,MACAzP,EAAAE,OAAAsK,KAAAxD,GACArC,EAAA,EAAmBA,EAAA3E,EAAA8C,OAAkB6B,IACrC26B,EAAAt/B,EAAA2E,IAAAqC,EAAAhH,EAAA2E,IAEA,OAAA26B,EAEA,OAAAt4B,GAaA7M,EAAA2P,WAAA,SAAAhE,EAAAypB,GACA,cAAAA,EACAzlB,WAAAhE,EAAAypB,IAEA,GAaAp1B,EAAAo5B,YAAA,SAAAztB,EAAAy5B,GACA,cAAAA,EACAhM,YAAAztB,EAAAy5B,IAEA,GAaAplC,EAAAyf,qBAAAzf,EAAA8kC,QAAAzsB,OAAAoH,qBAAApH,OAAAoH,oBAAAxW,KAAAoP,SAAA,SAAAnE,GACA,IAAAmxB,EAAAtiB,KAAAmW,MACA,OAAAvpB,WAAA,WACAuE,GACAoxB,YAAA,EACAC,cAAA,WACA,OAAA7rB,KAAA8rB,IAAA,MAAAziB,KAAAmW,MAAAmM,QAGG,IAGHrlC,EAAAylC,oBAAAzlC,EAAA8kC,QAAAzsB,OAAAotB,oBAAAptB,OAAAotB,mBAAAx8B,KAAAoP,SAAA,SAAA6S,GACAwK,aAAAxK,IAOA,IAAAwa,EAAA,mBAMAC,EAAA,iBAEAC,EAAAv/B,EAAA,QAQArG,EAAAy3B,SAAA,SAAAoO,EAAAC,GACA,IAAAtb,EAAAqb,EACA,GAAAF,EAAAppB,KAAAiO,GACA,UAAA5hB,MAAA,iCAEA88B,EAAAnpB,KAAAiO,GAEG,IAAAA,EAAAja,QAAA,QACHia,EAAA,MAAAA,GAFAA,EAAA,QAAAA,EAIA,IAAAub,EAAAH,EAAA11B,MAAAsa,GACA,IAAAub,EAAA3G,KACA,UAAAx2B,MAAA,6BAIA,OAFAm9B,EAAA9G,SAAA8G,EAAA9G,SAAA8G,EAAA9G,SAAA,MACA8G,EAAAtG,SAAAsG,EAAAtG,SAAAsG,EAAAtG,SAAAqG,EACAF,EAAA/e,OAAAkf,IAOA/lC,EAAAwf,YAAA,SAAAvR,GAEA,OADAA,EAAAgE,uBACA3J,EAAArI,iBAAAM","file":"static/js/5.aaf258b08bcae941f473.js","sourcesContent":["'use strict';\n\nexports.CONNECTION_STATE = {};\n\nexports.CONNECTION_STATE.CLOSED = 'CLOSED';\nexports.CONNECTION_STATE.AWAITING_CONNECTION = 'AWAITING_CONNECTION';\nexports.CONNECTION_STATE.CHALLENGING = 'CHALLENGING';\nexports.CONNECTION_STATE.AWAITING_AUTHENTICATION = 'AWAITING_AUTHENTICATION';\nexports.CONNECTION_STATE.AUTHENTICATING = 'AUTHENTICATING';\nexports.CONNECTION_STATE.OPEN = 'OPEN';\nexports.CONNECTION_STATE.ERROR = 'ERROR';\nexports.CONNECTION_STATE.RECONNECTING = 'RECONNECTING';\n\nexports.MESSAGE_SEPERATOR = String.fromCharCode(30); // ASCII Record Seperator 1E\nexports.MESSAGE_PART_SEPERATOR = String.fromCharCode(31); // ASCII Unit Separator 1F\n\nexports.TYPES = {};\nexports.TYPES.STRING = 'S';\nexports.TYPES.OBJECT = 'O';\nexports.TYPES.NUMBER = 'N';\nexports.TYPES.NULL = 'L';\nexports.TYPES.TRUE = 'T';\nexports.TYPES.FALSE = 'F';\nexports.TYPES.UNDEFINED = 'U';\n\nexports.TOPIC = {};\nexports.TOPIC.CONNECTION = 'C';\nexports.TOPIC.AUTH = 'A';\nexports.TOPIC.ERROR = 'X';\nexports.TOPIC.EVENT = 'E';\nexports.TOPIC.RECORD = 'R';\nexports.TOPIC.RPC = 'P';\nexports.TOPIC.PRESENCE = 'U';\nexports.TOPIC.PRIVATE = 'PRIVATE/';\n\nexports.EVENT = {};\nexports.EVENT.CONNECTION_ERROR = 'connectionError';\nexports.EVENT.CONNECTION_STATE_CHANGED = 'connectionStateChanged';\nexports.EVENT.MAX_RECONNECTION_ATTEMPTS_REACHED = 'MAX_RECONNECTION_ATTEMPTS_REACHED';\nexports.EVENT.CONNECTION_AUTHENTICATION_TIMEOUT = 'CONNECTION_AUTHENTICATION_TIMEOUT';\nexports.EVENT.ACK_TIMEOUT = 'ACK_TIMEOUT';\nexports.EVENT.NO_RPC_PROVIDER = 'NO_RPC_PROVIDER';\nexports.EVENT.RESPONSE_TIMEOUT = 'RESPONSE_TIMEOUT';\nexports.EVENT.DELETE_TIMEOUT = 'DELETE_TIMEOUT';\nexports.EVENT.UNSOLICITED_MESSAGE = 'UNSOLICITED_MESSAGE';\nexports.EVENT.MESSAGE_DENIED = 'MESSAGE_DENIED';\nexports.EVENT.MESSAGE_PARSE_ERROR = 'MESSAGE_PARSE_ERROR';\nexports.EVENT.VERSION_EXISTS = 'VERSION_EXISTS';\nexports.EVENT.NOT_AUTHENTICATED = 'NOT_AUTHENTICATED';\nexports.EVENT.MESSAGE_PERMISSION_ERROR = 'MESSAGE_PERMISSION_ERROR';\nexports.EVENT.LISTENER_EXISTS = 'LISTENER_EXISTS';\nexports.EVENT.NOT_LISTENING = 'NOT_LISTENING';\nexports.EVENT.TOO_MANY_AUTH_ATTEMPTS = 'TOO_MANY_AUTH_ATTEMPTS';\nexports.EVENT.INVALID_AUTH_MSG = 'INVALID_AUTH_MSG';\nexports.EVENT.IS_CLOSED = 'IS_CLOSED';\nexports.EVENT.RECORD_NOT_FOUND = 'RECORD_NOT_FOUND';\nexports.EVENT.NOT_SUBSCRIBED = 'NOT_SUBSCRIBED';\n\nexports.ACTIONS = {};\nexports.ACTIONS.PING = 'PI';\nexports.ACTIONS.PONG = 'PO';\nexports.ACTIONS.ACK = 'A';\nexports.ACTIONS.REDIRECT = 'RED';\nexports.ACTIONS.CHALLENGE = 'CH';\nexports.ACTIONS.CHALLENGE_RESPONSE = 'CHR';\nexports.ACTIONS.READ = 'R';\nexports.ACTIONS.CREATE = 'C';\nexports.ACTIONS.UPDATE = 'U';\nexports.ACTIONS.PATCH = 'P';\nexports.ACTIONS.DELETE = 'D';\nexports.ACTIONS.SUBSCRIBE = 'S';\nexports.ACTIONS.UNSUBSCRIBE = 'US';\nexports.ACTIONS.HAS = 'H';\nexports.ACTIONS.SNAPSHOT = 'SN';\nexports.ACTIONS.INVOKE = 'I';\nexports.ACTIONS.SUBSCRIPTION_FOR_PATTERN_FOUND = 'SP';\nexports.ACTIONS.SUBSCRIPTION_FOR_PATTERN_REMOVED = 'SR';\nexports.ACTIONS.SUBSCRIPTION_HAS_PROVIDER = 'SH';\nexports.ACTIONS.LISTEN = 'L';\nexports.ACTIONS.UNLISTEN = 'UL';\nexports.ACTIONS.LISTEN_ACCEPT = 'LA';\nexports.ACTIONS.LISTEN_REJECT = 'LR';\nexports.ACTIONS.PROVIDER_UPDATE = 'PU';\nexports.ACTIONS.QUERY = 'Q';\nexports.ACTIONS.CREATEORREAD = 'CR';\nexports.ACTIONS.CREATEANDUPDATE = 'CU';\nexports.ACTIONS.EVENT = 'EVT';\nexports.ACTIONS.ERROR = 'E';\nexports.ACTIONS.REQUEST = 'REQ';\nexports.ACTIONS.RESPONSE = 'RES';\nexports.ACTIONS.REJECTION = 'REJ';\nexports.ACTIONS.PRESENCE_JOIN = 'PNJ';\nexports.ACTIONS.PRESENCE_LEAVE = 'PNL';\nexports.ACTIONS.WRITE_ACKNOWLEDGEMENT = 'WA';\n\nexports.CALL_STATE = {};\nexports.CALL_STATE.INITIAL = 'INITIAL';\nexports.CALL_STATE.CONNECTING = 'CONNECTING';\nexports.CALL_STATE.ESTABLISHED = 'ESTABLISHED';\nexports.CALL_STATE.ACCEPTED = 'ACCEPTED';\nexports.CALL_STATE.DECLINED = 'DECLINED';\nexports.CALL_STATE.ENDED = 'ENDED';\nexports.CALL_STATE.ERROR = 'ERROR';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/constants/constants.js\n// module id = 238e\n// module chunks = 5 6","<style lang=\"less\" scoped>\r\n@import \"./MyPopTip.less\";\r\n</style>\r\n<style>\r\n.ivu-poptip-inner {\r\n  border: 1px solid #39f;\r\n}\r\n.ivu-poptip-popper[x-placement^=\"bottom\"] .ivu-poptip-arrow {\r\n  border-bottom-color: #39f;\r\n}\r\n.ivu-poptip-popper[x-placement^=\"top\"] .ivu-poptip-arrow {\r\n  border-top-color: #39f;\r\n}\r\n</style>\r\n\r\n<template>\r\n    <Poptip :trigger=\"trigger\" placement=\"bottom\" :transfer=\"true\" >\r\n        <slot name=\"userCard\"></slot>\r\n        <div slot=\"content\">\r\n            <div class=\"userInfo\">\r\n                <div class=\"userInfo-top\">\r\n                    <img class=\"userInfo-img\" src=\"userInfo.photo\" :onerror=\"errorImg01\">\r\n                    <div class=\"userInfo-right\">\r\n                        <b class=\"font14\">{{userInfo.nickname}}</b>\r\n                        <i class=\"iconfont\" style=\"color:#2d8cf0\">&#xe601;</i>\r\n                        <p>\r\n                            <span class=\"user-font\">{{userInfo.groupName}}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"userInfo-bottom\">\r\n                    <p>\r\n                        <span class=\"user-font\">手机</span>\r\n                        <span class=\"left-margin\">{{userInfo.mobile}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class=\"user-font\">邮件</span>\r\n                        <span class=\"left-margin\">{{ userInfo.email}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class=\"user-font\">部门</span>\r\n                        <span class=\"left-margin\">{{userInfo.groupName}}</span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Poptip>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: {\r\n    userInfo: Object,\r\n\r\n    trigger:{\r\n        type:String,\r\n        default:'hover'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      errorImg01: 'this.src=\"' + require(\"@/styles/login_bg.jpg\") + '\"'\r\n    };\r\n  },\r\n  methods: {}\r\n};\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/poptip/MyPopTip.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Poptip',{attrs:{\"trigger\":_vm.trigger,\"placement\":\"bottom\",\"transfer\":true}},[_vm._t(\"userCard\"),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"content\"},slot:\"content\"},[_c('div',{staticClass:\"userInfo\"},[_c('div',{staticClass:\"userInfo-top\"},[_c('img',{staticClass:\"userInfo-img\",attrs:{\"src\":\"userInfo.photo\",\"onerror\":_vm.errorImg01}}),_vm._v(\" \"),_c('div',{staticClass:\"userInfo-right\"},[_c('b',{staticClass:\"font14\"},[_vm._v(_vm._s(_vm.userInfo.nickname))]),_vm._v(\" \"),_c('i',{staticClass:\"iconfont\",staticStyle:{\"color\":\"#2d8cf0\"}},[_vm._v(\"\")]),_vm._v(\" \"),_c('p',[_c('span',{staticClass:\"user-font\"},[_vm._v(_vm._s(_vm.userInfo.groupName))])])])]),_vm._v(\" \"),_c('div',{staticClass:\"userInfo-bottom\"},[_c('p',[_c('span',{staticClass:\"user-font\"},[_vm._v(\"手机\")]),_vm._v(\" \"),_c('span',{staticClass:\"left-margin\"},[_vm._v(_vm._s(_vm.userInfo.mobile))])]),_vm._v(\" \"),_c('p',[_c('span',{staticClass:\"user-font\"},[_vm._v(\"邮件\")]),_vm._v(\" \"),_c('span',{staticClass:\"left-margin\"},[_vm._v(_vm._s(_vm.userInfo.email))])]),_vm._v(\" \"),_c('p',[_c('span',{staticClass:\"user-font\"},[_vm._v(\"部门\")]),_vm._v(\" \"),_c('span',{staticClass:\"left-margin\"},[_vm._v(_vm._s(_vm.userInfo.groupName))])])])])])],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-73a747d6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/.13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/poptip/MyPopTip.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/.3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-73a747d6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=styles&index=0!./MyPopTip.vue\")\n  require(\"!!../../../node_modules/.3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-73a747d6\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=styles&index=1!./MyPopTip.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/.13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./MyPopTip.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./MyPopTip.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/.13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-73a747d6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=template&index=0!./MyPopTip.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-73a747d6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/poptip/MyPopTip.vue\n// module id = null\n// module chunks = ","'use strict';\n/* eslint-disable prefer-rest-params */\n\nvar EventEmitter = require('component-emitter2');\nvar Record = require('./record');\nvar C = require('../constants/constants');\n\nvar ENTRY_ADDED_EVENT = 'entry-added';\nvar ENTRY_REMOVED_EVENT = 'entry-removed';\nvar ENTRY_MOVED_EVENT = 'entry-moved';\n\n/**\n * A List is a specialised Record that contains\n * an Array of recordNames and provides a number\n * of convinience methods for interacting with them.\n *\n * @param {RecordHanlder} recordHandler\n * @param {String} name    The name of the list\n *\n * @constructor\n */\nvar List = function List(recordHandler, name, options) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n\n  this._recordHandler = recordHandler;\n  this._record = this._recordHandler.getRecord(name, options);\n  this._record._applyUpdate = this._applyUpdate.bind(this);\n\n  this._record.on('delete', this.emit.bind(this, 'delete'));\n  this._record.on('discard', this._onDiscard.bind(this));\n  this._record.on('ready', this._onReady.bind(this));\n\n  this.isDestroyed = this._record.isDestroyed;\n  this.isReady = this._record.isReady;\n  this.name = name;\n  this._queuedMethods = [];\n  this._beforeStructure = null;\n  this._hasAddListener = null;\n  this._hasRemoveListener = null;\n  this._hasMoveListener = null;\n\n  this.delete = this._record.delete.bind(this._record);\n  this.discard = this._record.discard.bind(this._record);\n  this.whenReady = this._record.whenReady.bind(this);\n};\n\nEventEmitter(List.prototype); // eslint-disable-line\n\n/**\n * Returns the array of list entries or an\n * empty array if the list hasn't been populated yet.\n *\n * @public\n * @returns {Array} entries\n */\nList.prototype.getEntries = function () {\n  var entries = this._record.get();\n\n  if (!(entries instanceof Array)) {\n    return [];\n  }\n\n  return entries;\n};\n\n/**\n * Returns true if the list is empty\n *\n * @public\n * @returns {Boolean} isEmpty\n */\nList.prototype.isEmpty = function () {\n  return this.getEntries().length === 0;\n};\n\n/**\n * Updates the list with a new set of entries\n *\n * @public\n * @param {Array} entries\n */\nList.prototype.setEntries = function (entries) {\n  var errorMsg = 'entries must be an array of record names';\n  var i = void 0;\n\n  if (!(entries instanceof Array)) {\n    throw new Error(errorMsg);\n  }\n\n  for (i = 0; i < entries.length; i++) {\n    if (typeof entries[i] !== 'string') {\n      throw new Error(errorMsg);\n    }\n  }\n\n  if (this._record.isReady === false) {\n    this._queuedMethods.push(this.setEntries.bind(this, entries));\n  } else {\n    this._beforeChange();\n    this._record.set(entries);\n    this._afterChange();\n  }\n};\n\n/**\n * Removes an entry from the list\n *\n * @param {String} entry\n * @param {Number} [index]\n *\n * @public\n * @returns {void}\n */\nList.prototype.removeEntry = function (entry, index) {\n  if (this._record.isReady === false) {\n    this._queuedMethods.push(this.removeEntry.bind(this, entry, index));\n    return;\n  }\n\n  var currentEntries = this._record.get();\n  var hasIndex = this._hasIndex(index);\n  var entries = [];\n  var i = void 0;\n\n  for (i = 0; i < currentEntries.length; i++) {\n    if (currentEntries[i] !== entry || hasIndex && index !== i) {\n      entries.push(currentEntries[i]);\n    }\n  }\n  this._beforeChange();\n  this._record.set(entries);\n  this._afterChange();\n};\n\n/**\n * Adds an entry to the list\n *\n * @param {String} entry\n * @param {Number} [index]\n *\n * @public\n * @returns {void}\n */\nList.prototype.addEntry = function (entry, index) {\n  if (typeof entry !== 'string') {\n    throw new Error('Entry must be a recordName');\n  }\n\n  if (this._record.isReady === false) {\n    this._queuedMethods.push(this.addEntry.bind(this, entry, index));\n    return;\n  }\n\n  var hasIndex = this._hasIndex(index);\n  var entries = this.getEntries();\n  if (hasIndex) {\n    entries.splice(index, 0, entry);\n  } else {\n    entries.push(entry);\n  }\n  this._beforeChange();\n  this._record.set(entries);\n  this._afterChange();\n};\n\n/**\n * Proxies the underlying Record's subscribe method. Makes sure\n * that no path is provided\n *\n * @public\n * @returns {void}\n */\nList.prototype.subscribe = function () {\n  var parameters = Record.prototype._normalizeArguments(arguments);\n\n  if (parameters.path) {\n    throw new Error('path is not supported for List.subscribe');\n  }\n\n  // Make sure the callback is invoked with an empty array for new records\n  var listCallback = function (callback) {\n    callback(this.getEntries());\n  }.bind(this, parameters.callback);\n\n  /**\n  * Adding a property onto a function directly is terrible practice,\n  * and we will change this as soon as we have a more seperate approach\n  * of creating lists that doesn't have records default state.\n  *\n  * The reason we are holding a referencing to wrapped array is so that\n  * on unsubscribe it can provide a reference to the actual method the\n  * record is subscribed too.\n  **/\n  parameters.callback.wrappedCallback = listCallback;\n  parameters.callback = listCallback;\n\n  this._record.subscribe(parameters);\n};\n\n/**\n * Proxies the underlying Record's unsubscribe method. Makes sure\n * that no path is provided\n *\n * @public\n * @returns {void}\n */\nList.prototype.unsubscribe = function () {\n  var parameters = Record.prototype._normalizeArguments(arguments);\n\n  if (parameters.path) {\n    throw new Error('path is not supported for List.unsubscribe');\n  }\n\n  parameters.callback = parameters.callback.wrappedCallback;\n  this._record.unsubscribe(parameters);\n};\n\n/**\n * Listens for changes in the Record's ready state\n * and applies them to this list\n *\n * @private\n * @returns {void}\n */\nList.prototype._onReady = function () {\n  this.isReady = true;\n\n  for (var i = 0; i < this._queuedMethods.length; i++) {\n    this._queuedMethods[i]();\n  }\n\n  this._queuedMethods = [];\n  this.emit('ready');\n};\n\n/**\n * Listens for the record discard event and applies\n * changes to list\n *\n * @private\n * @returns {void}\n */\nList.prototype._onDiscard = function () {\n  this.isDestroyed = true;\n  this.emit('discard');\n};\n\n/**\n * Proxies the underlying Record's _update method. Set's\n * data to an empty array if no data is provided.\n *\n * @param   {null}   path must (should :-)) be null\n * @param   {Array}  data\n *\n * @private\n * @returns {void}\n */\nList.prototype._applyUpdate = function (message) {\n  if (message.action === C.ACTIONS.PATCH) {\n    throw new Error('PATCH is not supported for Lists');\n  }\n\n  if (message.data[2].charAt(0) !== '[') {\n    message.data[2] = '[]';\n  }\n\n  this._beforeChange();\n  Record.prototype._applyUpdate.call(this._record, message);\n  this._afterChange();\n};\n\n/**\n * Validates that the index provided is within the current set of entries.\n *\n * @param {Number} index\n *\n * @private\n * @returns {Number}\n */\nList.prototype._hasIndex = function (index) {\n  var hasIndex = false;\n  var entries = this.getEntries();\n  if (index !== undefined) {\n    if (isNaN(index)) {\n      throw new Error('Index must be a number');\n    }\n    if (index !== entries.length && (index >= entries.length || index < 0)) {\n      throw new Error('Index must be within current entries');\n    }\n    hasIndex = true;\n  }\n  return hasIndex;\n};\n\n/**\n * Establishes the current structure of the list, provided the client has attached any\n * add / move / remove listener\n *\n * This will be called before any change to the list, regardsless if the change was triggered\n * by an incoming message from the server or by the client\n *\n * @private\n * @returns {void}\n */\nList.prototype._beforeChange = function () {\n  this._hasAddListener = this.listeners(ENTRY_ADDED_EVENT).length > 0;\n  this._hasRemoveListener = this.listeners(ENTRY_REMOVED_EVENT).length > 0;\n  this._hasMoveListener = this.listeners(ENTRY_MOVED_EVENT).length > 0;\n\n  if (this._hasAddListener || this._hasRemoveListener || this._hasMoveListener) {\n    this._beforeStructure = this._getStructure();\n  } else {\n    this._beforeStructure = null;\n  }\n};\n\n/**\n * Compares the structure of the list after a change to its previous structure and notifies\n * any add / move / remove listener. Won't do anything if no listeners are attached.\n *\n * @private\n * @returns {void}\n */\nList.prototype._afterChange = function () {\n  if (this._beforeStructure === null) {\n    return;\n  }\n\n  var after = this._getStructure();\n  var before = this._beforeStructure;\n  var entry = void 0;\n  var i = void 0;\n\n  if (this._hasRemoveListener) {\n    for (entry in before) {\n      for (i = 0; i < before[entry].length; i++) {\n        if (after[entry] === undefined || after[entry][i] === undefined) {\n          this.emit(ENTRY_REMOVED_EVENT, entry, before[entry][i]);\n        }\n      }\n    }\n  }\n\n  if (this._hasAddListener || this._hasMoveListener) {\n    for (entry in after) {\n      if (before[entry] === undefined) {\n        for (i = 0; i < after[entry].length; i++) {\n          this.emit(ENTRY_ADDED_EVENT, entry, after[entry][i]);\n        }\n      } else {\n        for (i = 0; i < after[entry].length; i++) {\n          if (before[entry][i] !== after[entry][i]) {\n            if (before[entry][i] === undefined) {\n              this.emit(ENTRY_ADDED_EVENT, entry, after[entry][i]);\n            } else {\n              this.emit(ENTRY_MOVED_EVENT, entry, after[entry][i]);\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\n/**\n * Iterates through the list and creates a map with the entry as a key\n * and an array of its position(s) within the list as a value, e.g.\n *\n * {\n *   'recordA': [ 0, 3 ],\n *   'recordB': [ 1 ],\n *   'recordC': [ 2 ]\n * }\n *\n * @private\n * @returns {Array} structure\n */\nList.prototype._getStructure = function () {\n  var structure = {};\n  var i = void 0;\n  var entries = this._record.get();\n\n  for (i = 0; i < entries.length; i++) {\n    if (structure[entries[i]] === undefined) {\n      structure[entries[i]] = [i];\n    } else {\n      structure[entries[i]].push(i);\n    }\n  }\n\n  return structure;\n};\n\nmodule.exports = List;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/record/list.js\n// module id = 5zl4\n// module chunks = 5 6","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EventEmitter = require('component-emitter2');\nvar C = require('../constants/constants');\nvar ResubscribeNotifier = require('../utils/resubscribe-notifier');\n\nfunction validateArguments(userId, callback, defaultAction) {\n  if (typeof userId === 'function' && callback === undefined) {\n    callback = userId; // eslint-disable-line\n    userId = defaultAction; // eslint-disable-line\n  } else {\n    userId = [userId]; // eslint-disable-line\n  }\n\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  return { userId: userId, callback: callback };\n}\n\n/**\n * The main class for presence in deepstream\n *\n * Provides the presence interface and handles incoming messages\n * on the presence topic\n *\n * @param {Object} options deepstream configuration options\n * @param {Connection} connection\n * @param {Client} client\n *\n * @constructor\n * @public\n */\nmodule.exports = function () {\n  function PresenceHandler(options, connection, client) {\n    _classCallCheck(this, PresenceHandler);\n\n    this._options = options;\n    this._connection = connection;\n    this._client = client;\n    this._queryEmitter = new EventEmitter();\n    this._subscribeEmitter = new EventEmitter();\n    this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n    this._resubscribeNotifier = new ResubscribeNotifier(this._client, this._resubscribe.bind(this));\n    this._counter = 1;\n\n    this._flush = this._flush.bind(this);\n    this._flushTimeout = null;\n    this._pendingSubscribes = {};\n    this._pendingUnsubscribes = {};\n  }\n  /**\n   * Queries for clients logged into deepstream.\n   *\n   * @param   {Function} callback Will be invoked with an array of clients\n   *\n   * @public\n   * @returns {void}\n   */\n\n\n  _createClass(PresenceHandler, [{\n    key: 'getAll',\n    value: function getAll(users, callback) {\n      if (typeof users === 'function') {\n        this._connection.sendMsg(C.TOPIC.PRESENCE, C.ACTIONS.QUERY, [C.ACTIONS.QUERY]);\n        this._queryEmitter.once(C.ACTIONS.QUERY, users);\n      } else {\n        var queryId = this._counter++;\n        this._connection.sendMsg(C.TOPIC.PRESENCE, C.ACTIONS.QUERY, [queryId, users]);\n        this._queryEmitter.once(queryId, callback);\n      }\n    }\n\n    /**\n     * Subscribes to client logins or logouts in deepstream\n     *\n     * @param   {Function} callback Will be invoked with the username of a client,\n     *                              and a boolean to indicate if it was a login or\n     *                              logout event\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'subscribe',\n    value: function subscribe(userId, callback) {\n      var args = validateArguments(userId, callback, C.ACTIONS.SUBSCRIBE);\n      if (!this._subscribeEmitter.hasListeners(args.userId)) {\n        if (args.userId === C.ACTIONS.SUBSCRIBE) {\n          this._sendGlobalSubscription(C.ACTIONS.SUBSCRIBE);\n          this._subscribeEmitter.on(C.ACTIONS.SUBSCRIBE, args.callback);\n        } else {\n          delete this._pendingUnsubscribes[args.userId];\n          this._pendingSubscribes[args.userId] = true;\n          if (!this._flushTimeout) {\n            this._flushTimeout = setTimeout(this._flush, 0);\n          }\n          this._subscribeEmitter.on(args.userId, args.callback);\n        }\n      }\n    }\n\n    /**\n     * Removes a callback for a specified presence event\n     *\n     * @param   {Function} callback The callback to unregister via {PresenceHandler#unsubscribe}\n     *\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(userId, callback) {\n      var args = validateArguments(userId, callback, C.ACTIONS.UNSUBSCRIBE);\n\n      if (args.userId === C.ACTIONS.UNSUBSCRIBE) {\n        this._subscribeEmitter.off(C.ACTIONS.SUBSCRIBE, args.callback);\n      } else {\n        this._subscribeEmitter.off(args.userId, args.callback);\n      }\n\n      if (!this._subscribeEmitter.hasListeners(args.userId)) {\n        if (args.userId === C.ACTIONS.UNSUBSCRIBE) {\n          this._sendGlobalSubscription(C.ACTIONS.UNSUBSCRIBE);\n        } else {\n          delete this._pendingSubscribes[args.userId];\n          this._pendingUnsubscribes[args.userId] = true;\n          if (!this._flushTimeout) {\n            this._flushTimeout = setTimeout(this._flush, 0);\n          }\n        }\n      }\n    }\n\n    /**\n     * Handles incoming messages from the server\n     *\n     * @param   {Object} message parsed deepstream message\n     *\n     * @package private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_$handle',\n    value: function _$handle(message) {\n      if (message.action === C.ACTIONS.ERROR && message.data[0] === C.EVENT.MESSAGE_DENIED) {\n        this._ackTimeoutRegistry.remove(C.TOPIC.PRESENCE, message.data[1]);\n        message.processedError = true;\n        this._client._$onError(C.TOPIC.PRESENCE, C.EVENT.MESSAGE_DENIED, message.data[1]);\n      } else if (message.action === C.ACTIONS.ACK) {\n        this._ackTimeoutRegistry.clear(message);\n      } else if (message.action === C.ACTIONS.PRESENCE_JOIN) {\n        this._subscribeEmitter.emit(C.ACTIONS.SUBSCRIBE, message.data[0], true);\n        this._subscribeEmitter.emit(message.data[0], true, message.data[0]);\n      } else if (message.action === C.ACTIONS.PRESENCE_LEAVE) {\n        this._subscribeEmitter.emit(C.ACTIONS.SUBSCRIBE, message.data[0], false);\n        this._subscribeEmitter.emit(message.data[0], false, message.data[0]);\n      } else if (message.action === C.ACTIONS.QUERY) {\n        try {\n          var data = JSON.parse(message.data[1]);\n          if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n            this._queryEmitter.emit(message.data[0], data);\n            return;\n          }\n        } catch (e) {\n          // not json, old event\n        }\n        this._queryEmitter.emit(C.ACTIONS.QUERY, message.data);\n      } else {\n        this._client._$onError(C.TOPIC.PRESENCE, C.EVENT.UNSOLICITED_MESSAGE, message.action);\n      }\n    }\n\n    /**\n     * Resubscribes to presence subscription when connection is lost\n     *\n     * @package private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_resubscribe',\n    value: function _resubscribe() {\n      var callbacks = Object.keys(this._subscribeEmitter._callbacks || {});\n      if (callbacks.indexOf(C.ACTIONS.SUBSCRIBE) > -1) {\n        callbacks.splice(callbacks.indexOf(C.ACTIONS.SUBSCRIBE), 1);\n        this._sendGlobalSubscription(C.ACTIONS.SUBSCRIBE);\n      }\n      if (callbacks.length > 0) {\n        this._sendSubscriptionBulk(C.ACTIONS.SUBSCRIBE, callbacks);\n      }\n    }\n  }, {\n    key: '_flush',\n    value: function _flush() {\n      var pendingSubscribes = Object.keys(this._pendingSubscribes);\n      if (pendingSubscribes.length > 0) {\n        this._sendSubscriptionBulk(C.ACTIONS.SUBSCRIBE, pendingSubscribes);\n        this._pendingSubscribes = {};\n      }\n      var pendingUnsubscribes = Object.keys(this._pendingUnsubscribes);\n      if (pendingUnsubscribes.length > 0) {\n        this._sendSubscriptionBulk(C.ACTIONS.UNSUBSCRIBE, pendingUnsubscribes);\n        this._pendingUnsubscribes = {};\n      }\n      this._flushTimeout = null;\n    }\n  }, {\n    key: '_sendSubscriptionBulk',\n    value: function _sendSubscriptionBulk(action, names) {\n      var correlationId = this._counter++;\n      this._ackTimeoutRegistry.add({\n        topic: C.TOPIC.PRESENCE,\n        action: action,\n        name: correlationId\n      });\n      this._connection.sendMsg(C.TOPIC.PRESENCE, action, [correlationId, names]);\n    }\n  }, {\n    key: '_sendGlobalSubscription',\n    value: function _sendGlobalSubscription(action) {\n      this._ackTimeoutRegistry.add({\n        topic: C.TOPIC.PRESENCE,\n        action: action,\n        name: action\n      });\n      this._connection.sendMsg(C.TOPIC.PRESENCE, action, [action]);\n    }\n  }]);\n\n  return PresenceHandler;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/presence/presence-handler.js\n// module id = BZdz\n// module chunks = 5 6","'use strict';\n/* eslint-disable prefer-rest-params, prefer-spread */\n\nvar Record = require('./record');\nvar EventEmitter = require('component-emitter2');\n\n/**\n * An AnonymousRecord is a record without a predefined name. It\n * acts like a wrapper around an actual record that can\n * be swapped out for another one whilst keeping all bindings intact.\n *\n * Imagine a customer relationship management system with a list of users\n * on the left and a user detail panel on the right. The user detail\n * panel could use the anonymous record to set up its bindings, yet whenever\n * a user is chosen from the list of existing users the anonymous record's\n * setName method is called and the detail panel will update to\n * show the selected user's details\n *\n * @param {RecordHandler} recordHandler\n *\n * @constructor\n */\nvar AnonymousRecord = function AnonymousRecord(recordHandler) {\n  this.name = null;\n  this._recordHandler = recordHandler;\n  this._record = null;\n  this._subscriptions = [];\n  this._proxyMethod('delete');\n  this._proxyMethod('set');\n  this._proxyMethod('discard');\n};\n\nEventEmitter(AnonymousRecord.prototype); // eslint-disable-line\n\n/**\n * Proxies the actual record's get method. It is valid\n * to call get prior to setName - if no record exists,\n * the method returns undefined\n *\n * @param   {[String]} path A json path. If non is provided,\n *                          the entire record is returned.\n *\n * @public\n * @returns {mixed}    the value of path or the entire object\n */\nAnonymousRecord.prototype.get = function (path) {\n  if (this._record === null) {\n    return undefined;\n  }\n\n  return this._record.get(path);\n};\n\n/**\n * Proxies the actual record's subscribe method. The same parameters\n * can be used. Can be called prior to setName(). Please note, triggerIfReady\n * will always be set to true to reflect changes in the underlying record.\n *\n * @param   {[String]} path   A json path. If non is provided,\n *                              it subscribes to changes for the entire record.\n *\n * @param   {Function} callback A callback function that will be invoked whenever\n *                              the subscribed path or record updates\n *\n * @public\n * @returns {void}\n */\nAnonymousRecord.prototype.subscribe = function () {\n  var parameters = Record.prototype._normalizeArguments(arguments);\n  parameters.triggerNow = true;\n  this._subscriptions.push(parameters);\n\n  if (this._record !== null) {\n    this._record.subscribe(parameters);\n  }\n};\n\n/**\n * Proxies the actual record's unsubscribe method. The same parameters\n * can be used. Can be called prior to setName()\n *\n * @param   {[String]} path   A json path. If non is provided,\n *                              it subscribes to changes for the entire record.\n *\n * @param   {Function} callback A callback function that will be invoked whenever\n *                              the subscribed path or record updates\n *\n * @public\n * @returns {void}\n */\nAnonymousRecord.prototype.unsubscribe = function () {\n  var parameters = Record.prototype._normalizeArguments(arguments);\n  var subscriptions = [];\n  var i = void 0;\n\n  for (i = 0; i < this._subscriptions.length; i++) {\n    if (this._subscriptions[i].path !== parameters.path || this._subscriptions[i].callback !== parameters.callback) {\n      subscriptions.push(this._subscriptions[i]);\n    }\n  }\n\n  this._subscriptions = subscriptions;\n\n  if (this._record !== null) {\n    this._record.unsubscribe(parameters);\n  }\n};\n\n/**\n * Sets the underlying record the anonymous record is bound\n * to. Can be called multiple times.\n *\n * @param {String} recordName\n *\n * @public\n * @returns {void}\n */\nAnonymousRecord.prototype.setName = function (recordName) {\n  if (this.name === recordName) {\n    return;\n  }\n\n  this.name = recordName;\n\n  var i = void 0;\n\n  if (this._record !== null && !this._record.isDestroyed) {\n    for (i = 0; i < this._subscriptions.length; i++) {\n      this._record.unsubscribe(this._subscriptions[i]);\n    }\n    this._record.discard();\n  }\n\n  this._record = this._recordHandler.getRecord(recordName);\n\n  for (i = 0; i < this._subscriptions.length; i++) {\n    this._record.subscribe(this._subscriptions[i]);\n  }\n\n  this._record.whenReady(this.emit.bind(this, 'ready'));\n  this.emit('nameChanged', recordName);\n};\n\n/**\n * Adds the specified method to this method and forwards it\n * to _callMethodOnRecord\n *\n * @param   {String} methodName\n *\n * @private\n * @returns {void}\n */\nAnonymousRecord.prototype._proxyMethod = function (methodName) {\n  this[methodName] = this._callMethodOnRecord.bind(this, methodName);\n};\n\n/**\n * Invokes the specified method with the provided parameters on\n * the underlying record. Throws erros if the method is not\n * specified yet or doesn't expose the method in question\n *\n * @param   {String} methodName\n *\n * @private\n * @returns {Mixed} the return value of the actual method\n */\nAnonymousRecord.prototype._callMethodOnRecord = function (methodName) {\n  if (this._record === null) {\n    throw new Error('Can`t invoke ' + methodName + '. AnonymousRecord not initialised. Call setName first');\n  }\n\n  if (typeof this._record[methodName] !== 'function') {\n    throw new Error(methodName + ' is not a method on the record');\n  }\n\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  return this._record[methodName].apply(this._record, args);\n};\n\nmodule.exports = AnonymousRecord;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/record/anonymous-record.js\n// module id = CO4H\n// module chunks = 5 6","'use strict';\n\nvar C = require('../constants/constants');\n\n/**\n * Makes sure that all functionality is resubscribed on reconnect. Subscription is called\n * when the connection drops - which seems counterintuitive, but in fact just means\n * that the re-subscription message will be added to the queue of messages that\n * need re-sending as soon as the connection is re-established.\n *\n * Resubscribe logic should only occur once per connection loss\n *\n * @param {Client} client          The deepstream client\n * @param {Function} reconnect     Function to call to allow resubscribing\n *\n * @constructor\n */\nvar ResubscribeNotifier = function ResubscribeNotifier(client, resubscribe) {\n  this._client = client;\n  this._resubscribe = resubscribe;\n\n  this._isReconnecting = false;\n  this._connectionStateChangeHandler = this._handleConnectionStateChanges.bind(this);\n  this._client.on('connectionStateChanged', this._connectionStateChangeHandler);\n};\n\n/**\n * Call this whenever this functionality is no longer needed to remove links\n *\n * @returns {void}\n */\nResubscribeNotifier.prototype.destroy = function () {\n  this._client.removeListener('connectionStateChanged', this._connectionStateChangeHandler);\n  this._connectionStateChangeHandler = null;\n  this._client = null;\n};\n\n/**\n* Check whenever the connection state changes if it is in reconnecting to resubscribe\n* @private\n* @returns {void}\n*/\nResubscribeNotifier.prototype._handleConnectionStateChanges = function () {\n  var state = this._client.getConnectionState();\n\n  if (state === C.CONNECTION_STATE.RECONNECTING && this._isReconnecting === false) {\n    this._isReconnecting = true;\n  }\n  if (state === C.CONNECTION_STATE.OPEN && this._isReconnecting === true) {\n    this._isReconnecting = false;\n    this._resubscribe();\n  }\n};\n\nmodule.exports = ResubscribeNotifier;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/utils/resubscribe-notifier.js\n// module id = M1+K\n// module chunks = 5 6","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar Record = require('./record');\nvar AnonymousRecord = require('./anonymous-record');\nvar List = require('./list');\nvar Listener = require('../utils/listener');\nvar SingleNotifier = require('../utils/single-notifier');\nvar C = require('../constants/constants');\nvar messageParser = require('../message/message-parser');\nvar messageBuilder = require('../message/message-builder');\nvar EventEmitter = require('component-emitter2');\n\n/**\n * A collection of factories for records. This class\n * is exposed as client.record\n *\n * @param {Object} options    deepstream options\n * @param {Connection} connection\n * @param {Client} client\n */\nvar RecordHandler = function RecordHandler(options, connection, client) {\n  this._options = options;\n  this._connection = connection;\n  this._client = client;\n  this._records = {};\n  this._lists = {};\n  this._listener = {};\n  this._writeCallbacks = {};\n  this._destroyEventEmitter = new EventEmitter();\n\n  this._hasRegistry = new SingleNotifier(client, connection, C.TOPIC.RECORD, C.ACTIONS.HAS, this._options.recordReadTimeout);\n  this._snapshotRegistry = new SingleNotifier(client, connection, C.TOPIC.RECORD, C.ACTIONS.SNAPSHOT, this._options.recordReadTimeout);\n};\n\n/**\n * Returns an existing record or creates a new one.\n *\n * @param   {String} name              the unique name of the record\n * @param   {[Object]} recordOptions   A map of parameters for this particular record.\n *                                      { persist: true }\n *\n * @public\n * @returns {Record}\n */\nRecordHandler.prototype.getRecord = function (name, recordOptions) {\n  if (!this._records[name]) {\n    this._records[name] = new Record(name, recordOptions || {}, this._connection, this._options, this._client);\n    this._records[name].on('error', this._onRecordError.bind(this, name));\n    this._records[name].on('destroyPending', this._onDestroyPending.bind(this, name));\n    this._records[name].on('delete', this._removeRecord.bind(this, name));\n    this._records[name].on('discard', this._removeRecord.bind(this, name));\n  }\n\n  this._records[name].usages++;\n\n  return this._records[name];\n};\n\n/**\n * Returns an existing List or creates a new one. A list is a specialised\n * type of record that holds an array of recordNames.\n *\n * @param   {String} name       the unique name of the list\n * @param   {[Object]} options   A map of parameters for this particular list.\n *                              { persist: true }\n *\n * @public\n * @returns {List}\n */\nRecordHandler.prototype.getList = function (name, options) {\n  if (!this._lists[name]) {\n    this._lists[name] = new List(this, name, options);\n  } else {\n    this._records[name].usages++;\n  }\n  return this._lists[name];\n};\n\n/**\n * Returns an anonymous record. A anonymous record is effectively\n * a wrapper that mimicks the API of a record, but allows for the\n * underlying record to be swapped without loosing subscriptions etc.\n *\n * This is particularly useful when selecting from a number of similarly\n * structured records. E.g. a list of users that can be choosen from a list\n *\n * The only API difference to a normal record is an additional setName( name ) method.\n *\n *\n * @public\n * @returns {AnonymousRecord}\n */\nRecordHandler.prototype.getAnonymousRecord = function () {\n  return new AnonymousRecord(this);\n};\n\n/**\n * Allows to listen for record subscriptions made by this or other clients. This\n * is useful to create \"active\" data providers, e.g. providers that only provide\n * data for a particular record if a user is actually interested in it\n *\n * @param   {String}   pattern  A combination of alpha numeric characters and wildcards( * )\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nRecordHandler.prototype.listen = function (pattern, callback) {\n  if (typeof pattern !== 'string' || pattern.length === 0) {\n    throw new Error('invalid argument pattern');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  if (this._listener[pattern] && !this._listener[pattern].destroyPending) {\n    this._client._$onError(C.TOPIC.RECORD, C.EVENT.LISTENER_EXISTS, pattern);\n    return;\n  }\n\n  if (this._listener[pattern]) {\n    this._listener[pattern].destroy();\n  }\n\n  this._listener[pattern] = new Listener(C.TOPIC.RECORD, pattern, callback, this._options, this._client, this._connection);\n};\n\n/**\n * Removes a listener that was previously registered with listenForSubscriptions\n *\n * @param   {String}   pattern  A combination of alpha numeric characters and wildcards( * )\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nRecordHandler.prototype.unlisten = function (pattern) {\n  if (typeof pattern !== 'string' || pattern.length === 0) {\n    throw new Error('invalid argument pattern');\n  }\n\n  var listener = this._listener[pattern];\n  if (listener && !listener.destroyPending) {\n    listener.sendDestroy();\n  } else if (this._listener[pattern]) {\n    this._listener[pattern].destroy();\n    delete this._listener[pattern];\n  } else {\n    this._client._$onError(C.TOPIC.RECORD, C.EVENT.NOT_LISTENING, pattern);\n  }\n};\n\n/**\n * Retrieve the current record data without subscribing to changes\n *\n * @param   {String}  name the unique name of the record\n * @param   {Function}  callback\n *\n * @public\n */\nRecordHandler.prototype.snapshot = function (name, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument: name');\n  }\n\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument: callback');\n  }\n\n  if (this._records[name] && this._records[name].isReady) {\n    callback(null, this._records[name].get());\n  } else {\n    this._snapshotRegistry.request(name, callback);\n  }\n};\n\n/**\n * Allows the user to query to see whether or not the record exists.\n *\n * @param   {String}  name the unique name of the record\n * @param   {Function}  callback\n *\n * @public\n */\nRecordHandler.prototype.has = function (name, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument: name');\n  }\n\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument: callback');\n  }\n\n  if (this._records[name]) {\n    callback(null, true);\n  } else {\n    this._hasRegistry.request(name, callback);\n  }\n};\n\n/**\n * Allows setting the data for a record without being subscribed to it. If\n * the client is subscribed to the record locally, the update will be proxied\n * through the record object like a normal call to Record.set. Otherwise a force\n * write will be performed that overwrites any remote data.\n *\n * @param {String} recordName the name of the record to write to\n * @param {String|Object} pathOrData either the path to write data to or the data to\n *                                   set the record to\n * @param {Object|Primitive|Function} dataOrCallback either the data to write to the\n *                                                   record or a callback function\n *                                                   indicating write success\n * @param {Function} callback if provided this will be called with the result of the\n *                            write\n */\nRecordHandler.prototype.setData = function (recordName, pathOrData, dataOrCallback, callback) {\n  var path = void 0;\n  var data = void 0;\n  var cb = void 0;\n\n  if (arguments.length === 4) {\n    // setData(recordName, path, data, cb)\n    path = pathOrData;\n    data = dataOrCallback;\n    cb = callback;\n  } else if (arguments.length === 3) {\n    if (typeof dataOrCallback !== 'function') {\n      // setData(recordName, path, data)\n      path = pathOrData;\n      data = dataOrCallback;\n    } else {\n      // setData(recordName, data, callback)\n      path = null;\n      data = pathOrData;\n      cb = dataOrCallback;\n    }\n  } else if (arguments.length === 2) {\n    // setData(recordName, data)\n    data = pathOrData;\n  }\n\n  if (typeof recordName !== 'string' || recordName.length === 0) {\n    throw new Error('invalid argument: recordName');\n  }\n\n  if (callback && typeof callback !== 'function') {\n    throw new Error('invalid argument: callback');\n  }\n\n  if (path && (typeof path !== 'string' || path.length === 0)) {\n    throw new Error('invalid argument: path');\n  }\n\n  if (!path && (data === null || (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object')) {\n    throw new Error('invalid argument: data must be an object when no path is provided');\n  }\n\n  var record = this._records[recordName];\n  if (record) {\n    if (path && cb) {\n      record.set(path, data, cb);\n    } else if (path) {\n      record.set(path, data);\n    } else if (cb) {\n      record.set(data, cb);\n    } else {\n      record.set(data);\n    }\n  } else {\n    var recordData = path ? [recordName, -1, path, messageBuilder.typed(data)] : [recordName, -1, data];\n    var config = {};\n    if (cb) {\n      config.writeSuccess = true;\n      this._writeCallbacks[recordName] = {};\n      this._writeCallbacks[recordName][-1] = cb;\n    }\n    recordData.push(config);\n    this._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.CREATEANDUPDATE, recordData);\n  }\n};\n\n/**\n * Will be called by the client for incoming messages on the RECORD topic\n *\n * @param   {Object} message parsed and validated deepstream message\n *\n * @package private\n * @returns {void}\n */\nRecordHandler.prototype._$handle = function (message) {\n  var name = void 0;\n\n  if (message.action === C.ACTIONS.ERROR && message.data[0] !== C.EVENT.VERSION_EXISTS && message.data[0] !== C.ACTIONS.SNAPSHOT && message.data[0] !== C.ACTIONS.HAS && message.data[0] !== C.EVENT.MESSAGE_DENIED) {\n    message.processedError = true;\n    this._client._$onError(C.TOPIC.RECORD, message.data[0], message.data[1]);\n    return;\n  }\n\n  if (message.action === C.ACTIONS.ACK || message.action === C.ACTIONS.ERROR) {\n    name = message.data[1];\n\n    /*\n     * The following prevents errors that occur when a record is discarded or deleted and\n     * recreated before the discard / delete ack message is received.\n     *\n     * A (presumably unsolvable) problem remains when a client deletes a record in the exact moment\n     * between another clients creation and read message for the same record\n     */\n    if (message.data[0] === C.ACTIONS.DELETE || message.data[0] === C.ACTIONS.UNSUBSCRIBE || message.data[0] === C.EVENT.MESSAGE_DENIED && message.data[2] === C.ACTIONS.DELETE) {\n      this._destroyEventEmitter.emit('destroy_ack_' + name, message);\n\n      if (message.data[0] === C.ACTIONS.DELETE && this._records[name]) {\n        this._records[name]._$onMessage(message);\n      }\n\n      return;\n    }\n\n    if (message.data[0] === C.ACTIONS.SNAPSHOT) {\n      message.processedError = true;\n      this._snapshotRegistry.recieve(name, message.data[2]);\n      return;\n    }\n\n    if (message.data[0] === C.ACTIONS.HAS) {\n      message.processedError = true;\n      this._snapshotRegistry.recieve(name, message.data[2]);\n      return;\n    }\n  } else {\n    name = message.data[0];\n  }\n\n  var processed = false;\n\n  var record = this._records[name];\n  if (record) {\n    processed = true;\n    record._$onMessage(message);\n  }\n\n  if (message.action === C.ACTIONS.READ && this._snapshotRegistry.hasRequest(name)) {\n    processed = true;\n    this._snapshotRegistry.recieve(name, null, JSON.parse(message.data[2]));\n  } else if (message.action === C.ACTIONS.HAS && this._hasRegistry.hasRequest(name)) {\n    processed = true;\n    this._hasRegistry.recieve(name, null, messageParser.convertTyped(message.data[1]));\n  } else if (message.action === C.ACTIONS.WRITE_ACKNOWLEDGEMENT && !record) {\n    processed = true;\n    Record._handleWriteAcknowledgements(message, this._writeCallbacks[name], this._client);\n  } else if (message.action === C.ACTIONS.ACK && message.data[0] === C.ACTIONS.UNLISTEN && this._listener[name] && this._listener[name].destroyPending) {\n    processed = true;\n    this._listener[name].destroy();\n    delete this._listener[name];\n  } else if (this._listener[name]) {\n    processed = true;\n    this._listener[name]._$onMessage(message);\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_FOR_PATTERN_REMOVED) {\n    // An unlisten ACK was received before an PATTERN_REMOVED which is a valid case\n    processed = true;\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_HAS_PROVIDER) {\n    // record can receive a HAS_PROVIDER after discarding the record\n    processed = true;\n  }\n\n  if (!processed) {\n    message.processedError = true;\n    this._client._$onError(C.TOPIC.RECORD, C.EVENT.UNSOLICITED_MESSAGE, name);\n  }\n};\n\n/**\n * Callback for 'error' events from the record.\n *\n * @param   {String} recordName\n * @param   {String} error\n *\n * @private\n * @returns {void}\n */\nRecordHandler.prototype._onRecordError = function (recordName, error) {\n  this._client._$onError(C.TOPIC.RECORD, error, recordName);\n};\n\n/**\n * When the client calls discard or delete on a record, there is a short delay\n * before the corresponding ACK message is received from the server. To avoid\n * race conditions if the record is re-requested straight away the old record is\n * removed from the cache straight awy and will only listen for one last ACK message\n *\n * @param   {String} recordName The name of the record that was just deleted / discarded\n *\n * @private\n * @returns {void}\n */\nRecordHandler.prototype._onDestroyPending = function (recordName) {\n  if (!this._records[recordName]) {\n    this._client._$onError(C.TOPIC.RECORD, 'Record attempted to be destroyed but does not exists', recordName);\n    return;\n  }\n  var onMessage = this._records[recordName]._$onMessage.bind(this._records[recordName]);\n  this._destroyEventEmitter.once('destroy_ack_' + recordName, onMessage);\n  this._removeRecord(recordName);\n};\n\n/**\n * Callback for 'deleted' and 'discard' events from a record. Removes the record from\n * the registry\n *\n * @param   {String} recordName\n *\n * @returns {void}\n */\nRecordHandler.prototype._removeRecord = function (recordName) {\n  delete this._records[recordName];\n  delete this._lists[recordName];\n};\n\nmodule.exports = RecordHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/record/record-handler.js\n// module id = MOWW\n// module chunks = 5 6","\n/**\n * Expose `Emitter`.\n */\n\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || Object.create(null);\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || Object.create(null);\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = Object.create(null);\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks[event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || Object.create(null);\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks[event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || Object.create(null);\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n/**\n * Returns an array listing the events for which the emitter has registered listeners.\n *\n * @return {Array}\n * @api public\n */\nEmitter.prototype.eventNames = function(){\n  return this._callbacks ? Object.keys(this._callbacks) : [];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.1.3.5@component-emitter2/index.js\n// module id = PflM\n// module chunks = 5 6","'use strict';\n\nvar C = require('../constants/constants');\n\n/**\n * Parses ASCII control character seperated\n * message strings into digestable maps\n *\n * @constructor\n */\nvar MessageParser = function MessageParser() {\n  this._actions = this._getActions();\n};\n\n/**\n * Main interface method. Receives a raw message\n * string, containing one or more messages\n * and returns an array of parsed message objects\n * or null for invalid messages\n *\n * @param   {String} message raw message\n *\n * @public\n *\n * @returns {Array} array of parsed message objects\n *                  following the format\n *                  {\n *                    raw: <original message string>\n *                    topic: <string>\n *                    action: <string - shortcode>\n *                    data: <array of strings>\n *                  }\n */\nMessageParser.prototype.parse = function (message, client) {\n  var parsedMessages = [];\n  var rawMessages = message.split(C.MESSAGE_SEPERATOR);\n\n  for (var i = 0; i < rawMessages.length; i++) {\n    if (rawMessages[i].length > 2) {\n      parsedMessages.push(this._parseMessage(rawMessages[i], client));\n    }\n  }\n\n  return parsedMessages;\n};\n\n/**\n * Deserializes values created by MessageBuilder.typed to\n * their original format\n *\n * @param {String} value\n *\n * @public\n * @returns {Mixed} original value\n */\nMessageParser.prototype.convertTyped = function (value, client) {\n  var type = value.charAt(0);\n\n  if (type === C.TYPES.STRING) {\n    return value.substr(1);\n  }\n\n  if (type === C.TYPES.OBJECT) {\n    try {\n      return JSON.parse(value.substr(1));\n    } catch (e) {\n      client._$onError(C.TOPIC.ERROR, C.EVENT.MESSAGE_PARSE_ERROR, e.toString() + '(' + value + ')');\n      return undefined;\n    }\n  }\n\n  if (type === C.TYPES.NUMBER) {\n    return parseFloat(value.substr(1));\n  }\n\n  if (type === C.TYPES.NULL) {\n    return null;\n  }\n\n  if (type === C.TYPES.TRUE) {\n    return true;\n  }\n\n  if (type === C.TYPES.FALSE) {\n    return false;\n  }\n\n  if (type === C.TYPES.UNDEFINED) {\n    return undefined;\n  }\n\n  client._$onError(C.TOPIC.ERROR, C.EVENT.MESSAGE_PARSE_ERROR, 'UNKNOWN_TYPE (' + value + ')');\n  return undefined;\n};\n\n/**\n * Turns the ACTION:SHORTCODE constants map\n * around to facilitate shortcode lookup\n *\n * @private\n *\n * @returns {Object} actions\n */\nMessageParser.prototype._getActions = function () {\n  var actions = {};\n\n  for (var key in C.ACTIONS) {\n    actions[C.ACTIONS[key]] = key;\n  }\n\n  return actions;\n};\n\n/**\n * Parses an individual message (as oppnosed to a\n * block of multiple messages as is processed by .parse())\n *\n * @param   {String} message\n *\n * @private\n *\n * @returns {Object} parsedMessage\n */\nMessageParser.prototype._parseMessage = function (message, client) {\n  var parts = message.split(C.MESSAGE_PART_SEPERATOR);\n  var messageObject = {};\n\n  if (parts.length < 2) {\n    client._$onError(C.TOPIC.ERROR, C.EVENT.MESSAGE_PARSE_ERROR, 'Insufficiant message parts');\n    return null;\n  }\n\n  if (this._actions[parts[1]] === undefined) {\n    client._$onError(C.TOPIC.ERROR, C.EVENT.MESSAGE_PARSE_ERROR, 'Unknown action ' + parts[1]);\n    return null;\n  }\n\n  messageObject.raw = message;\n  messageObject.topic = parts[0];\n  messageObject.action = parts[1];\n  messageObject.data = parts.splice(2);\n\n  return messageObject;\n};\n\nmodule.exports = new MessageParser();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/message/message-parser.js\n// module id = Rx04\n// module chunks = 5 6","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar utils = require('../utils/utils');\n\nvar PARTS_REG_EXP = /([^.[\\]\\s]+)/g;\nvar cache = Object.create(null);\n\n/**\n * Returns the value of the path or\n * undefined if the path can't be resolved\n *\n * @public\n * @returns {Mixed}\n */\nmodule.exports.get = function (data, path, deepCopy) {\n  var tokens = tokenize(path);\n  var value = data;\n  for (var i = 0; i < tokens.length; i++) {\n    if (value === undefined) {\n      return undefined;\n    }\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      throw new Error('invalid data or path');\n    }\n    value = value[tokens[i]];\n  }\n\n  return deepCopy !== false ? utils.deepCopy(value) : value;\n};\n\n/**\n * Sets the value of the path. If the path (or parts\n * of it) doesn't exist yet, it will be created\n *\n * @param {Mixed} value\n *\n * @public\n * @returns {Mixed} updated value\n */\nmodule.exports.set = function (data, path, value, deepCopy) {\n  var tokens = tokenize(path);\n\n  if (tokens.length === 0) {\n    return patch(data, value, deepCopy);\n  }\n\n  var oldValue = module.exports.get(data, path, false);\n  var newValue = patch(oldValue, value, deepCopy);\n\n  if (newValue === oldValue) {\n    return data;\n  }\n\n  var result = utils.shallowCopy(data);\n\n  var node = result;\n  for (var i = 0; i < tokens.length; i++) {\n    if (i === tokens.length - 1) {\n      node[tokens[i]] = newValue;\n    } else if (node[tokens[i]] !== undefined) {\n      node = node[tokens[i]] = utils.shallowCopy(node[tokens[i]]);\n    } else if (tokens[i + 1] && !isNaN(tokens[i + 1])) {\n      node = node[tokens[i]] = [];\n    } else {\n      node = node[tokens[i]] = Object.create(null);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Merge the new value into the old value\n * @param  {Mixed} oldValue\n * @param  {Mixed} newValue\n * @param  {boolean} deepCopy\n * @return {Mixed}\n */\nfunction patch(oldValue, newValue, deepCopy) {\n  var i = void 0;\n  var j = void 0;\n  if (oldValue === null || newValue === null) {\n    return newValue;\n  } else if (Array.isArray(oldValue) && Array.isArray(newValue)) {\n    var arr = void 0;\n    for (i = 0; i < newValue.length; i++) {\n      var value = patch(oldValue[i], newValue[i], false);\n      if (!arr) {\n        if (value === oldValue[i]) {\n          continue;\n        }\n        arr = [];\n        for (j = 0; j < i; ++j) {\n          arr[j] = oldValue[j];\n        }\n      }\n      arr[i] = value;\n    }\n    arr = arr && deepCopy !== false ? utils.deepCopy(arr) : arr;\n    arr = arr || (oldValue.length === newValue.length ? oldValue : newValue);\n    return arr;\n  } else if (!Array.isArray(newValue) && (typeof oldValue === 'undefined' ? 'undefined' : _typeof(oldValue)) === 'object' && (typeof newValue === 'undefined' ? 'undefined' : _typeof(newValue)) === 'object') {\n    var obj = void 0;\n    var props = Object.keys(newValue);\n    for (i = 0; i < props.length; i++) {\n      var _value = patch(oldValue[props[i]], newValue[props[i]], false);\n      if (!obj) {\n        if (_value === oldValue[props[i]]) {\n          continue;\n        }\n        obj = Object.create(null);\n        for (j = 0; j < i; ++j) {\n          obj[props[j]] = oldValue[props[j]];\n        }\n      }\n      obj[props[i]] = newValue[props[i]];\n    }\n    obj = obj && deepCopy !== false ? utils.deepCopy(obj) : obj;\n    obj = obj || (Object.keys(oldValue).length === props.length ? oldValue : newValue);\n    return obj;\n  } else if (newValue !== oldValue) {\n    return deepCopy !== false ? utils.deepCopy(newValue) : newValue;\n  }\n\n  return oldValue;\n}\n\n/**\n * Parses the path. Splits it into\n * keys for objects and indices for arrays.\n *\n * @returns Array of tokens\n */\nfunction tokenize(path) {\n  if (cache[path]) {\n    return cache[path];\n  }\n\n  var parts = String(path) !== 'undefined' ? String(path).match(PARTS_REG_EXP) : [];\n\n  if (!parts) {\n    throw new Error('invalid path ' + path);\n  }\n\n  cache[path] = parts;\n  return cache[path];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/record/json-path.js\n// module id = TS2d\n// module chunks = 5 6","'use strict';\n\nvar messageBuilder = require('../message/message-builder');\nvar messageParser = require('../message/message-parser');\nvar ResubscribeNotifier = require('../utils/resubscribe-notifier');\nvar C = require('../constants/constants');\nvar Listener = require('../utils/listener');\nvar EventEmitter = require('component-emitter2');\n\n/**\n * This class handles incoming and outgoing messages in relation\n * to deepstream events. It basically acts like an event-hub that's\n * replicated across all connected clients.\n *\n * @param {Object} options    deepstream options\n * @param {Connection} connection\n * @param {Client} client\n * @public\n * @constructor\n */\nvar EventHandler = function EventHandler(options, connection, client) {\n  this._options = options;\n  this._connection = connection;\n  this._client = client;\n  this._emitter = new EventEmitter();\n  this._listener = {};\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._resubscribeNotifier = new ResubscribeNotifier(this._client, this._resubscribe.bind(this));\n};\n\n/**\n * Subscribe to an event. This will receive both locally emitted events\n * as well as events emitted by other connected clients.\n *\n * @param   {String}   name\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nEventHandler.prototype.subscribe = function (name, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  if (!this._emitter.hasListeners(name)) {\n    this._ackTimeoutRegistry.add({\n      topic: C.TOPIC.EVENT,\n      action: C.ACTIONS.SUBSCRIBE,\n      name: name\n    });\n    this._connection.sendMsg(C.TOPIC.EVENT, C.ACTIONS.SUBSCRIBE, [name]);\n  }\n\n  this._emitter.on(name, callback);\n};\n\n/**\n * Removes a callback for a specified event. If all callbacks\n * for an event have been removed, the server will be notified\n * that the client is unsubscribed as a listener\n *\n * @param   {String}   name\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nEventHandler.prototype.unsubscribe = function (name, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n  this._emitter.off(name, callback);\n\n  if (!this._emitter.hasListeners(name)) {\n    this._ackTimeoutRegistry.add({\n      topic: C.TOPIC.EVENT,\n      action: C.ACTIONS.UNSUBSCRIBE,\n      name: name\n    });\n    this._connection.sendMsg(C.TOPIC.EVENT, C.ACTIONS.UNSUBSCRIBE, [name]);\n  }\n};\n\n/**\n * Emits an event locally and sends a message to the server to\n * broadcast the event to the other connected clients\n *\n * @param   {String} name\n * @param   {Mixed} data will be serialized and deserialized to its original type.\n *\n * @public\n * @returns {void}\n */\nEventHandler.prototype.emit = function (name, data) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n\n  this._connection.sendMsg(C.TOPIC.EVENT, C.ACTIONS.EVENT, [name, messageBuilder.typed(data)]);\n  this._emitter.emit(name, data);\n};\n\n/**\n * Allows to listen for event subscriptions made by this or other clients. This\n * is useful to create \"active\" data providers, e.g. providers that only provide\n * data for a particular event if a user is actually interested in it\n *\n * @param   {String}   pattern  A combination of alpha numeric characters and wildcards( * )\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nEventHandler.prototype.listen = function (pattern, callback) {\n  if (typeof pattern !== 'string' || pattern.length === 0) {\n    throw new Error('invalid argument pattern');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  if (this._listener[pattern] && !this._listener[pattern].destroyPending) {\n    this._client._$onError(C.TOPIC.EVENT, C.EVENT.LISTENER_EXISTS, pattern);\n    return;\n  } else if (this._listener[pattern]) {\n    this._listener[pattern].destroy();\n  }\n\n  this._listener[pattern] = new Listener(C.TOPIC.EVENT, pattern, callback, this._options, this._client, this._connection);\n};\n\n/**\n * Removes a listener that was previously registered with listenForSubscriptions\n *\n * @param   {String}   pattern  A combination of alpha numeric characters and wildcards( * )\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nEventHandler.prototype.unlisten = function (pattern) {\n  if (typeof pattern !== 'string' || pattern.length === 0) {\n    throw new Error('invalid argument pattern');\n  }\n\n  var listener = this._listener[pattern];\n\n  if (listener && !listener.destroyPending) {\n    listener.sendDestroy();\n  } else if (this._listener[pattern]) {\n    this._ackTimeoutRegistry.add({\n      topic: C.TOPIC.EVENT,\n      action: C.EVENT.UNLISTEN,\n      name: pattern\n    });\n    this._listener[pattern].destroy();\n    delete this._listener[pattern];\n  } else {\n    this._client._$onError(C.TOPIC.RECORD, C.EVENT.NOT_LISTENING, pattern);\n  }\n};\n\n/**\n * Handles incoming messages from the server\n *\n * @param   {Object} message parsed deepstream message\n *\n * @package private\n * @returns {void}\n */\nEventHandler.prototype._$handle = function (message) {\n  var name = message.data[message.action === C.ACTIONS.ACK ? 1 : 0];\n\n  if (message.action === C.ACTIONS.EVENT) {\n    if (message.data && message.data.length === 2) {\n      this._emitter.emit(name, messageParser.convertTyped(message.data[1], this._client));\n    } else {\n      this._emitter.emit(name);\n    }\n    return;\n  }\n\n  if (message.action === C.ACTIONS.ACK && message.data[0] === C.ACTIONS.UNLISTEN && this._listener[name] && this._listener[name].destroyPending) {\n    this._listener[name].destroy();\n    delete this._listener[name];\n    return;\n  } else if (this._listener[name]) {\n    this._listener[name]._$onMessage(message);\n    return;\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_FOR_PATTERN_REMOVED) {\n    // An unlisten ACK was received before an PATTERN_REMOVED which is a valid case\n    return;\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_HAS_PROVIDER) {\n    // record can receive a HAS_PROVIDER after discarding the record\n    return;\n  }\n\n  if (message.action === C.ACTIONS.ACK) {\n    this._ackTimeoutRegistry.clear(message);\n    return;\n  }\n\n  if (message.action === C.ACTIONS.ERROR) {\n    if (message.data[0] === C.EVENT.MESSAGE_DENIED) {\n      this._ackTimeoutRegistry.remove({\n        topic: C.TOPIC.EVENT,\n        name: message.data[1],\n        action: message.data[2]\n      });\n    } else if (message.data[0] === C.EVENT.NOT_SUBSCRIBED) {\n      this._ackTimeoutRegistry.remove({\n        topic: C.TOPIC.EVENT,\n        name: message.data[1],\n        action: C.ACTIONS.UNSUBSCRIBE\n      });\n    }\n    message.processedError = true;\n    this._client._$onError(C.TOPIC.EVENT, message.data[0], message.data[1]);\n    return;\n  }\n\n  this._client._$onError(C.TOPIC.EVENT, C.EVENT.UNSOLICITED_MESSAGE, name);\n};\n\n/**\n * Resubscribes to events when connection is lost\n *\n * @package private\n * @returns {void}\n */\nEventHandler.prototype._resubscribe = function () {\n  var callbacks = this._emitter._callbacks;\n  for (var eventName in callbacks) {\n    this._connection.sendMsg(C.TOPIC.EVENT, C.ACTIONS.SUBSCRIBE, [eventName]);\n  }\n};\n\nmodule.exports = EventHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/event/event-handler.js\n// module id = XjMO\n// module chunks = 5 6","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.0.2.1@querystring-es3/index.js\n// module id = YDOS\n// module chunks = 5 6","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.1.4.1@punycode/punycode.js\n// module id = ZL5E\n// module chunks = 5 6","module.exports = __webpack_public_path__ + \"static/img/login_bg.c2a5720.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/login_bg.jpg\n// module id = aCT7\n// module chunks = 5 8","'use strict';\n\nvar C = require('../constants/constants');\nvar ResubscribeNotifier = require('../utils/resubscribe-notifier');\nvar RpcResponse = require('./rpc-response');\nvar Rpc = require('./rpc');\nvar messageParser = require('../message/message-parser');\nvar messageBuilder = require('../message/message-builder');\n\n/**\n * The main class for remote procedure calls\n *\n * Provides the rpc interface and handles incoming messages\n * on the rpc topic\n *\n * @param {Object} options deepstream configuration options\n * @param {Connection} connection\n * @param {Client} client\n *\n * @constructor\n * @public\n */\nvar RpcHandler = function RpcHandler(options, connection, client) {\n  this._options = options;\n  this._connection = connection;\n  this._client = client;\n  this._rpcs = {};\n  this._providers = {};\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._resubscribeNotifier = new ResubscribeNotifier(this._client, this._reprovide.bind(this));\n};\n\n/**\n * Registers a callback function as a RPC provider. If another connected client calls\n * client.rpc.make() the request will be routed to this method\n *\n * The callback will be invoked with two arguments:\n *     {Mixed} data The data passed to the client.rpc.make function\n *     {RpcResponse} rpcResponse An object with methods to response,\n *                               acknowledge or reject the request\n *\n * Only one callback can be registered for a RPC at a time\n *\n * Please note: Deepstream tries to deliver data in its original format.\n * Data passed to client.rpc.make as a String will arrive as a String,\n * numbers or implicitly JSON serialized objects will arrive in their\n * respective format as well\n *\n * @public\n * @returns void\n */\nRpcHandler.prototype.provide = function (name, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n  if (this._providers[name]) {\n    throw new Error('RPC ' + name + ' already registered');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  this._ackTimeoutRegistry.add({\n    topic: C.TOPIC.RPC,\n    name: name,\n    action: C.ACTIONS.SUBSCRIBE\n  });\n  this._providers[name] = callback;\n  this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.SUBSCRIBE, [name]);\n};\n\n/**\n * Unregisters this client as a provider for a remote procedure call\n *\n * @param   {String} name the name of the rpc\n *\n * @public\n * @returns {void}\n */\nRpcHandler.prototype.unprovide = function (name) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n\n  if (this._providers[name]) {\n    delete this._providers[name];\n    this._ackTimeoutRegistry.add({\n      topic: C.TOPIC.RPC,\n      name: name,\n      action: C.ACTIONS.UNSUBSCRIBE\n    });\n    this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.UNSUBSCRIBE, [name]);\n  }\n};\n\n/**\n * Executes the actual remote procedure call\n *\n * @param   {String}   name     The name of the rpc\n * @param   {Mixed}    data     Serializable data that will be passed to the provider\n * @param   {Function} callback Will be invoked with the returned result or if the rpc failed\n *                              receives to arguments: error or null and the result\n *\n * @public\n * @returns {void}\n */\nRpcHandler.prototype.make = function (name, data, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  var uid = this._client.getUid();\n  var typedData = messageBuilder.typed(data);\n\n  this._rpcs[uid] = new Rpc(name, callback, this._options, this._client);\n  this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.REQUEST, [name, uid, typedData]);\n};\n\n/**\n * Retrieves a RPC instance for a correlationId or throws an error\n * if it can't be found (which should never happen)\n *\n * @param {String} correlationId\n * @param {String} rpcName\n *\n * @private\n * @returns {Rpc}\n */\nRpcHandler.prototype._getRpc = function (correlationId, rpcName, rawMessage) {\n  var rpc = this._rpcs[correlationId];\n\n  if (!rpc) {\n    this._client._$onError(C.TOPIC.RPC, C.EVENT.UNSOLICITED_MESSAGE, rawMessage);\n    return null;\n  }\n\n  return rpc;\n};\n\n/**\n * Handles incoming rpc REQUEST messages. Instantiates a new response object\n * and invokes the provider callback or rejects the request if no rpc provider\n * is present (which shouldn't really happen, but might be the result of a race condition\n * if this client sends a unprovide message whilst an incoming request is already in flight)\n *\n * @param   {Object} message The parsed deepstream RPC request message.\n *\n * @private\n * @returns {void}\n */\nRpcHandler.prototype._respondToRpc = function (message) {\n  var name = message.data[0];\n  var correlationId = message.data[1];\n  var data = null;\n  var response = void 0;\n\n  if (message.data[2]) {\n    data = messageParser.convertTyped(message.data[2], this._client);\n  }\n\n  if (this._providers[name]) {\n    response = new RpcResponse(this._connection, name, correlationId);\n    this._providers[name](data, response);\n  } else {\n    this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.REJECTION, [name, correlationId]);\n  }\n};\n\n/**\n * Distributes incoming messages from the server\n * based on their action\n *\n * @param   {Object} message A parsed deepstream message\n *\n * @private\n * @returns {void}\n */\nRpcHandler.prototype._$handle = function (message) {\n  var rpcName = void 0;\n  var correlationId = void 0;\n\n  // RPC Requests\n  if (message.action === C.ACTIONS.REQUEST) {\n    this._respondToRpc(message);\n    return;\n  }\n\n  // RPC subscription Acks\n  if (message.action === C.ACTIONS.ACK && (message.data[0] === C.ACTIONS.SUBSCRIBE || message.data[0] === C.ACTIONS.UNSUBSCRIBE)) {\n    this._ackTimeoutRegistry.clear(message);\n    return;\n  }\n\n  // handle auth/denied subscription errors\n  if (message.action === C.ACTIONS.ERROR) {\n    if (message.data[0] === C.EVENT.MESSAGE_PERMISSION_ERROR) {\n      return;\n    }\n    if (message.data[0] === C.EVENT.MESSAGE_DENIED && message.data[2] === C.ACTIONS.SUBSCRIBE) {\n      this._ackTimeoutRegistry.remove({\n        topic: C.TOPIC.RPC,\n        action: C.ACTIONS.SUBSCRIBE,\n        name: message.data[1]\n      });\n      return;\n    }\n  }\n\n  /*\n   * Error messages always have the error as first parameter. So the\n   * order is different to ack and response messages\n   */\n  if (message.action === C.ACTIONS.ERROR || message.action === C.ACTIONS.ACK) {\n    if (message.data[0] === C.EVENT.MESSAGE_DENIED && message.data[2] === C.ACTIONS.REQUEST) {\n      correlationId = message.data[3];\n    } else {\n      correlationId = message.data[2];\n    }\n    rpcName = message.data[1];\n  } else {\n    rpcName = message.data[0];\n    correlationId = message.data[1];\n  }\n\n  /*\n  * Retrieve the rpc object\n  */\n  var rpc = this._getRpc(correlationId, rpcName, message.raw);\n  if (rpc === null) {\n    return;\n  }\n\n  // RPC Responses\n  if (message.action === C.ACTIONS.ACK) {\n    rpc.ack();\n  } else if (message.action === C.ACTIONS.RESPONSE) {\n    rpc.respond(message.data[2]);\n    delete this._rpcs[correlationId];\n  } else if (message.action === C.ACTIONS.ERROR) {\n    message.processedError = true;\n    rpc.error(message.data[0]);\n    delete this._rpcs[correlationId];\n  }\n};\n\n/**\n * Reregister providers to events when connection is lost\n *\n * @package private\n * @returns {void}\n */\nRpcHandler.prototype._reprovide = function () {\n  for (var rpcName in this._providers) {\n    this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.SUBSCRIBE, [rpcName]);\n  }\n};\n\nmodule.exports = RpcHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/rpc/rpc-handler.js\n// module id = avxU\n// module chunks = 5 6","'use strict';\n\nvar C = require('../constants/constants');\nvar messageParser = require('../message/message-parser');\n\n/**\n * This class represents a single remote procedure\n * call made from the client to the server. It's main function\n * is to encapsulate the logic around timeouts and to convert the\n * incoming response data\n *\n * @param {Object}   options           deepstream client config\n * @param {Function} callback          the function that will be called once the request\n *                                     is complete or failed\n * @param {Client} client\n *\n * @constructor\n */\nvar Rpc = function Rpc(name, callback, options, client) {\n  this._options = options;\n  this._callback = callback;\n  this._client = client;\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._ackTimeout = this._ackTimeoutRegistry.add({\n    topic: C.TOPIC.RPC,\n    action: C.ACTIONS.ACK,\n    name: name,\n    timeout: this._options.rpcAckTimeout,\n    callback: this.error.bind(this)\n  });\n  this._responseTimeout = this._ackTimeoutRegistry.add({\n    topic: C.TOPIC.RPC,\n    action: C.ACTIONS.REQUEST,\n    name: name,\n    event: C.EVENT.RESPONSE_TIMEOUT,\n    timeout: this._options.rpcResponseTimeout,\n    callback: this.error.bind(this)\n  });\n};\n\n/**\n * Called once an ack message is received from the server\n *\n * @public\n * @returns {void}\n */\nRpc.prototype.ack = function () {\n  this._ackTimeoutRegistry.remove({\n    ackId: this._ackTimeout\n  });\n};\n\n/**\n * Called once a response message is received from the server.\n * Converts the typed data and completes the request\n *\n * @param   {String} data typed value\n *\n * @public\n * @returns {void}\n */\nRpc.prototype.respond = function (data) {\n  var convertedData = messageParser.convertTyped(data, this._client);\n  this._callback(null, convertedData);\n  this._complete();\n};\n\n/**\n * Callback for error messages received from the server. Once\n * an error is received the request is considered completed. Even\n * if a response arrives later on it will be ignored / cause an\n * UNSOLICITED_MESSAGE error\n *\n * @param   {String} errorMsg @TODO should be CODE and message\n *\n * @public\n * @returns {void}\n */\nRpc.prototype.error = function (timeout) {\n  this._callback(timeout.event || timeout);\n  this._complete();\n};\n\n/**\n * Called after either an error or a response\n * was received\n *\n * @private\n * @returns {void}\n */\nRpc.prototype._complete = function () {\n  this._ackTimeoutRegistry.remove({\n    ackId: this._ackTimeout\n  });\n  this._ackTimeoutRegistry.remove({\n    ackId: this._responseTimeout\n  });\n};\n\nmodule.exports = Rpc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/rpc/rpc.js\n// module id = e8qc\n// module chunks = 5 6","'use strict';\n/* eslint-disable prefer-spread, prefer-rest-params */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar jsonPath = require('./json-path');\nvar ResubscribeNotifier = require('../utils/resubscribe-notifier');\nvar EventEmitter = require('component-emitter2');\nvar C = require('../constants/constants');\nvar messageBuilder = require('../message/message-builder');\nvar messageParser = require('../message/message-parser');\nvar utils = require('../utils/utils');\n\n/**\n * This class represents a single record - an observable\n * dataset returned by client.record.getRecord()\n *\n * @extends {EventEmitter}\n *\n * @param {String} name              The unique name of the record\n * @param {Object} recordOptions     A map of options, e.g. { persist: true }\n * @param {Connection} Connection    The instance of the server connection\n * @param {Object} options        Deepstream options\n * @param {Client} client        deepstream.io client\n *\n * @constructor\n */\nvar Record = function Record(name, recordOptions, connection, options, client) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n\n  this.name = name;\n  this.usages = 0;\n  this._recordOptions = recordOptions;\n  this._connection = connection;\n  this._client = client;\n  this._options = options;\n  this.isReady = false;\n  this.isDestroyed = false;\n  this.hasProvider = false;\n  this._$data = Object.create(null);\n  this.version = null;\n  this._eventEmitter = new EventEmitter();\n  this._queuedMethodCalls = [];\n  this._writeCallbacks = {};\n\n  this._mergeStrategy = null;\n  if (options.mergeStrategy) {\n    this.setMergeStrategy(options.mergeStrategy);\n  }\n\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._resubscribeNotifier = new ResubscribeNotifier(this._client, this._sendRead.bind(this));\n\n  this._readAckTimeout = this._ackTimeoutRegistry.add({\n    topic: C.TOPIC.RECORD,\n    name: name,\n    action: C.ACTIONS.SUBSCRIBE,\n    timeout: this._options.recordReadAckTimeout\n  });\n  this._responseTimeout = this._ackTimeoutRegistry.add({\n    topic: C.TOPIC.RECORD,\n    name: name,\n    action: C.ACTIONS.READ,\n    event: C.EVENT.RESPONSE_TIMEOUT,\n    timeout: this._options.recordReadTimeout\n  });\n  this._sendRead();\n};\n\nEventEmitter(Record.prototype); // eslint-disable-line\n\n/**\n * Set a merge strategy to resolve any merge conflicts that may occur due\n * to offline work or write conflicts. The function will be called with the\n * local record, the remote version/data and a callback to call once the merge has\n * completed or if an error occurs ( which leaves it in an inconsistent state until\n * the next update merge attempt ).\n *\n * @param   {Function} mergeStrategy A Function that can resolve merge issues.\n *\n * @public\n * @returns {void}\n */\nRecord.prototype.setMergeStrategy = function (mergeStrategy) {\n  if (typeof mergeStrategy === 'function') {\n    this._mergeStrategy = mergeStrategy;\n  } else {\n    throw new Error('Invalid merge strategy: Must be a Function');\n  }\n};\n\n/**\n * Returns a copy of either the entire dataset of the record\n * or - if called with a path - the value of that path within\n * the record's dataset.\n *\n * Returning a copy rather than the actual value helps to prevent\n * the record getting out of sync due to unintentional changes to\n * its data\n *\n * @param   {[String]} path A JSON path, e.g. users[ 2 ].firstname\n *\n * @public\n * @returns {Mixed} value\n */\nRecord.prototype.get = function (path) {\n  return jsonPath.get(this._$data, path, this._options.recordDeepCopy);\n};\n\n/**\n * Sets the value of either the entire dataset\n * or of a specific path within the record\n * and submits the changes to the server\n *\n * If the new data is equal to the current data, nothing will happen\n *\n * @param {[String|Object]} pathOrData Either a JSON path when called with\n *                                     two arguments or the data itself\n * @param {Object} data     The data that should be stored in the record\n *\n * @public\n * @returns {void}\n */\nRecord.prototype.set = function (pathOrData, dataOrCallback, callback) {\n  var path = void 0;\n  var data = void 0;\n  if (arguments.length === 1) {\n    // set( object )\n    if ((typeof pathOrData === 'undefined' ? 'undefined' : _typeof(pathOrData)) !== 'object') {\n      throw new Error('invalid argument data');\n    }\n    data = pathOrData;\n  } else if (arguments.length === 2) {\n    if (typeof pathOrData === 'string' && pathOrData.length !== 0 && typeof dataOrCallback !== 'function') {\n      // set( path, data )\n      path = pathOrData;\n      data = dataOrCallback;\n    } else if ((typeof pathOrData === 'undefined' ? 'undefined' : _typeof(pathOrData)) === 'object' && typeof dataOrCallback === 'function') {\n      // set( data, callback )\n      data = pathOrData;\n      callback = dataOrCallback; // eslint-disable-line\n    } else {\n      throw new Error('invalid argument path');\n    }\n  } else if (arguments.length === 3) {\n    // set( path, data, callback )\n    if (typeof pathOrData !== 'string' || pathOrData.length === 0 || typeof callback !== 'function') {\n      throw new Error('invalid arguments, must pass in a string, a value and a function');\n    }\n    path = pathOrData;\n    data = dataOrCallback;\n  }\n\n  if (!path && (data === null || (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object')) {\n    throw new Error('invalid arguments, scalar values cannot be set without path');\n  }\n\n  if (this._checkDestroyed('set')) {\n    return this;\n  }\n\n  if (!this.isReady) {\n    this._queuedMethodCalls.push({ method: 'set', args: arguments });\n    return this;\n  }\n\n  var oldValue = this._$data;\n  var newValue = jsonPath.set(oldValue, path, data, this._options.recordDeepCopy);\n\n  if (oldValue === newValue) {\n    if (typeof callback === 'function') {\n      var errorMessage = null;\n      if (!utils.isConnected(this._client)) {\n        errorMessage = 'Connection error: error updating record as connection was closed';\n      }\n      utils.requestIdleCallback(function () {\n        return callback(errorMessage);\n      });\n    }\n    return this;\n  }\n\n  var config = void 0;\n  if (typeof callback === 'function') {\n    config = {};\n    config.writeSuccess = true;\n    if (!utils.isConnected(this._client)) {\n      utils.requestIdleCallback(function () {\n        return callback('Connection error: error updating record as connection was closed');\n      });\n    } else {\n      this._setUpCallback(this.version, callback);\n    }\n  }\n  this._sendUpdate(path, data, config);\n  this._applyChange(newValue);\n  return this;\n};\n\n/**\n * Subscribes to changes to the records dataset.\n *\n * Callback is the only mandatory argument.\n *\n * When called with a path, it will only subscribe to updates\n * to that path, rather than the entire record\n *\n * If called with true for triggerNow, the callback will\n * be called immediatly with the current value\n *\n * @param   {[String]}    path      A JSON path within the record to subscribe to\n * @param   {Function}    callback         Callback function to notify on changes\n * @param   {[Boolean]}   triggerNow      A flag to specify whether the callback should\n *                                         be invoked immediatly with the current value\n *\n * @public\n * @returns {void}\n */\n// eslint-disable-next-line\nRecord.prototype.subscribe = function (path, callback, triggerNow) {\n  var _this = this;\n\n  var args = this._normalizeArguments(arguments);\n\n  if (args.path !== undefined && (typeof args.path !== 'string' || args.path.length === 0)) {\n    throw new Error('invalid argument path');\n  }\n  if (typeof args.callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  if (this._checkDestroyed('subscribe')) {\n    return;\n  }\n\n  if (args.triggerNow) {\n    this.whenReady(function () {\n      _this._eventEmitter.on(args.path, args.callback);\n      args.callback(_this.get(args.path));\n    });\n  } else {\n    this._eventEmitter.on(args.path, args.callback);\n  }\n};\n\n/**\n * Removes a subscription that was previously made using record.subscribe()\n *\n * Can be called with a path to remove the callback for this specific\n * path or only with a callback which removes it from the generic subscriptions\n *\n * Please Note: unsubscribe is a purely client side operation. If the app is no longer\n * interested in receiving updates for this record from the server it needs to call\n * discard instead\n *\n * @param   {[String|Function]}   pathOrCallback A JSON path\n * @param   {Function}         callback     The callback method. Please note, if a bound\n *                                          method was passed to subscribe, the same method\n *                                          must be passed to unsubscribe as well.\n *\n * @public\n * @returns {void}\n */\n// eslint-disable-next-line\nRecord.prototype.unsubscribe = function (pathOrCallback, callback) {\n  var args = this._normalizeArguments(arguments);\n\n  if (args.path !== undefined && (typeof args.path !== 'string' || args.path.length === 0)) {\n    throw new Error('invalid argument path');\n  }\n  if (args.callback !== undefined && typeof args.callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  if (this._checkDestroyed('unsubscribe')) {\n    return;\n  }\n  this._eventEmitter.off(args.path, args.callback);\n};\n\n/**\n * Removes all change listeners and notifies the server that the client is\n * no longer interested in updates for this record\n *\n * @public\n * @returns {void}\n */\nRecord.prototype.discard = function () {\n  var _this2 = this;\n\n  if (this._checkDestroyed('discard')) {\n    return;\n  }\n  this.whenReady(function () {\n    _this2.usages--;\n    if (_this2.usages <= 0) {\n      _this2.emit('destroyPending');\n      _this2._discardTimeout = _this2._ackTimeoutRegistry.add({\n        topic: C.TOPIC.RECORD,\n        name: _this2.name,\n        action: C.ACTIONS.UNSUBSCRIBE\n      });\n      _this2._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.UNSUBSCRIBE, [_this2.name]);\n    }\n  });\n};\n\n/**\n * Deletes the record on the server.\n *\n * @public\n * @returns {void}\n */\nRecord.prototype.delete = function () {\n  var _this3 = this;\n\n  if (this._checkDestroyed('delete')) {\n    return;\n  }\n  this.whenReady(function () {\n    _this3.emit('destroyPending');\n    _this3._deleteAckTimeout = _this3._ackTimeoutRegistry.add({\n      topic: C.TOPIC.RECORD,\n      name: _this3.name,\n      action: C.ACTIONS.DELETE,\n      event: C.EVENT.DELETE_TIMEOUT,\n      timeout: _this3._options.recordDeleteTimeout\n    });\n    _this3._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.DELETE, [_this3.name]);\n  });\n};\n\n/**\n * Convenience method, similar to promises. Executes callback\n * whenever the record is ready, either immediatly or once the ready\n * event is fired\n *\n * @param   {Function} callback Will be called when the record is ready\n *\n * @returns {void}\n */\nRecord.prototype.whenReady = function (callback) {\n  if (this.isReady === true) {\n    callback(this);\n  } else {\n    this.once('ready', callback.bind(this, this));\n  }\n};\n\n/**\n * Callback for incoming messages from the message handler\n *\n * @param   {Object} message parsed and validated deepstream message\n *\n * @package private\n * @returns {void}\n */\nRecord.prototype._$onMessage = function (message) {\n  if (message.action === C.ACTIONS.READ) {\n    if (this.version === null) {\n      this._ackTimeoutRegistry.clear(message);\n      this._onRead(message);\n    } else {\n      this._applyUpdate(message, this._client);\n    }\n  } else if (message.action === C.ACTIONS.ACK) {\n    this._processAckMessage(message);\n  } else if (message.action === C.ACTIONS.UPDATE || message.action === C.ACTIONS.PATCH) {\n    this._applyUpdate(message, this._client);\n  } else if (message.action === C.ACTIONS.WRITE_ACKNOWLEDGEMENT) {\n    Record._handleWriteAcknowledgements(message, this._writeCallbacks, this._client);\n  } else if (message.data[0] === C.EVENT.VERSION_EXISTS) {\n    // Otherwise it should be an error, and dealt with accordingly\n    this._recoverRecord(message.data[2], JSON.parse(message.data[3]), message);\n  } else if (message.data[0] === C.EVENT.MESSAGE_DENIED) {\n    this._clearTimeouts();\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_HAS_PROVIDER) {\n    var hasProvider = messageParser.convertTyped(message.data[1], this._client);\n    this.hasProvider = hasProvider;\n    this.emit('hasProviderChanged', hasProvider);\n  }\n};\n\nRecord._handleWriteAcknowledgements = function (message, callbacks, client) {\n  var versions = JSON.parse(message.data[1]);\n  for (var i = 0; i < versions.length; i++) {\n    var callback = callbacks[versions[i]];\n    if (callback !== undefined) {\n      callback(messageParser.convertTyped(message.data[2], client));\n      delete callbacks[versions[i]];\n    }\n  }\n};\n\n/**\n * Called when a merge conflict is detected by a VERSION_EXISTS error or if an update recieved\n * is directly after the clients. If no merge strategy is configure it will emit a VERSION_EXISTS\n * error and the record will remain in an inconsistent state.\n *\n * @param   {Number} remoteVersion The remote version number\n * @param   {Object} remoteData The remote object data\n * @param   {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._recoverRecord = function (remoteVersion, remoteData, message) {\n  message.processedError = true;\n  if (this._mergeStrategy) {\n    this._mergeStrategy(this, remoteData, remoteVersion, this._onRecordRecovered.bind(this, remoteVersion, remoteData, message));\n  } else {\n    this.emit('error', C.EVENT.VERSION_EXISTS, 'received update for ' + remoteVersion + ' but version is ' + this.version);\n  }\n};\n\nRecord.prototype._sendUpdate = function (path, data, config) {\n  this.version++;\n  var msgData = void 0;\n  if (!path) {\n    msgData = config === undefined ? [this.name, this.version, data] : [this.name, this.version, data, config];\n    this._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.UPDATE, msgData);\n  } else {\n    msgData = config === undefined ? [this.name, this.version, path, messageBuilder.typed(data)] : [this.name, this.version, path, messageBuilder.typed(data), config];\n    this._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.PATCH, msgData);\n  }\n};\n\n/**\n * Callback once the record merge has completed. If successful it will set the\n * record state, else emit and error and the record will remain in an\n * inconsistent state until the next update.\n *\n * @param   {Number} remoteVersion The remote version number\n * @param   {Object} remoteData The remote object data\n * @param   {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._onRecordRecovered = function (remoteVersion, remoteData, message, error, data) {\n  if (!error) {\n    var oldVersion = this.version;\n    this.version = remoteVersion;\n\n    var oldValue = this._$data;\n\n    if (utils.deepEquals(oldValue, remoteData)) {\n      return;\n    }\n\n    var newValue = jsonPath.set(oldValue, undefined, data, false);\n\n    if (utils.deepEquals(data, remoteData)) {\n      this._applyChange(data);\n\n      var callback = this._writeCallbacks[remoteVersion];\n      if (callback !== undefined) {\n        callback(null);\n        delete this._writeCallbacks[remoteVersion];\n      }\n      return;\n    }\n\n    var config = message.data[4];\n    if (config && JSON.parse(config).writeSuccess) {\n      var _callback = this._writeCallbacks[oldVersion];\n      delete this._writeCallbacks[oldVersion];\n      this._setUpCallback(this.version, _callback);\n    }\n    this._sendUpdate(undefined, data, config);\n    this._applyChange(newValue);\n  } else {\n    this.emit('error', C.EVENT.VERSION_EXISTS, 'received update for ' + remoteVersion + ' but version is ' + this.version);\n  }\n};\n\n/**\n * Callback for ack-messages. Acks can be received for\n * subscriptions, discards and deletes\n *\n * @param   {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._processAckMessage = function (message) {\n  var acknowledgedAction = message.data[0];\n\n  if (acknowledgedAction === C.ACTIONS.SUBSCRIBE) {\n    this._ackTimeoutRegistry.clear(message);\n  } else if (acknowledgedAction === C.ACTIONS.DELETE) {\n    this.emit('delete');\n    this._destroy();\n  } else if (acknowledgedAction === C.ACTIONS.UNSUBSCRIBE) {\n    this.emit('discard');\n    this._destroy();\n  }\n};\n\n/**\n * Applies incoming updates and patches to the record's dataset\n *\n * @param   {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._applyUpdate = function (message) {\n  var version = parseInt(message.data[1], 10);\n  var data = void 0;\n  if (message.action === C.ACTIONS.PATCH) {\n    data = messageParser.convertTyped(message.data[3], this._client);\n  } else {\n    data = JSON.parse(message.data[2]);\n  }\n\n  if (this.version === null) {\n    this.version = version;\n  } else if (this.version + 1 !== version) {\n    if (message.action === C.ACTIONS.PATCH) {\n      /**\n      * Request a snapshot so that a merge can be done with the read reply which contains\n      * the full state of the record\n      **/\n      this._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.SNAPSHOT, [this.name]);\n    } else {\n      this._recoverRecord(version, data, message);\n    }\n    return;\n  }\n\n  this.version = version;\n  this._applyChange(jsonPath.set(this._$data, message.action === C.ACTIONS.PATCH ? message.data[2] : undefined, data));\n};\n\n/**\n * Callback for incoming read messages\n *\n * @param   {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._onRead = function (message) {\n  this.version = parseInt(message.data[1], 10);\n  this._applyChange(jsonPath.set(this._$data, undefined, JSON.parse(message.data[2])));\n  this._setReady();\n};\n\n/**\n * Invokes method calls that where queued while the record wasn't ready\n * and emits the ready event\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._setReady = function () {\n  this.isReady = true;\n  for (var i = 0; i < this._queuedMethodCalls.length; i++) {\n    this[this._queuedMethodCalls[i].method].apply(this, this._queuedMethodCalls[i].args);\n  }\n  this._queuedMethodCalls = [];\n  this.emit('ready');\n};\n\nRecord.prototype._setUpCallback = function (currentVersion, callback) {\n  var newVersion = Number(this.version) + 1;\n  this._writeCallbacks[newVersion] = callback;\n};\n\n/**\n * Sends the read message, either initially at record\n * creation or after a lost connection has been re-established\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._sendRead = function () {\n  this._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.CREATEORREAD, [this.name]);\n};\n\n/**\n * Compares the new values for every path with the previously stored ones and\n * updates the subscribers if the value has changed\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._applyChange = function (newData) {\n  if (this.isDestroyed) {\n    return;\n  }\n\n  var oldData = this._$data;\n  this._$data = newData;\n\n  var paths = this._eventEmitter.eventNames();\n  for (var i = 0; i < paths.length; i++) {\n    var newValue = jsonPath.get(newData, paths[i], false);\n    var oldValue = jsonPath.get(oldData, paths[i], false);\n\n    if (newValue !== oldValue) {\n      this._eventEmitter.emit(paths[i], this.get(paths[i]));\n    }\n  }\n};\n\n/**\n * Creates a map based on the types of the provided arguments\n *\n * @param {Arguments} args\n *\n * @private\n * @returns {Object} arguments map\n */\nRecord.prototype._normalizeArguments = function (args) {\n  // If arguments is already a map of normalized parameters\n  // (e.g. when called by AnonymousRecord), just return it.\n  if (args.length === 1 && _typeof(args[0]) === 'object') {\n    return args[0];\n  }\n\n  var result = Object.create(null);\n\n  for (var i = 0; i < args.length; i++) {\n    if (typeof args[i] === 'string') {\n      result.path = args[i];\n    } else if (typeof args[i] === 'function') {\n      result.callback = args[i];\n    } else if (typeof args[i] === 'boolean') {\n      result.triggerNow = args[i];\n    }\n  }\n\n  return result;\n};\n\n/**\n * Clears all timeouts that are set when the record is created\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._clearTimeouts = function () {\n  this._ackTimeoutRegistry.remove({ ackId: this._readAckTimeout, silent: true });\n  this._ackTimeoutRegistry.remove({ ackId: this._responseTimeout, silent: true });\n  this._ackTimeoutRegistry.remove({ ackId: this._deleteAckTimeout, silent: true });\n  this._ackTimeoutRegistry.remove({ ackId: this._discardTimeout, silent: true });\n};\n\n/**\n * A quick check that's carried out by most methods that interact with the record\n * to make sure it hasn't been destroyed yet - and to handle it gracefully if it has.\n *\n * @param   {String} methodName The name of the method that invoked this check\n *\n * @private\n * @returns {Boolean} is destroyed\n */\nRecord.prototype._checkDestroyed = function (methodName) {\n  if (this.isDestroyed) {\n    this.emit('error', 'Can\\'t invoke \\'' + methodName + '\\'. Record \\'' + this.name + '\\' is already destroyed');\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Destroys the record and nulls all\n * its dependencies\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._destroy = function () {\n  this._clearTimeouts();\n  this._eventEmitter.off();\n  this._resubscribeNotifier.destroy();\n  this.isDestroyed = true;\n  this.isReady = false;\n  this._client = null;\n  this._eventEmitter = null;\n  this._connection = null;\n};\n\nmodule.exports = Record;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/record/record.js\n// module id = fTme\n// module chunks = 5 6","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar C = require('../constants/constants');\n\nvar SEP = C.MESSAGE_PART_SEPERATOR;\n\n/**\n * Creates a deepstream message string, based on the\n * provided parameters\n *\n * @param   {String} topic  One of CONSTANTS.TOPIC\n * @param   {String} action One of CONSTANTS.ACTIONS\n * @param   {Array} data An array of strings or JSON-serializable objects\n *\n * @returns {String} deepstream message string\n */\nexports.getMsg = function (topic, action, data) {\n  if (data && !(data instanceof Array)) {\n    throw new Error('data must be an array');\n  }\n  var sendData = [topic, action];\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      if (_typeof(data[i]) === 'object') {\n        sendData.push(JSON.stringify(data[i]));\n      } else {\n        sendData.push(data[i]);\n      }\n    }\n  }\n\n  return sendData.join(SEP) + C.MESSAGE_SEPERATOR;\n};\n\n/**\n * Converts a serializable value into its string-representation and adds\n * a flag that provides instructions on how to deserialize it.\n *\n * Please see messageParser.convertTyped for the counterpart of this method\n *\n * @param {Mixed} value\n *\n * @public\n * @returns {String} string representation of the value\n */\nexports.typed = function (value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  if (type === 'string') {\n    return C.TYPES.STRING + value;\n  }\n\n  if (value === null) {\n    return C.TYPES.NULL;\n  }\n\n  if (type === 'object') {\n    return C.TYPES.OBJECT + JSON.stringify(value);\n  }\n\n  if (type === 'number') {\n    return C.TYPES.NUMBER + value.toString();\n  }\n\n  if (value === true) {\n    return C.TYPES.TRUE;\n  }\n\n  if (value === false) {\n    return C.TYPES.FALSE;\n  }\n\n  if (value === undefined) {\n    return C.TYPES.UNDEFINED;\n  }\n\n  throw new Error('Can\\'t serialize type ' + value);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/message/message-builder.js\n// module id = is/x\n// module chunks = 5 6","'use strict';\n\nvar C = require('../constants/constants');\nvar ResubscribeNotifier = require('./resubscribe-notifier');\n\n/*\n * Creates a listener instance which is usedby deepstream Records and Events.\n *\n * @param {String} topic                 One of CONSTANTS.TOPIC\n * @param {String} pattern              A pattern that can be compiled via new RegExp(pattern)\n * @param {Function} callback           The function which is called when pattern was found and\n *                                      removed\n * @param {Connection} Connection       The instance of the server connection\n * @param {Object} options              Deepstream options\n * @param {Client} client               deepstream.io client\n *\n * @constructor\n */\nvar Listener = function Listener(topic, pattern, callback, options, client, connection) {\n  this._topic = topic;\n  this._callback = callback;\n  this._pattern = pattern;\n  this._options = options;\n  this._client = client;\n  this._connection = connection;\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._ackTimeoutRegistry.add({\n    topic: this._topic,\n    name: pattern,\n    action: C.ACTIONS.LISTEN\n  });\n\n  this._resubscribeNotifier = new ResubscribeNotifier(client, this._sendListen.bind(this));\n  this._sendListen();\n  this.destroyPending = false;\n};\n\nListener.prototype.sendDestroy = function () {\n  this.destroyPending = true;\n  this._connection.sendMsg(this._topic, C.ACTIONS.UNLISTEN, [this._pattern]);\n  this._resubscribeNotifier.destroy();\n};\n\n/*\n * Resets internal properties. Is called when provider cals unlisten.\n *\n * @returns {void}\n */\nListener.prototype.destroy = function () {\n  this._callback = null;\n  this._pattern = null;\n  this._client = null;\n  this._connection = null;\n};\n\n/*\n * Accepting a listener request informs deepstream that the current provider is willing to\n * provide the record or event matching the subscriptionName . This will establish the current\n * provider as the only publisher for the actual subscription with the deepstream cluster.\n * Either accept or reject needs to be called by the listener, otherwise it prints out a\n * deprecated warning.\n *\n * @returns {void}\n */\nListener.prototype.accept = function (name) {\n  this._connection.sendMsg(this._topic, C.ACTIONS.LISTEN_ACCEPT, [this._pattern, name]);\n};\n\n/*\n * Rejecting a listener request informs deepstream that the current provider is not willing\n * to provide the record or event matching the subscriptionName . This will result in deepstream\n * requesting another provider to do so instead. If no other provider accepts or exists, the\n * record will remain unprovided.\n * Either accept or reject needs to be called by the listener, otherwise it prints out a\n * deprecated warning.\n *\n * @returns {void}\n */\nListener.prototype.reject = function (name) {\n  this._connection.sendMsg(this._topic, C.ACTIONS.LISTEN_REJECT, [this._pattern, name]);\n};\n\n/*\n * Wraps accept and reject as an argument for the callback function.\n *\n * @private\n * @returns {Object}\n */\nListener.prototype._createCallbackResponse = function (message) {\n  return {\n    accept: this.accept.bind(this, message.data[1]),\n    reject: this.reject.bind(this, message.data[1])\n  };\n};\n\n/*\n * Handles the incomming message.\n *\n * @private\n * @returns {void}\n */\nListener.prototype._$onMessage = function (message) {\n  if (message.action === C.ACTIONS.ACK) {\n    this._ackTimeoutRegistry.clear(message);\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_FOR_PATTERN_FOUND) {\n    this._callback(message.data[1], true, this._createCallbackResponse(message));\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_FOR_PATTERN_REMOVED) {\n    this._callback(message.data[1], false);\n  } else {\n    this._client._$onError(this._topic, C.EVENT.UNSOLICITED_MESSAGE, message.data[0] + '|' + message.data[1]);\n  }\n};\n\n/*\n * Sends a C.ACTIONS.LISTEN to deepstream.\n *\n * @private\n * @returns {void}\n */\nListener.prototype._sendListen = function () {\n  this._connection.sendMsg(this._topic, C.ACTIONS.LISTEN, [this._pattern]);\n};\n\nmodule.exports = Listener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/utils/listener.js\n// module id = j4Xh\n// module chunks = 5 6","<template>\r\n  <Modal v-model=\"modelState\" :title=\"'任务列表 - '+taskValue\" width=\"660\" @on-visible-change=\"modalVisibleChange\" closable>\r\n    <div style=\"position: relative\">\r\n      <div class=\"input-filter-box\">\r\n        <label class=\"input-filter-lebal\">交易号:</label>\r\n        <Input v-model=\"filterData.transCode\" placeholder=\"请输入交易号\" style=\"width: 127px;margin-left:12px\"></Input>\r\n      </div>\r\n      <div class=\"input-filter-box\">\r\n        <label class=\"input-filter-lebal\">创建者:</label>\r\n        <Input v-model=\"filterData.creatorName\" placeholder=\"请输入创建者\" style=\"width: 127px;margin-left:12px\"></Input>\r\n      </div>\r\n      <div class=\"input-filter-box\">\r\n        <label class=\"input-filter-lebal\">当前用户:</label>\r\n        <Input v-model=\"filterData.assigneeName\" placeholder=\"请输入审批者\" style=\"width: 127px;margin-left:12px\"></Input>\r\n      </div>\r\n      <div class=\"input-crttime\" v-show=\"expand\">\r\n        <div class=\"input-filter-box\">\r\n          <label class=\"input-filter-lebal\">当前节点:</label>\r\n          <Input v-model=\"filterData.nodeName\" placeholder=\"请输入当前节点\" style=\"width: 127px;margin-left:12px\"></Input>\r\n        </div>\r\n        <div class=\"input-filter-box\">\r\n          <label class=\"input-filter-lebal\">创建时间:</label>\r\n          <DatePicker v-model=\"filterData.crtTime\" format=\"yyyy/MM/dd\" type=\"daterange\" placement=\"bottom-end\" placeholder=\"请输入过滤时间\" style=\"width: 170px\"></DatePicker>\r\n        </div>\r\n      </div>\r\n      <div class=\"action-btn\">\r\n        <Button type=\"primary\" size=\"small\" @click=\"filterTaskBtn\">查询</Button>\r\n        <Button size=\"small\" @click=\"clearInputValue\">重置</Button>\r\n        <span class=\"expand\" @click=\"expandCrtTime\">\r\n          {{expandValue}}\r\n          <i class=\"iconfont\" v-html=\"expandIcon\"></i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <Scroll :on-reach-edge=\"handleReachBottom\" height='233'> -->\r\n    <Table :loading=\"loading\" :data=\"columnData\" :columns=\"columns\" size=\"small\" @on-sort-change=\"handleSort\" stripe></Table>\r\n    <!-- </Scroll> -->\r\n    <div style=\"margin: 10px;overflow: hidden\">\r\n      <div style=\"float: right;\">\r\n        <Page :total=\"pageTotal\" :current=\"currentPage\" :page-size=\"pageSize\" size=\"small\" @on-change=\"changeCurrentPage\" show-total show-elevator></Page>\r\n      </div>\r\n    </div>\r\n    <div slot=\"footer\">\r\n    </div>\r\n  </Modal>\r\n</template>\r\n\r\n<script>\r\nimport { getAppTaskCount } from \"@/services/flowService\";\r\nimport { FormatDate } from \"@/utils/utils\";\r\nexport default {\r\n  name: \"TaskModal\",\r\n  data() {\r\n    return {\r\n      columns: [\r\n        {\r\n          title: \"交易号\",\r\n          key: \"transCode\",\r\n          sortable: true,\r\n          width: 160,\r\n          render: (h, params) => {\r\n            return h(\r\n              \"a\",\r\n              {\r\n                attrs: {\r\n                  href: \"/Form/index.html?data=\" + params.row.transCode,\r\n                  target: \"_blank\"\r\n                }\r\n              },\r\n              params.row.transCode\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: \"当前节点\",\r\n          key: \"nodeName\"\r\n        },\r\n        {\r\n          title: \"当前用户\",\r\n          key: \"assigneeName\",\r\n          width: 90\r\n        },\r\n        {\r\n          title: \"创建者\",\r\n          key: \"creatorName\",\r\n          width: 90\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          key: \"crtTime\",\r\n          sortable: true,\r\n            width:160,\r\n          render: (h, params) => {\r\n            //时间戳转换为日期格式\r\n            function formatDateTime(inputTime) {\r\n              let date = new Date(inputTime);\r\n              let y = date.getFullYear();\r\n              let m = date.getMonth() + 1;\r\n              m = m < 10 ? \"0\" + m : m;\r\n              let d = date.getDate();\r\n              d = d < 10 ? \"0\" + d : d;\r\n              let h = date.getHours();\r\n              h = h < 10 ? \"0\" + h : h;\r\n              let minute = date.getMinutes();\r\n              let second = date.getSeconds();\r\n              minute = minute < 10 ? \"0\" + minute : minute;\r\n              second = second < 10 ? \"0\" + second : second;\r\n              return (\r\n                y + \"-\" + m + \"-\" + d + \" \" + h + \":\" + minute + \":\" + second\r\n              );\r\n            }\r\n            return h(\"span\", formatDateTime(params.row.crtTime));\r\n          }\r\n        }\r\n      ],\r\n      columnData: [],\r\n      loading: true, //table是否加载\r\n      pageTotal: 0, //table总数\r\n      pageSize: 6,\r\n      currentPage: 1, //table当前页\r\n      modelState: false,\r\n      filterData: {\r\n        //过滤所需参数绑定\r\n        transCode: \"\",\r\n        creatorName: \"\",\r\n        crtTime: [],\r\n        assigneeName: \"\",\r\n        nodeName: \"\"\r\n      },\r\n      expand: false,\r\n      expandValue: \"展开\",\r\n      expandIcon: \"&#xe617;\"\r\n    };\r\n  },\r\n  props: [\"listId\", \"modal\", \"taskValue\", \"type\"],\r\n\r\n  watch: {\r\n    listId: {\r\n      handler: function(value, oldValue) {\r\n        this.getTaskList();\r\n      }\r\n    },\r\n    modal: function(value, oldValue) {\r\n      this.modelState = value;\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * 分页加载\r\n     */\r\n    changeCurrentPage(currentPage) {\r\n      this.currentPage = currentPage;\r\n      let crtTime = \"\";\r\n      if (this.filterData.crtTime.length > 0 && this.filterData.crtTime[0]) {\r\n        crtTime =\r\n          FormatDate(this.filterData.crtTime[0], \"yyyy-MM-dd\") +\r\n          \"/\" +\r\n          FormatDate(this.filterData.crtTime[1], \"yyyy-MM-dd\");\r\n      }\r\n      let params = {\r\n        type: this.type,\r\n        page: this.currentPage,\r\n        listId: this.listId,\r\n        limit: this.pageSize,\r\n        filter: {\r\n          transCode: this.filterData.transCode,\r\n          creatorName: this.filterData.creatorName,\r\n          assigneeName: this.filterData.assigneeName,\r\n          nodeName: this.filterData.nodeName,\r\n          crtTime: crtTime\r\n        }\r\n      };\r\n      for (let f in params.filter) {\r\n        if (!params.filter[f]) {\r\n          delete params.filter[f];\r\n        }\r\n      }\r\n\r\n      this.loading = true;\r\n      getAppTaskCount(params).then(res => {\r\n        this.pageTotal = res.total;\r\n        this.columnData = res.tableContent;\r\n        this.loading = false;\r\n      });\r\n    },\r\n\r\n     /** \r\n       * column：当前列数据\r\n          key：排序依据的指标\r\n          order：排序的顺序，值为 asc 或 desc\r\n      */\r\n      handleSort(column,key,order){\r\n      },\r\n\r\n    modalVisibleChange(state) {\r\n      if (!state) {\r\n        this.$emit(\"emitModal\", { modal: false, listId: \"\" });\r\n        this.filterData.transCode = \"\";\r\n        this.filterData.creatorName = \"\";\r\n        this.filterData.crtTime = \"\";\r\n        this.filterData.assigneeName = \"\";\r\n        this.filterData.nodeName = \"\";\r\n        this.expand = false;\r\n        this.currentPage = 1;\r\n        this.expandValue = '展开';\r\n      }\r\n    },\r\n\r\n    //清空输入框\r\n    clearInputValue: function() {\r\n      this.filterData.transCode = \"\";\r\n      this.filterData.creatorName = \"\";\r\n      this.filterData.crtTime = \"\";\r\n      this.filterData.assigneeName = \"\";\r\n      this.filterData.nodeName = \"\";\r\n      this.filterTaskBtn();\r\n    },\r\n\r\n    getTaskList: function() {\r\n      let params = {\r\n        type: this.type,\r\n        page: this.currentPage,\r\n        listId: this.listId,\r\n        limit: this.pageSize\r\n      };\r\n      this.loading = true;\r\n      getAppTaskCount(params).then(res => {\r\n        this.pageTotal = res.total;\r\n        this.columnData = res.tableContent;\r\n        this.loading = false;\r\n      });\r\n    },\r\n\r\n    //查询过滤\r\n    filterTaskBtn: function(e) {\r\n      let crtTime = \"\";\r\n      if (this.filterData.crtTime.length > 0 && this.filterData.crtTime[0]) {\r\n        crtTime =\r\n          FormatDate(this.filterData.crtTime[0], \"yyyy-MM-dd\") +\r\n          \"/\" +\r\n          FormatDate(this.filterData.crtTime[1], \"yyyy-MM-dd\");\r\n      }\r\n      let params = {\r\n        type: this.type,\r\n        page: 1,\r\n        listId: this.listId,\r\n        limit: this.pageSize,\r\n        filter: {\r\n          transCode: this.filterData.transCode,\r\n          creatorName: this.filterData.creatorName,\r\n          assigneeName: this.filterData.assigneeName,\r\n          nodeName: this.filterData.nodeName,\r\n          crtTime: crtTime\r\n        }\r\n      };\r\n\r\n      for (let f in params.filter) {\r\n        if (!params.filter[f]) {\r\n          delete params.filter[f];\r\n        }\r\n      }\r\n\r\n      this.currentPage = 1;\r\n      this.loading = true;\r\n      getAppTaskCount(params).then(res => {\r\n        this.pageTotal = res.total;\r\n        // if (res.tableContent.length > 0) {\r\n        this.columnData = res.tableContent;\r\n        this.loading = false;\r\n        // }\r\n      });\r\n    },\r\n\r\n    expandCrtTime: function() {\r\n      if (!this.expand) {\r\n        this.expand = true;\r\n        this.expandValue = \"收起\";\r\n        this.expandIcon = \"&#xe618;\";\r\n      } else {\r\n        this.expand = false;\r\n        this.expandValue = \"展开\";\r\n        this.expandIcon = \"&#xe617;\";\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.input-filter-box {\r\n  display: inline-block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.input-filter-lebal {\r\n  width: 60px;\r\n  display: inline-block;\r\n  text-align: right;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n}\r\n\r\n.action-btn {\r\n  // position: absolute;\r\n  display: inline-block;\r\n  margin-bottom: 5px;\r\n  height: 35px;\r\n  margin-left: 13px;\r\n  button {\r\n    margin-left: 5px;\r\n  }\r\n}\r\n.expand {\r\n  font-size: 13px;\r\n  margin-left: 5px;\r\n}\r\n\r\n.expand:hover {\r\n  cursor: pointer;\r\n  color: red;\r\n}\r\n\r\n.input-crttime {\r\n  display: inline-block;\r\n}\r\n</style>\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/pulsegraph/TaskModal.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Modal',{attrs:{\"title\":'任务列表 - '+_vm.taskValue,\"width\":\"660\",\"closable\":\"\"},on:{\"on-visible-change\":_vm.modalVisibleChange},model:{value:(_vm.modelState),callback:function ($$v) {_vm.modelState=$$v},expression:\"modelState\"}},[_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{staticClass:\"input-filter-box\"},[_c('label',{staticClass:\"input-filter-lebal\"},[_vm._v(\"交易号:\")]),_vm._v(\" \"),_c('Input',{staticStyle:{\"width\":\"127px\",\"margin-left\":\"12px\"},attrs:{\"placeholder\":\"请输入交易号\"},model:{value:(_vm.filterData.transCode),callback:function ($$v) {_vm.$set(_vm.filterData, \"transCode\", $$v)},expression:\"filterData.transCode\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"input-filter-box\"},[_c('label',{staticClass:\"input-filter-lebal\"},[_vm._v(\"创建者:\")]),_vm._v(\" \"),_c('Input',{staticStyle:{\"width\":\"127px\",\"margin-left\":\"12px\"},attrs:{\"placeholder\":\"请输入创建者\"},model:{value:(_vm.filterData.creatorName),callback:function ($$v) {_vm.$set(_vm.filterData, \"creatorName\", $$v)},expression:\"filterData.creatorName\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"input-filter-box\"},[_c('label',{staticClass:\"input-filter-lebal\"},[_vm._v(\"当前用户:\")]),_vm._v(\" \"),_c('Input',{staticStyle:{\"width\":\"127px\",\"margin-left\":\"12px\"},attrs:{\"placeholder\":\"请输入审批者\"},model:{value:(_vm.filterData.assigneeName),callback:function ($$v) {_vm.$set(_vm.filterData, \"assigneeName\", $$v)},expression:\"filterData.assigneeName\"}})],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.expand),expression:\"expand\"}],staticClass:\"input-crttime\"},[_c('div',{staticClass:\"input-filter-box\"},[_c('label',{staticClass:\"input-filter-lebal\"},[_vm._v(\"当前节点:\")]),_vm._v(\" \"),_c('Input',{staticStyle:{\"width\":\"127px\",\"margin-left\":\"12px\"},attrs:{\"placeholder\":\"请输入当前节点\"},model:{value:(_vm.filterData.nodeName),callback:function ($$v) {_vm.$set(_vm.filterData, \"nodeName\", $$v)},expression:\"filterData.nodeName\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"input-filter-box\"},[_c('label',{staticClass:\"input-filter-lebal\"},[_vm._v(\"创建时间:\")]),_vm._v(\" \"),_c('DatePicker',{staticStyle:{\"width\":\"170px\"},attrs:{\"format\":\"yyyy/MM/dd\",\"type\":\"daterange\",\"placement\":\"bottom-end\",\"placeholder\":\"请输入过滤时间\"},model:{value:(_vm.filterData.crtTime),callback:function ($$v) {_vm.$set(_vm.filterData, \"crtTime\", $$v)},expression:\"filterData.crtTime\"}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"action-btn\"},[_c('Button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.filterTaskBtn}},[_vm._v(\"查询\")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":\"small\"},on:{\"click\":_vm.clearInputValue}},[_vm._v(\"重置\")]),_vm._v(\" \"),_c('span',{staticClass:\"expand\",on:{\"click\":_vm.expandCrtTime}},[_vm._v(\"\\n        \"+_vm._s(_vm.expandValue)+\"\\n        \"),_c('i',{staticClass:\"iconfont\",domProps:{\"innerHTML\":_vm._s(_vm.expandIcon)}})])],1)]),_vm._v(\" \"),_c('Table',{attrs:{\"loading\":_vm.loading,\"data\":_vm.columnData,\"columns\":_vm.columns,\"size\":\"small\",\"stripe\":\"\"},on:{\"on-sort-change\":_vm.handleSort}}),_vm._v(\" \"),_c('div',{staticStyle:{\"margin\":\"10px\",\"overflow\":\"hidden\"}},[_c('div',{staticStyle:{\"float\":\"right\"}},[_c('Page',{attrs:{\"total\":_vm.pageTotal,\"current\":_vm.currentPage,\"page-size\":_vm.pageSize,\"size\":\"small\",\"show-total\":\"\",\"show-elevator\":\"\"},on:{\"on-change\":_vm.changeCurrentPage}})],1)]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-c0696768\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/.13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/pulsegraph/TaskModal.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/.3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c0696768\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=styles&index=0!./TaskModal.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/.13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./TaskModal.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./TaskModal.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/.13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c0696768\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=template&index=0!./TaskModal.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-c0696768\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pulsegraph/TaskModal.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"graph-box\">\r\n        <div id=\"circularGraph\" class=\"graph\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { getPulseGraph } from \"@/services/flowService\";\r\n\r\nconst echarts = require(\"echarts\");\r\n\r\nexport default {\r\n  props:['caseId'],\r\n  data() {\r\n    return {\r\n      nodes: [],\r\n      links: [],\r\n      groupLength: 0,\r\n      dataItem: [],\r\n      title:'',\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    drawECharts() {\r\n      //   基于准备好的dom，初始化echarts实例\r\n      let myChart = echarts.init(document.getElementById(\"circularGraph\"));\r\n      // 添加点击事件\r\n      myChart.on(\"click\", this.redirectTo);\r\n      // 绘制图表\r\n      for (let n in this.nodes) {\r\n        // delete this.nodes[n].x;\r\n        // delete this.nodes[n].y;\r\n        delete this.nodes[n].symbol;\r\n        // graph.nodes[n].x = Math.ceil(Math.random() * 10);\r\n        // graph.nodes[n].y = Math.ceil(Math.random() * 10);\r\n      }\r\n      let categories = this.dataItem.map((item,index)=>{\r\n        return {\r\n          name:item.name\r\n        }\r\n      });\r\n\r\n      this.nodes.forEach(function(node) {\r\n        node.category = node.index;\r\n        node.draggable = true;\r\n        node.symbol = 'image://'+'/resources/images/icon/'+node.icon+'.png';\r\n\r\n      });\r\n\r\n      // 指定图表的配置项和数据\r\n      let option = {\r\n        tooltip: {},\r\n        clickable: true,\r\n        legend: [\r\n          {\r\n            data: categories.map(function(a) {\r\n              return a.name;\r\n            }),\r\n          }\r\n        ],\r\n        animationDuration: 3000,\r\n        animationDurationUpdate: 3000,\r\n        animationEasingUpdate: \"quinticInOut\",\r\n        series: [\r\n          {\r\n            name: this.title,\r\n            type: \"graph\",\r\n            width: \"400px\",\r\n            height: \"400px\",\r\n            top:'80px',\r\n            layout: \"circular\",\r\n            circular: {\r\n              rotateLabel: true\r\n            },\r\n            data: this.nodes,\r\n            links: this.links,\r\n            categories: categories,\r\n            draggable: true,\r\n            edgeSymbol: [\"none\", \"arrow\"],\r\n            // roam: true,\r\n            // legendHoverLink:true,\r\n            label: {\r\n              normal: {\r\n                position: [\"50%\", \"50%\"],\r\n                formatter: \"{b}\"\r\n              }\r\n            },\r\n            lineStyle: {\r\n              normal: {\r\n                color: \"source\",\r\n                curveness: 0.1\r\n              }\r\n            },\r\n            force: {\r\n              repulsion: 12\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      myChart.setOption(option);\r\n    },\r\n\r\n    redirectTo(param) {\r\n      if (typeof param.seriesIndex == \"undefined\") {\r\n        return;\r\n      }\r\n      if (param.type == \"click\") {\r\n        if(param.data.type === 'list'){\r\n            if(param.data.url){\r\n               let url = \"appReport/\" + param.data.url;\r\n                window.top.postMessage({\r\n                    type: \"redirect\",\r\n                    url: url\r\n                }, \"*\");\r\n            }\r\n        }else{\r\n            return;\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    let that = this;\r\n    getPulseGraph(this.caseId).then(res => {\r\n      let nodes = [];\r\n      this.groupLength = res.dataItem.length;\r\n      this.dataItem = res.dataItem;\r\n      this.title  = res.title;\r\n      if (res) {\r\n        res.dataItem.map(function(item, index) {\r\n          for (let n = 0; n < item.child.length; n++) {\r\n            item.child[n].index = index;\r\n            item.child[n].icon = index+'_'+n;\r\n          }\r\n          nodes = [...nodes, ...item.child];\r\n        });\r\n      }\r\n      console.log(nodes);\r\n      nodes.map(item => {\r\n        this.nodes.push({\r\n          name: item.value,\r\n          id: item.id,\r\n          index: item.index,\r\n          icon:item.icon,\r\n          value: 10,\r\n          url:item.url,\r\n          type:item.type,\r\n          // symbolSize: item.type == \"list\" ? 30 : 30,\r\n          symbol: \"rect\",\r\n          label: {\r\n            show: true\r\n          },\r\n          itemStyle:{\r\n              borderColor:'#ddd',\r\n              shadowBlur:10,\r\n              shadowOffsetX:2,\r\n              shadowOffsetY:2\r\n              \r\n          }\r\n        });\r\n\r\n        item.endNode.map(target => {\r\n          this.links.push({\r\n            source: item.id,\r\n            target: target.id\r\n          });\r\n        });\r\n      });\r\n      that.drawECharts();\r\n    });\r\n  },\r\n\r\n  mounted() {}\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.graph-box {\r\n  width: 100%;\r\n  position: relative;\r\n  height: 100%;\r\n\r\n  .graph {\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 100%;\r\n    height: 100%;\r\n    // height: 800px;\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/flow/circularGraph.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"graph-box\"},[_c('div',{staticClass:\"graph\",attrs:{\"id\":\"circularGraph\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-73dead91\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/.13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/views/flow/circularGraph.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/.3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-73dead91\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=styles&index=0!./circularGraph.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/.13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./circularGraph.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./circularGraph.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/.13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-73dead91\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=template&index=0!./circularGraph.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-73dead91\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/flow/circularGraph.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"flow_container right_container\">\r\n    <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\r\n    <div id=\"flow-box\">\r\n      <RadioGroup class=\"taskbtn\" v-model=\"radioGroupLabel\" size=\"large\" @on-change=\"radioGroupChange\">\r\n        <Radio label=\"mytask\">\r\n          <span>我的任务</span>\r\n        </Radio>\r\n        <Radio label=\"teamtask\">\r\n          <span>团队任务</span>\r\n        </Radio>\r\n        <i class=\"vertical-divide\"></i>\r\n      </RadioGroup>\r\n      <RadioGroup class=\"taskbtn_1\" v-model=\"rodioGroupDoOrNot\" size=\"large\" @on-change=\"radioGroupChangeDoneOrTodo\">\r\n        <Radio label=\"todo\">\r\n          <span>未完成</span>\r\n        </Radio>\r\n        <Radio label=\"done\">\r\n          <span>已完成</span>\r\n        </Radio>\r\n        <i class=\"vertical-divide\"></i>\r\n      </RadioGroup>\r\n      <RadioGroup class=\"taskbtn_2\" size=\"large\">\r\n        <Radio label=\"no-overdue\">\r\n          <span>未逾期</span>\r\n        </Radio>\r\n        <Radio label=\"overdue \">\r\n          <span>逾期</span>\r\n        </Radio>\r\n        <i class=\"vertical-divide\"></i>\r\n      </RadioGroup>\r\n      <Dropdown style=\"position: fixed;top: 10px;left: 540px;z-index: 999; font-size:14px\">\r\n        <span>\r\n          项目立项\r\n          <Icon type=\"ios-arrow-down\"></Icon>\r\n        </span>\r\n        <DropdownMenu slot=\"list\">\r\n          <DropdownItem>项目立项1</DropdownItem>\r\n          <DropdownItem>项目立项1</DropdownItem>\r\n          <DropdownItem>项目立项1</DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n      <Dropdown style=\"position: fixed;top: 10px;left: 630px;z-index: 999; font-size:14px\">\r\n        <span>\r\n          销售订单\r\n          <Icon type=\"ios-arrow-down\"></Icon>\r\n        </span>\r\n        <DropdownMenu slot=\"list\">\r\n          <DropdownItem>销售订单</DropdownItem>\r\n          <DropdownItem>销售订单</DropdownItem>\r\n          <DropdownItem>销售订单</DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n      <div class=\"divide\"></div>\r\n      <div class=\"business_item\" style=\"width:50px\">\r\n        <div class=\"left-name\" v-for=\"(item,index) in dataItem\" :key=\"index\">\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"svg_box\" @click=\"outBlur\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n          <defs>\r\n            <filter id=\"f1\" x=\"0\" y=\"0\" width=\"200%\" height=\"200%\">\r\n              <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"0\" dy=\"0\" />\r\n              <feColorMatrix result=\"matrixOut\" in=\"offOut\" type=\"matrix\" values=\"0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0\" />\r\n              <feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"5\" />\r\n              <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\r\n            </filter>\r\n          </defs>\r\n          <defs>\r\n            <marker id=\"arrow\" markerUnits=\"userSpaceOnUse\" markerWidth=\"15\" markerHeight=\"15\" viewBox=\"0 0 15 15\" refX=\"6\" refY=\"6\" orient=\"auto\">\r\n              <path d=\"M2,0 L10,6 L2,12 L6,6 L2,0\" style=\"fill: gray;\" />\r\n            </marker>\r\n          </defs>\r\n          <defs>\r\n            <marker id=\"arrow1\" markerUnits=\"userSpaceOnUse\" markerWidth=\"15\" markerHeight=\"15\" viewBox=\"0 0 15 15\" refX=\"6\" refY=\"6\" orient=\"auto\">\r\n              <path d=\"M2,0 L10,6 L2,12 L6,6 L2,0\" style=\"fill: gray;\" />\r\n            </marker>\r\n          </defs>\r\n          <defs>\r\n            <marker id=\"arrow_hight_color\" markerUnits=\"userSpaceOnUse\" markerWidth=\"15\" markerHeight=\"15\" viewBox=\"0 0 15 15\" refX=\"6\" refY=\"6\" orient=\"auto\">\r\n              <path d=\"M2,0 L10,6 L2,12 L6,6 L2,0\" style=\"fill: red;\" />\r\n            </marker>\r\n          </defs>\r\n          <defs>\r\n            <linearGradient id=\"orange_red\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n              <stop offset=\"0%\" style=\"stop-color:#ffdfd9;stop-opacity:1\" />\r\n              <stop offset=\"100%\" style=\"stop-color:#ff8069 stop-opacity:1\" />\r\n            </linearGradient>\r\n          </defs>\r\n          <g v-for=\"(business,i) in dataItem\" :key=\"i\">\r\n            <g v-for=\"(item,j) in business.child\" :key=\"j\">\r\n\r\n              <image :x=\"40+(baseLength+graphSpace)*item.sort\" :y=\"50+170*i\" :width=\"baseLength\" :height=\"baseLength\" :xlink:href=\"item.icon\" rx='10' v-on:click.stop=\"doAction(item)\">\r\n              </image>\r\n              <!-- 科目与业务节点title -->\r\n\r\n              <a @click=\"redirectTo(item)\" class=\"svg-title-style\">\r\n                <text :x=\"40+baseLength/2+(baseLength+graphSpace)*item.sort\" :y=\"65+baseLength+170*i\">\r\n                  {{item.value}}\r\n                </text>\r\n              </a>\r\n              <!-- 所有待办 -->\r\n              <circle :cx=\"40+(baseLength+graphSpace)*item.sort\" :cy=\"50+170*i\" r=\"12\" stroke-width=\"1\" :fill=\"item.type==='list'?'red':'#2d8cf0'\" v-if=\"(item.listId?item.listId:item.id) in defaultDisplayTask\" />\r\n              <text :x=\"40+(baseLength+graphSpace)*item.sort\" :y=\"45+170*i\" fill=\"#fff\" class=\"svg-text-common-style\" style=\"font-size:12px\" :listId=\"item.type==='subject'?item.id:item.listId\" :taskValue=\"item.value\" @click=\"opentask(item)\">\r\n                {{item.type==='subject'?defaultDisplayTask[item.id]:defaultDisplayTask[item.listId]}}\r\n              </text>\r\n\r\n              <!--  <circle :cx=\"40+baseLength+(baseLength+graphSpace)*j\" :cy=\"item.type==='list'?25+170*i:45+170*i\" r=\"13\" stroke-width=\"1\" fill=\"red\" v-if=\"item.type==='list' && item.notToDo\" />\r\n                    <text :x=\"40+baseLength+(baseLength+graphSpace)*j\" :y=\"item.type==='list'?20+170*i:45+170*i\" fill=\"#fff\" v-if=\"item.type==='list' && item.notToDo\" class=\"svg-text-common-style\">\r\n                      {{item.notToDo}}\r\n                    </text> -->\r\n            </g>\r\n\r\n          </g>\r\n\r\n          <g v-for=\"(point) in pointList\" :key=\"point.id\">\r\n            <polyline :points=\"point.value\" :marker-end=\"waterFlow[point.id]!==undefined?'url(#arrow_hight_color)':'url(#arrow1)'\" v-bind:class=\"waterFlow[point.id]!==undefined?'path':''\" style=\"fill:none;stroke:#ddd;stroke-width:1\" />\r\n          </g>\r\n          <!-- 应用与应用之间的关系 -->\r\n          <g v-for=\"(point) in transTypePointList\" :key=\"point.id\">\r\n            <polyline :points=\"point.value\" class=\"transTypeRel_style\" marker-end='url(#arrow)' />\r\n          </g>\r\n\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    <task-modal :modal='modal' :listId=\"pageListId\" @emitModal=\"emitModal\" :taskValue=\"taskValue\" :type=\"type\"></task-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as ds from \"deepstream.io-client-js\";\r\nimport TaskModal from \"@/components/pulsegraph/TaskModal\";\r\nimport CircularGraph from \"./circularGraph\";\r\nimport {\r\n  getPulseGraph,\r\n  getCurrentUserInfo,\r\n  getAppTaskCount,\r\n  getMockData\r\n} from \"@/services/flowService\";\r\nimport { getToken } from \"@/utils/utils\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      spinShow: true,\r\n      baseLength: 45, //图形大小\r\n      graphSpace: 65, //图形间距\r\n      circleFillColor: \"#646b86\",\r\n      circleBorderColor: \"#e0a527\",\r\n      squareFillColor: \"#00ae9d\",\r\n      squareBorderColor: \"#77b745\",\r\n      isActive: false,\r\n      arr: [],\r\n      title: \"\",\r\n      dataItem: [],\r\n      pointList: [],\r\n      transTypePointList: [], //应用与应用之间得连线\r\n      waterFlow: {},\r\n      flowType: true,\r\n      businessItemWidth: \"50px\",\r\n      ds: ds(\"wss://192.168.3.160:6021/deepstream\"),\r\n      books$$: null,\r\n\r\n      radioGroupLabel: \"mytask\",\r\n      rodioGroupDoOrNot: \"todo\",\r\n      doneortodo: \"todo\",\r\n      taskType: \"mytask\",\r\n\r\n      defaultDisplayTask: {}, //默认显示我的未完成任务\r\n      teamDone: {}, //团队已完成任务\r\n      teamTodo: {}, //团队待办任务\r\n      myDone: {}, //我的已完成任务\r\n      myToDo: {}, //我的未完成任务\r\n      subjectTodo: {}, //科目待办数量\r\n\r\n      modal: false, //弹出框是否显示\r\n      taskValue: \"\",\r\n      pageListId: \"\",\r\n      type: \"myToDo\"\r\n    };\r\n  },\r\n\r\n  components: {\r\n    TaskModal,\r\n    CircularGraph\r\n  },\r\n\r\n  props: [\"caseId\"],\r\n\r\n  methods: {\r\n    draw() {\r\n      let baseLength = this.baseLength;\r\n      let graphSpace = this.graphSpace;\r\n      let data = this.dataItem,\r\n        nodePointXY = {},\r\n        child = [],\r\n        nextChildId,\r\n        preChildId,\r\n        nextRelevantId,\r\n        preRelevantId,\r\n        endNode = [],\r\n        targetTransType = \"\", //当前节点坐标\r\n        smpley = 0, //同一业务类型下不相邻节点线y轴每次+5px\r\n        tempPoint,\r\n        tempX,\r\n        tempY;\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        let y = 170 + 170 * i;\r\n        data[i].point = \"0,\" + y + \" 2100,\" + y;\r\n        if (data[i].child.length > 0) {\r\n          for (let i2 = 0; i2 < data[i].child.length; i2++) {\r\n            this.dataItem[i].child[i2].pointX =\r\n              40 + (baseLength + graphSpace) * data[i].child[i2].sort;\r\n            this.dataItem[i].child[i2].pointY = 50 + baseLength / 2 + 170 * i;\r\n\r\n            nodePointXY[this.dataItem[i].child[i2].id] =\r\n              this.dataItem[i].child[i2].pointX +\r\n              \",\" +\r\n              this.dataItem[i].child[i2].pointY;\r\n\r\n            let childNode = data[i].child[i2];\r\n            if (childNode.teamDone > 0) {\r\n              this.teamDone[childNode.listId] =\r\n                childNode.teamDone > 99 ? \"99+\" : childNode.teamDone;\r\n            }\r\n            if (childNode.teamTodo > 0) {\r\n              this.teamTodo[childNode.listId] =\r\n                childNode.teamTodo > 99 ? \"99+\" : childNode.teamTodo;\r\n            }\r\n            if (childNode.myDone > 0) {\r\n              this.myDone[childNode.listId] =\r\n                childNode.myDone > 99 ? \"99+\" : childNode.myDone;\r\n            }\r\n            if (childNode.myToDo > 0) {\r\n              this.myToDo[childNode.listId] =\r\n                childNode.myToDo > 99 ? \"99+\" : childNode.myToDo;\r\n            }\r\n            if (childNode.subjectTodo > 0) {\r\n              this.subjectTodo[childNode.id] =\r\n                childNode.subjectTodo > 99 ? \"99+\" : childNode.subjectTodo;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      let that = this;\r\n      data.forEach(function(item, itemIndex) {\r\n        item.child.forEach(function(child, childIndex) {\r\n          if (child.relevantNode && child.relevantNode.length > 0) {\r\n            // 构造应用与应用之间关系\r\n            child.relevantNode.forEach(function(relevantNode, relIndex) {\r\n              if (relevantNode.id in nodePointXY) {\r\n                tempPoint = nodePointXY[relevantNode.id].split(\",\");\r\n                tempX = Number(tempPoint[0]);\r\n                tempY = Number(tempPoint[1]);\r\n\r\n                //线条朝上\r\n                if (relevantNode.groupIndex < item.index) {\r\n                  that.transTypePointList.push({\r\n                    id: child.id + \"_\" + relevantNode.id,\r\n                    value:\r\n                      child.pointX +\r\n                      baseLength / 2 +\r\n                      \",\" +\r\n                      (child.pointY - baseLength / 2) +\r\n                      \" \" +\r\n                      (tempX + baseLength / 2) +\r\n                      \",\" +\r\n                      (tempY + baseLength / 2 + 20)\r\n                  });\r\n                } else if (relevantNode.groupIndex > item.index) {\r\n                  //线条朝下\r\n\r\n                  that.transTypePointList.push({\r\n                    id: child.id + \"_\" + relevantNode.id,\r\n                    value:\r\n                      child.pointX +\r\n                      baseLength / 2 +\r\n                      \",\" +\r\n                      (child.pointY + baseLength / 2 + 20) +\r\n                      \" \" +\r\n                      (tempX + baseLength / 2) +\r\n                      \",\" +\r\n                      (tempY - baseLength / 2 - 4.3)\r\n                  });\r\n                } else {\r\n                  if (child.pointX < tempX - 40 - baseLength - graphSpace) {\r\n                    //判断应用是否跨节点\r\n                    that.transTypePointList.push({\r\n                      id: child.id + \"_\" + relevantNode.id,\r\n                      value:\r\n                        child.pointX +\r\n                        baseLength / 2 +\r\n                        \",\" +\r\n                        (child.pointY - baseLength / 2) +\r\n                        \" \" +\r\n                        (child.pointX + baseLength / 2) +\r\n                        \",\" +\r\n                        (child.pointY - baseLength / 2 - 20) +\r\n                        \" \" +\r\n                        (tempX + baseLength / 2) +\r\n                        \",\" +\r\n                        (tempY - baseLength / 2 - 20) +\r\n                        \" \" +\r\n                        (tempX + baseLength / 2) +\r\n                        \",\" +\r\n                        (tempY - baseLength / 2 - 4.3)\r\n                    });\r\n                  } else {\r\n                    that.transTypePointList.push({\r\n                      id: child.id + \"_\" + relevantNode.id,\r\n                      value:\r\n                        child.pointX +\r\n                        baseLength +\r\n                        \",\" +\r\n                        child.pointY +\r\n                        \" \" +\r\n                        (tempX - 4.3) +\r\n                        \",\" +\r\n                        tempY\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          }\r\n\r\n          if (child.endNode && child.endNode.length > 0) {\r\n            child.endNode.forEach(function(endNode, endIndex) {\r\n              if (endNode.id in nodePointXY) {\r\n                tempPoint = nodePointXY[endNode.id].split(\",\");\r\n                tempX = Number(tempPoint[0]);\r\n                tempY = Number(tempPoint[1]);\r\n                //线条朝上\r\n                if (endNode.groupIndex < item.index) {\r\n                  let baseNum =\r\n                    (tempX - child.pointX) / (baseLength + graphSpace) * 8.5;\r\n                  that.pointList.push({\r\n                    id: child.id + \"_\" + endNode.id,\r\n                    value:\r\n                      child.pointX +\r\n                      baseLength / 2 +\r\n                      \",\" +\r\n                      (child.pointY - baseLength / 2) +\r\n                      \" \" +\r\n                      (tempX + baseLength / 2 - baseNum) +\r\n                      \",\" +\r\n                      (tempY + baseLength / 2 + 20)\r\n                  });\r\n                } else if (endNode.groupIndex > item.index) {\r\n                  //线条朝下\r\n                  let baseNum =\r\n                    (tempX - child.pointX) / (baseLength + graphSpace) * 8.5;\r\n                  that.pointList.push({\r\n                    id: child.id + \"_\" + endNode.id,\r\n                    value:\r\n                      child.pointX +\r\n                      baseLength / 2 +\r\n                      \",\" +\r\n                      (child.pointY + baseLength / 2 + 20) +\r\n                      \" \" +\r\n                      (tempX + baseLength / 2 - baseNum) +\r\n                      \",\" +\r\n                      (tempY - baseLength / 2 - 4.3)\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      });\r\n    },\r\n\r\n    //计算svg宽度\r\n\r\n    calcSvgWidth: function(dataItem) {\r\n      let nodeNumber = 0;\r\n      if (dataItem.length > 0) {\r\n        nodeNumber = dataItem[0].child.length;\r\n\r\n        for (let i = 1; i < dataItem.length; i++) {\r\n          if (nodeNumber < dataItem[i].child.length) {\r\n            nodeNumber = dataItem[i].child.length;\r\n          }\r\n        }\r\n      }\r\n      let sreenWidth =\r\n        nodeNumber * (30 + this.baseLength + this.graphSpace) + 50;\r\n      if (document.body.clientWidth > sreenWidth) {\r\n        return document.body.clientWidth;\r\n      } else {\r\n        return sreenWidth;\r\n      }\r\n    },\r\n\r\n    //计算svg宽度\r\n\r\n    calcSvgHeight: function(dataItem) {\r\n      let h = dataItem.length > 0 ? dataItem.length * 171 + 79 : 215;\r\n      if (document.body.clientHeight > h) {\r\n        return document.body.clientHeight;\r\n      } else {\r\n        return h;\r\n      }\r\n    },\r\n\r\n    doAction: function(item, event) {\r\n      this.waterFlow = {};\r\n\r\n      if (item.endNode && item.endNode.length > 0) {\r\n        for (let i = 0; i < item.endNode.length; i++) {\r\n          this.waterFlow[item.id + \"_\" + item.endNode[i].id] = item.endNode[i];\r\n        }\r\n      }\r\n\r\n      if (item.lastNode && item.lastNode.length > 0) {\r\n        for (let j = 0; j < item.lastNode.length; j++) {\r\n          this.waterFlow[item.lastNode[j].id + \"_\" + item.id] =\r\n            item.lastNode[j];\r\n        }\r\n      }\r\n    },\r\n\r\n    outBlur: function(e) {\r\n      this.waterFlow = {};\r\n    },\r\n\r\n    /**\r\n     * 应用链接跳转\r\n     */\r\n    redirectTo: function(item, event) {\r\n      let url = item.url;\r\n      let nr = window.top.document.getElementById(\"frame1\").getAttribute(\"nr\");\r\n      if (item.target === \"_blank\") {\r\n        window.open(item.url, \"_blank\");\r\n      } else {\r\n        if (!nr) {\r\n          if (~url.indexOf(\"outlink\")) {\r\n            url = item.url;\r\n          } else if (~url.indexOf(\"app\")) {\r\n            url = \"appReport/\" + url;\r\n          } else {\r\n            url = \"report/\" + url;\r\n          }\r\n        }\r\n        window.top.postMessage(\r\n          {\r\n            type: \"redirect\",\r\n            url: url\r\n          },\r\n          \"*\"\r\n        );\r\n      }\r\n    },\r\n\r\n    //订阅消息\r\n    subscribeMessage: function() {\r\n      let token = getToken();\r\n      this.ds.event.subscribe(\"taskChange/\" + token, msg => {});\r\n    },\r\n\r\n    radioGroupChange: function(e) {\r\n      this.taskType = e;\r\n      if (this.taskType === \"teamtask\" && this.doneortodo === \"done\") {\r\n        this.type = \"teamDone\";\r\n        this.defaultDisplayTask = this.teamDone;\r\n      } else if (this.taskType === \"teamtask\" && this.doneortodo === \"todo\") {\r\n        this.type = \"teamTodo\";\r\n        this.defaultDisplayTask = this.teamTodo;\r\n      } else if (this.taskType === \"mytask\" && this.doneortodo === \"done\") {\r\n        this.type = \"myDone\";\r\n        this.defaultDisplayTask = this.myDone;\r\n      } else if (this.taskType === \"mytask\" && this.doneortodo === \"todo\") {\r\n        this.type = \"myToDo\";\r\n        this.defaultDisplayTask = this.myToDo;\r\n      }\r\n      this.defaultDisplayTask = Object.assign(\r\n        this.defaultDisplayTask,\r\n        this.subjectTodo\r\n      );\r\n    },\r\n\r\n    radioGroupChangeDoneOrTodo: function(e) {\r\n      this.doneortodo = e;\r\n      if (this.taskType === \"teamtask\" && this.doneortodo === \"done\") {\r\n        this.type = \"teamDone\";\r\n        this.defaultDisplayTask = this.teamDone;\r\n      } else if (this.taskType === \"teamtask\" && this.doneortodo === \"todo\") {\r\n        this.type = \"teamTodo\";\r\n        this.defaultDisplayTask = this.teamTodo;\r\n      } else if (this.taskType === \"mytask\" && this.doneortodo === \"done\") {\r\n        this.type = \"myDone\";\r\n        this.defaultDisplayTask = this.myDone;\r\n      } else if (this.taskType === \"mytask\" && this.doneortodo === \"todo\") {\r\n        this.type = \"myToDo\";\r\n        this.defaultDisplayTask = this.myToDo;\r\n      }\r\n      this.defaultDisplayTask = Object.assign(\r\n        this.defaultDisplayTask,\r\n        this.subjectTodo\r\n      );\r\n    },\r\n\r\n    /**\r\n     * 查看待办任务\r\n     */\r\n    opentask(item) {\r\n      if (item.type === \"subject\") {\r\n        this.redirectTo(item, event);\r\n      } else {\r\n        this.modal = true;\r\n\r\n        this.pageListId = event.target.getAttribute(\"listId\");\r\n        this.taskValue = event.target.getAttribute(\"taskValue\");\r\n      }\r\n    },\r\n\r\n    //监听弹出框返回得状态值\r\n    emitModal(val, e) {\r\n      this.pageListId = val.listId;\r\n      this.modal = false;\r\n    },\r\n\r\n    /**\r\n     * 分页加载\r\n     */\r\n    changeCurrentPage(currentPage) {\r\n      let params = {\r\n        type: this.type,\r\n        page: currentPage,\r\n        listId: this.pageListId,\r\n        limit: this.pageSize\r\n      };\r\n      this.loading = true;\r\n      getAppTaskCount(params).then(res => {\r\n        if (res.tableContent.length > 0) {\r\n          this.columnData = res.tableContent;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  created() {\r\n    var that = this;\r\n    let currentUser = this.$currentUser;\r\n    let username = [currentUser.nickname, currentUser.userId].join(\"|\");\r\n    let token = getToken();\r\n    that.ds.login(\r\n      {\r\n        token: token,\r\n        username: username\r\n      },\r\n      data => {\r\n        console.log(\"connect success!\");\r\n      }\r\n    );\r\n\r\n    this.subscribeMessage();\r\n  },\r\n  mounted() {\r\n    var that = this;\r\n    getPulseGraph(this.caseId)\r\n      .then(res => {\r\n        var getSubjectIicon = function(subjectName) {\r\n          var icon = \"\";\r\n          var subjectList = [\r\n            { name: \"计划\", icon: \"plan.png\" },\r\n            { name: \"需求\", icon: \"requirement.png\" },\r\n            { name: \"领料\", icon: \"collar-material.png\" },\r\n            { name: \"结项\", icon: \"check.png\" },\r\n            { name: \"验收\", icon: \"check.png\" },\r\n            { name: \"交付\", icon: \"pay.png\" },\r\n            { name: \"存货\", icon: \"stock.png\" },\r\n            { name: \"毛利\", icon: \"gross-profit.png\" },\r\n            { name: \"开票\", icon: \"open-ticket.png\" },\r\n            { name: \"收票\", icon: \"put-ticket.png\" },\r\n            { name: \"资金\", icon: \"fund.png\" },\r\n            { name: \"往来\", icon: \"dealings.png\" },\r\n            { name: \"设施\", icon: \"facilities.png\" },\r\n            { name: \"费用\", icon: \"cost-sub.png\" },\r\n            { name: \"税支\", icon: \"taxexpenditure.png\" },\r\n            { name: \"待收票\", icon: \"put-ticket.png\" },\r\n            { name: \"待开票\", icon: \"open-ticket.png\" },\r\n            { name: \"期间费用\", icon: \"cost-sub.png\" },\r\n            { name: \"企业利润\", icon: \"business-profit.png\" },\r\n            { name: \"待计划\", icon: \"plan.png\" },\r\n            { name: \"待下单\", icon: \"requirement.png\" },\r\n            { name: \"待领料\", icon: \"collar-material.png\" },\r\n            { name: \"待验收\", icon: \"check.png\" },\r\n            { name: \"待交付\", icon: \"pay.png\" },\r\n            { name: \"往来余额\", icon: \"dealings.png\" },\r\n            { name: \"货币资金\", icon: \"putmoney.png\" }\r\n          ];\r\n\r\n          subjectList.map(s => {\r\n            if (s.name === subjectName) {\r\n              icon = s.icon;\r\n            }\r\n          });\r\n\r\n          return icon;\r\n        };\r\n        res.dataItem.map(d => {\r\n          if (d.child) {\r\n            d.child.map(c => {\r\n              var subjectList = [\"\", \"\", \"\"];\r\n              if (c.type === \"subject\" && c.value) {\r\n                c.icon = \"resources/images/icon/\" + getSubjectIicon(c.value);\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n        that.title = res.title;\r\n        that.dataItem = res.dataItem;\r\n\r\n        let calcSvgWidth =\r\n          that.calcSvgWidth(res.dataItem) > 1400\r\n            ? that.calcSvgWidth(res.dataItem)\r\n            : 1400;\r\n        let calcSvgHeight = that.calcSvgHeight(res.dataItem);\r\n        if (window.document.getElementById(\"flow-box\")) {\r\n          window.document.getElementById(\"flow-box\").style.width =\r\n            calcSvgWidth + \"px\";\r\n          window.document.getElementById(\"flow-box\").style.height =\r\n            calcSvgHeight + \"px\";\r\n\r\n          that.draw();\r\n          this.defaultDisplayTask = Object.assign(\r\n            this.myToDo,\r\n            this.subjectTodo\r\n          );\r\n          that.spinShow = false;\r\n        }\r\n      })\r\n      .catch(error => {\r\n        let me = this;\r\n        const title = \"提示\";\r\n        const content = \"<p>\" + error + \"</p>\";\r\n        me.$Modal.error({\r\n          title: title,\r\n          content: content,\r\n          closable: true\r\n        });\r\n      });\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@bg: #3e96ae;\r\n@bg-text-color: #000;\r\n@borderColor: #dddee1;\r\n\r\n.bg_white {\r\n  background-color: white;\r\n}\r\n\r\n.flow_container {\r\n  min-width: 1020px;\r\n  overflow-x: scroll;\r\n}\r\n\r\n.right_container {\r\n  position: relative;\r\n  margin: auto 0px;\r\n  overflow: auto;\r\n  min-height: 509px;\r\n  margin-left: 1px;\r\n  border-left: 1px solid #9e9e9e57;\r\n}\r\n\r\n#flow-box {\r\n  background-color: #ffffff;\r\n}\r\n\r\n.switch-box {\r\n  position: relative;\r\n  height: 45px;\r\n  line-height: 45px;\r\n  width: 100%;\r\n  padding: 0px 20px;\r\n  border-bottom: 1px solid @borderColor;\r\n  span:first-child {\r\n    width: 70px;\r\n  }\r\n  .ivu-switch-large.ivu-switch-checked:after {\r\n    left: 46px;\r\n  }\r\n}\r\n.ivu-tabs-bar {\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.vertical-divide {\r\n  height: 20px;\r\n  vertical-align: middle;\r\n  display: inline-block;\r\n  width: 1px;\r\n  border-left: 1px solid @borderColor;\r\n  margin-right: 8px;\r\n}\r\n\r\n.divide {\r\n  height: 1px;\r\n  background-color: @borderColor;\r\n}\r\n.taskbtn {\r\n  position: fixed;\r\n  top: 10px;\r\n  z-index: 999;\r\n}\r\n\r\n.taskbtn_1 {\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 200px;\r\n  z-index: 999;\r\n}\r\n\r\n.taskbtn_2 {\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 380px;\r\n  z-index: 999;\r\n}\r\n\r\n.taskbtn_3 {\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 480px;\r\n  z-index: 999;\r\n}\r\n\r\n.main-flow {\r\n  display: table;\r\n  width: 100%;\r\n  table-layout: fixed;\r\n  border: 1px solid @borderColor;\r\n  margin-top: 10px;\r\n}\r\n\r\n.business_item {\r\n  display: table-cell;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.image-style {\r\n  border-radius: 5px;\r\n}\r\n\r\n.left-name {\r\n  padding: 15px;\r\n  height: 170px;\r\n  // border-right: 1px solid @borderColor;\r\n  // border-bottom: 1px solid @borderColor;\r\n  // background-color: @bg;\r\n  // text-align: center;\r\n  span {\r\n    font-size: 18px;\r\n    height: 100%;\r\n    color: @bg-text-color;\r\n    writing-mode: tb-rl;\r\n  }\r\n}\r\n\r\n.svg_box {\r\n  // border-bottom: 1px solid @borderColor;\r\n  display: table-cell;\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  svg {\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    overflow: hidden;\r\n    left: 0;\r\n  }\r\n}\r\n\r\n.svg-image-style-opacity {\r\n  opacity: 0.2;\r\n}\r\n\r\n.svg-image-style:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.svg-title-style {\r\n  text-anchor: middle;\r\n  baseline-shift: sub;\r\n  font-size: 12px;\r\n  font-family: sans-serif;\r\n  fill: #000;\r\n  font-size: 13px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.svg-title-style-default {\r\n  text-anchor: middle;\r\n  baseline-shift: sub;\r\n  font-size: 12px;\r\n  font-family: sans-serif;\r\n  fill: #2d8cf0;\r\n  font-size: 13px;\r\n  cursor: default;\r\n  font-weight: bold;\r\n}\r\n\r\n.svg-title-style:hover {\r\n  fill: red;\r\n}\r\n\r\n.svg-text-common-style {\r\n  text-anchor: middle;\r\n  baseline-shift: sub;\r\n  font-size: 5px;\r\n  font-family: sans-serif;\r\n}\r\n\r\n.svg-text-common-style:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.path {\r\n  stroke-dasharray: 10;\r\n  stroke: rgb(253, 7, 7) !important;\r\n  stroke-width: 2px !important;\r\n  animation: dash 2s linear 0s infinite;\r\n}\r\n\r\n@keyframes dash {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.transTypeRel_style {\r\n  fill: none;\r\n  stroke: #ddd;\r\n  stroke-width: 1;\r\n  // stroke-dasharray: 2;\r\n}\r\n\r\n.vertical-center-modal {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .ivu-modal {\r\n    top: 0;\r\n  }\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/flow/pulseGraph.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flow_container right_container\"},[(_vm.spinShow)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}}):_vm._e(),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"flow-box\"}},[_c('RadioGroup',{staticClass:\"taskbtn\",attrs:{\"size\":\"large\"},on:{\"on-change\":_vm.radioGroupChange},model:{value:(_vm.radioGroupLabel),callback:function ($$v) {_vm.radioGroupLabel=$$v},expression:\"radioGroupLabel\"}},[_c('Radio',{attrs:{\"label\":\"mytask\"}},[_c('span',[_vm._v(\"我的任务\")])]),_vm._v(\" \"),_c('Radio',{attrs:{\"label\":\"teamtask\"}},[_c('span',[_vm._v(\"团队任务\")])]),_vm._v(\" \"),_c('i',{staticClass:\"vertical-divide\"})],1),_vm._v(\" \"),_c('RadioGroup',{staticClass:\"taskbtn_1\",attrs:{\"size\":\"large\"},on:{\"on-change\":_vm.radioGroupChangeDoneOrTodo},model:{value:(_vm.rodioGroupDoOrNot),callback:function ($$v) {_vm.rodioGroupDoOrNot=$$v},expression:\"rodioGroupDoOrNot\"}},[_c('Radio',{attrs:{\"label\":\"todo\"}},[_c('span',[_vm._v(\"未完成\")])]),_vm._v(\" \"),_c('Radio',{attrs:{\"label\":\"done\"}},[_c('span',[_vm._v(\"已完成\")])]),_vm._v(\" \"),_c('i',{staticClass:\"vertical-divide\"})],1),_vm._v(\" \"),_c('RadioGroup',{staticClass:\"taskbtn_2\",attrs:{\"size\":\"large\"}},[_c('Radio',{attrs:{\"label\":\"no-overdue\"}},[_c('span',[_vm._v(\"未逾期\")])]),_vm._v(\" \"),_c('Radio',{attrs:{\"label\":\"overdue \"}},[_c('span',[_vm._v(\"逾期\")])]),_vm._v(\" \"),_c('i',{staticClass:\"vertical-divide\"})],1),_vm._v(\" \"),_c('Dropdown',{staticStyle:{\"position\":\"fixed\",\"top\":\"10px\",\"left\":\"540px\",\"z-index\":\"999\",\"font-size\":\"14px\"}},[_c('span',[_vm._v(\"\\n        项目立项\\n        \"),_c('Icon',{attrs:{\"type\":\"ios-arrow-down\"}})],1),_vm._v(\" \"),_c('DropdownMenu',{attrs:{\"slot\":\"list\"},slot:\"list\"},[_c('DropdownItem',[_vm._v(\"项目立项1\")]),_vm._v(\" \"),_c('DropdownItem',[_vm._v(\"项目立项1\")]),_vm._v(\" \"),_c('DropdownItem',[_vm._v(\"项目立项1\")])],1)],1),_vm._v(\" \"),_c('Dropdown',{staticStyle:{\"position\":\"fixed\",\"top\":\"10px\",\"left\":\"630px\",\"z-index\":\"999\",\"font-size\":\"14px\"}},[_c('span',[_vm._v(\"\\n        销售订单\\n        \"),_c('Icon',{attrs:{\"type\":\"ios-arrow-down\"}})],1),_vm._v(\" \"),_c('DropdownMenu',{attrs:{\"slot\":\"list\"},slot:\"list\"},[_c('DropdownItem',[_vm._v(\"销售订单\")]),_vm._v(\" \"),_c('DropdownItem',[_vm._v(\"销售订单\")]),_vm._v(\" \"),_c('DropdownItem',[_vm._v(\"销售订单\")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"divide\"}),_vm._v(\" \"),_c('div',{staticClass:\"business_item\",staticStyle:{\"width\":\"50px\"}},_vm._l((_vm.dataItem),function(item,index){return _c('div',{key:index,staticClass:\"left-name\"},[_c('span')])})),_vm._v(\" \"),_c('div',{staticClass:\"svg_box\",on:{\"click\":_vm.outBlur}},[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"version\":\"1.1\"}},[_c('defs',[_c('filter',{attrs:{\"id\":\"f1\",\"x\":\"0\",\"y\":\"0\",\"width\":\"200%\",\"height\":\"200%\"}},[_c('feOffset',{attrs:{\"result\":\"offOut\",\"in\":\"SourceGraphic\",\"dx\":\"0\",\"dy\":\"0\"}}),_vm._v(\" \"),_c('feColorMatrix',{attrs:{\"result\":\"matrixOut\",\"in\":\"offOut\",\"type\":\"matrix\",\"values\":\"0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0\"}}),_vm._v(\" \"),_c('feGaussianBlur',{attrs:{\"result\":\"blurOut\",\"in\":\"matrixOut\",\"stdDeviation\":\"5\"}}),_vm._v(\" \"),_c('feBlend',{attrs:{\"in\":\"SourceGraphic\",\"in2\":\"blurOut\",\"mode\":\"normal\"}})],1)]),_vm._v(\" \"),_c('defs',[_c('marker',{attrs:{\"id\":\"arrow\",\"markerUnits\":\"userSpaceOnUse\",\"markerWidth\":\"15\",\"markerHeight\":\"15\",\"viewBox\":\"0 0 15 15\",\"refX\":\"6\",\"refY\":\"6\",\"orient\":\"auto\"}},[_c('path',{staticStyle:{\"fill\":\"gray\"},attrs:{\"d\":\"M2,0 L10,6 L2,12 L6,6 L2,0\"}})])]),_vm._v(\" \"),_c('defs',[_c('marker',{attrs:{\"id\":\"arrow1\",\"markerUnits\":\"userSpaceOnUse\",\"markerWidth\":\"15\",\"markerHeight\":\"15\",\"viewBox\":\"0 0 15 15\",\"refX\":\"6\",\"refY\":\"6\",\"orient\":\"auto\"}},[_c('path',{staticStyle:{\"fill\":\"gray\"},attrs:{\"d\":\"M2,0 L10,6 L2,12 L6,6 L2,0\"}})])]),_vm._v(\" \"),_c('defs',[_c('marker',{attrs:{\"id\":\"arrow_hight_color\",\"markerUnits\":\"userSpaceOnUse\",\"markerWidth\":\"15\",\"markerHeight\":\"15\",\"viewBox\":\"0 0 15 15\",\"refX\":\"6\",\"refY\":\"6\",\"orient\":\"auto\"}},[_c('path',{staticStyle:{\"fill\":\"red\"},attrs:{\"d\":\"M2,0 L10,6 L2,12 L6,6 L2,0\"}})])]),_vm._v(\" \"),_c('defs',[_c('linearGradient',{attrs:{\"id\":\"orange_red\",\"x1\":\"0%\",\"y1\":\"0%\",\"x2\":\"0%\",\"y2\":\"100%\"}},[_c('stop',{staticStyle:{\"stop-color\":\"#ffdfd9\",\"stop-opacity\":\"1\"},attrs:{\"offset\":\"0%\"}}),_vm._v(\" \"),_c('stop',{staticStyle:{\"stop-color\":\"#ff8069 stop-opacity:1\"},attrs:{\"offset\":\"100%\"}})],1)],1),_vm._v(\" \"),_vm._l((_vm.dataItem),function(business,i){return _c('g',{key:i},_vm._l((business.child),function(item,j){return _c('g',{key:j},[_c('image',{attrs:{\"x\":40+(_vm.baseLength+_vm.graphSpace)*item.sort,\"y\":50+170*i,\"width\":_vm.baseLength,\"height\":_vm.baseLength,\"xlink:href\":item.icon,\"rx\":\"10\"},on:{\"click\":function($event){$event.stopPropagation();_vm.doAction(item)}}}),_vm._v(\" \"),_c('a',{staticClass:\"svg-title-style\",on:{\"click\":function($event){_vm.redirectTo(item)}}},[_c('text',{attrs:{\"x\":40+_vm.baseLength/2+(_vm.baseLength+_vm.graphSpace)*item.sort,\"y\":65+_vm.baseLength+170*i}},[_vm._v(\"\\n                \"+_vm._s(item.value)+\"\\n              \")])]),_vm._v(\" \"),((item.listId?item.listId:item.id) in _vm.defaultDisplayTask)?_c('circle',{attrs:{\"cx\":40+(_vm.baseLength+_vm.graphSpace)*item.sort,\"cy\":50+170*i,\"r\":\"12\",\"stroke-width\":\"1\",\"fill\":item.type==='list'?'red':'#2d8cf0'}}):_vm._e(),_vm._v(\" \"),_c('text',{staticClass:\"svg-text-common-style\",staticStyle:{\"font-size\":\"12px\"},attrs:{\"x\":40+(_vm.baseLength+_vm.graphSpace)*item.sort,\"y\":45+170*i,\"fill\":\"#fff\",\"listId\":item.type==='subject'?item.id:item.listId,\"taskValue\":item.value},on:{\"click\":function($event){_vm.opentask(item)}}},[_vm._v(\"\\n              \"+_vm._s(item.type==='subject'?_vm.defaultDisplayTask[item.id]:_vm.defaultDisplayTask[item.listId])+\"\\n            \")])])}))}),_vm._v(\" \"),_vm._l((_vm.pointList),function(point){return _c('g',{key:point.id},[_c('polyline',{class:_vm.waterFlow[point.id]!==undefined?'path':'',staticStyle:{\"fill\":\"none\",\"stroke\":\"#ddd\",\"stroke-width\":\"1\"},attrs:{\"points\":point.value,\"marker-end\":_vm.waterFlow[point.id]!==undefined?'url(#arrow_hight_color)':'url(#arrow1)'}})])}),_vm._v(\" \"),_vm._l((_vm.transTypePointList),function(point){return _c('g',{key:point.id},[_c('polyline',{staticClass:\"transTypeRel_style\",attrs:{\"points\":point.value,\"marker-end\":\"url(#arrow)\"}})])})],2)])],1),_vm._v(\" \"),_c('task-modal',{attrs:{\"modal\":_vm.modal,\"listId\":_vm.pageListId,\"taskValue\":_vm.taskValue,\"type\":_vm.type},on:{\"emitModal\":_vm.emitModal}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-9d2c4282\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/.13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/views/flow/pulseGraph.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/.3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-9d2c4282\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=styles&index=0!./pulseGraph.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/.13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./pulseGraph.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./pulseGraph.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/.13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-9d2c4282\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=template&index=0!./pulseGraph.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/flow/pulseGraph.vue\n// module id = null\n// module chunks = ","'use strict';\n\nvar C = require('./constants/constants');\nvar MS = require('./constants/merge-strategies');\nvar Emitter = require('component-emitter2');\nvar Connection = require('./message/connection');\nvar EventHandler = require('./event/event-handler');\nvar RpcHandler = require('./rpc/rpc-handler');\nvar RecordHandler = require('./record/record-handler');\nvar PresenceHandler = require('./presence/presence-handler');\nvar defaultOptions = require('./default-options');\nvar AckTimeoutRegistry = require('./utils/ack-timeout-registry');\n\n/**\n * deepstream.io javascript client\n *\n * @copyright 2016 deepstreamHub GmbH\n * @author deepstreamHub GmbH\n *\n *\n * @{@link http://deepstream.io}\n *\n *\n * @param {String} url     URL to connect to. The protocol can be ommited, e.g. <host>:<port>.\n * @param {Object} options A map of options that extend the ones specified in default-options.js\n *\n * @public\n * @constructor\n */\nvar Client = function Client(url, options) {\n  this._url = url;\n  this._options = this._getOptions(options || {});\n\n  this._connection = new Connection(this, this._url, this._options);\n  this._ackTimeoutRegistry = new AckTimeoutRegistry(this, this._options);\n\n  this.event = new EventHandler(this._options, this._connection, this);\n  this.rpc = new RpcHandler(this._options, this._connection, this);\n  this.record = new RecordHandler(this._options, this._connection, this);\n  this.presence = new PresenceHandler(this._options, this._connection, this);\n\n  this._messageCallbacks = {};\n  this._messageCallbacks[C.TOPIC.EVENT] = this.event._$handle.bind(this.event);\n  this._messageCallbacks[C.TOPIC.RPC] = this.rpc._$handle.bind(this.rpc);\n  this._messageCallbacks[C.TOPIC.RECORD] = this.record._$handle.bind(this.record);\n  this._messageCallbacks[C.TOPIC.PRESENCE] = this.presence._$handle.bind(this.presence);\n  this._messageCallbacks[C.TOPIC.ERROR] = this._onErrorMessage.bind(this);\n};\n\nEmitter(Client.prototype); // eslint-disable-line\n\n/**\n * Send authentication parameters to the client to fully open\n * the connection.\n *\n * Please note: Authentication parameters are send over an already established\n * connection, rather than appended to the server URL. This means the parameters\n * will be encrypted when used with a WSS / HTTPS connection. If the deepstream server\n * on the other side has message logging enabled it will however be written to the logs in\n * plain text. If additional security is a requirement it might therefor make sense to hash\n * the password on the client.\n *\n * If the connection is not yet established the authentication parameter will be\n * stored and send once it becomes available\n *\n * authParams can be any JSON serializable data structure and its up for the\n * permission handler on the server to make sense of them, although something\n * like { username: 'someName', password: 'somePass' } will probably make the most sense.\n *\n * login can be called multiple times until either the connection is authenticated or\n * forcefully closed by the server since its maxAuthAttempts threshold has been exceeded\n *\n * @param   {Object}   authParams JSON.serializable authentication data\n * @param   {Function} callback   Will be called with either (true) or (false, data)\n *\n * @public\n * @returns {Client}\n */\nClient.prototype.login = function (authParamsOrCallback, callback) {\n  if (typeof authParamsOrCallback === 'function') {\n    this._connection.authenticate({}, authParamsOrCallback);\n  } else {\n    this._connection.authenticate(authParamsOrCallback || {}, callback);\n  }\n  return this;\n};\n\n/**\n * Closes the connection to the server.\n *\n * @public\n * @returns {void}\n */\nClient.prototype.close = function () {\n  this._connection.close();\n};\n\n/**\n * Returns the current state of the connection.\n *\n * connectionState is one of CONSTANTS.CONNECTION_STATE\n *\n * @returns {[type]} [description]\n */\nClient.prototype.getConnectionState = function () {\n  return this._connection.getState();\n};\n\n/**\n * Returns a random string. The first block of characters\n * is a timestamp, in order to allow databases to optimize for semi-\n * sequentuel numberings\n *\n * @public\n * @returns {String} unique id\n */\nClient.prototype.getUid = function () {\n  var timestamp = new Date().getTime().toString(36);\n  var randomString = (Math.random() * 10000000000000000).toString(36).replace('.', '');\n\n  return timestamp + '-' + randomString;\n};\n\n/**\n * Package private ack timeout registry. This is how all classes can get access to\n * register timeouts.\n * (Well... that's the intention anyways)\n *\n * @package private\n * @returns {AckTimeoutRegistry}\n */\nClient.prototype._$getAckTimeoutRegistry = function () {\n  return this._ackTimeoutRegistry;\n};\n\n/**\n * Package private callback for parsed incoming messages. Will be invoked\n * by the connection class\n *\n * @param   {Object} message parsed deepstream message\n *\n * @package private\n * @returns {void}\n */\nClient.prototype._$onMessage = function (message) {\n  if (this._messageCallbacks[message.topic]) {\n    this._messageCallbacks[message.topic](message);\n  } else {\n    message.processedError = true;\n    this._$onError(message.topic, C.EVENT.MESSAGE_PARSE_ERROR, 'Received message for unknown topic ' + message.topic);\n  }\n\n  if (message.action === C.ACTIONS.ERROR && !message.processedError) {\n    this._$onError(message.topic, message.data[0], message.data.slice(0));\n  }\n};\n\n/**\n * Package private error callback. This is the single point at which\n * errors are thrown in the client. (Well... that's the intention anyways)\n *\n * The expectations would be for implementations to subscribe\n * to the client's error event to prevent errors from being thrown\n * and then decide based on the event and topic parameters how\n * to handle the errors\n *\n * IMPORTANT: Errors that are specific to a request, e.g. a RPC\n * timing out or a record not being permissioned are passed directly\n * to the method that requested them\n *\n * @param   {String} topic One of CONSTANTS.TOPIC\n * @param   {String} event One of CONSTANTS.EVENT\n * @param   {String} msg   Error dependent message\n *\n * @package private\n * @returns {void}\n */\nClient.prototype._$onError = function (topic, event, msg) {\n  var errorMsg = void 0;\n\n  /*\n   * Help to diagnose the problem quicker by checking for\n   * some common problems\n   */\n  if (event === C.EVENT.ACK_TIMEOUT || event === C.EVENT.RESPONSE_TIMEOUT) {\n    if (this.getConnectionState() === C.CONNECTION_STATE.AWAITING_AUTHENTICATION) {\n      errorMsg = 'Your message timed out because you\\'re not authenticated. Have you called login()?';\n      setTimeout(this._$onError.bind(this, C.EVENT.NOT_AUTHENTICATED, C.TOPIC.ERROR, errorMsg), 1);\n    }\n  }\n\n  if (this.hasListeners('error')) {\n    this.emit('error', msg, event, topic);\n    this.emit(event, topic, msg);\n  } else {\n    console.log('--- You can catch all deepstream errors by subscribing to the error event ---');\n\n    errorMsg = event + ': ' + msg;\n\n    if (topic) {\n      errorMsg += ' (' + topic + ')';\n    }\n\n    throw new Error(errorMsg);\n  }\n};\n\n/**\n * Passes generic messages from the error topic\n * to the _$onError handler\n *\n * @param {Object} errorMessage parsed deepstream error message\n *\n * @private\n * @returns {void}\n */\nClient.prototype._onErrorMessage = function (errorMessage) {\n  this._$onError(errorMessage.topic, errorMessage.data[0], errorMessage.data[1]);\n};\n\n/**\n * Creates a new options map by extending default\n * options with the passed in options\n *\n * @param   {Object} options The user specified client configuration options\n *\n * @private\n * @returns {Object}  merged options\n */\nClient.prototype._getOptions = function (options) {\n  var mergedOptions = {};\n\n  for (var key in defaultOptions) {\n    if (typeof options[key] === 'undefined') {\n      mergedOptions[key] = defaultOptions[key];\n    } else {\n      mergedOptions[key] = options[key];\n    }\n  }\n\n  return mergedOptions;\n};\n\n/**\n * Exports factory function to adjust to the current JS style of\n * disliking 'new' :-)\n *\n * @param {String} url     URL to connect to. The protocol can be ommited, e.g. <host>:<port>.\n * @param {Object} options A map of options that extend the ones specified in default-options.js\n *\n * @public\n * @returns {void}\n */\nfunction createDeepstream(url, options) {\n  return new Client(url, options);\n}\n\n/**\n * Expose constants to allow consumers to access them\n*/\nClient.prototype.CONSTANTS = C;\ncreateDeepstream.CONSTANTS = C;\n\n/**\n * Expose merge strategies to allow consumers to access them\n*/\nClient.prototype.MERGE_STRATEGIES = MS;\ncreateDeepstream.MERGE_STRATEGIES = MS;\n\nmodule.exports = createDeepstream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/client.js\n// module id = maeH\n// module chunks = 5 6","'use strict';\n\nvar C = require('../constants/constants');\nvar EventEmitter = require('component-emitter2');\n\n/**\n * Subscriptions to events are in a pending state until deepstream acknowledges\n * them. This is a pattern that's used by numerour classes. This registry aims\n * to centralise the functionality necessary to keep track of subscriptions and\n * their respective timeouts.\n *\n * @param {Client} client          The deepstream client\n * @param {String} topic           Constant. One of C.TOPIC\n * @param {Number} timeoutDuration The duration of the timeout in milliseconds\n *\n * @extends {EventEmitter}\n * @constructor\n */\nvar AckTimeoutRegistry = function AckTimeoutRegistry(client, options) {\n  this._options = options;\n  this._client = client;\n  this._register = {};\n  this._counter = 1;\n  client.on('connectionStateChanged', this._onConnectionStateChanged.bind(this));\n};\n\nEventEmitter(AckTimeoutRegistry.prototype); // eslint-disable-line\n\n/**\n * Add an entry\n *\n * @param {String} name An identifier for the subscription, e.g. a record name or an event name.\n *\n * @public\n * @returns {Number} The timeout identifier\n */\nAckTimeoutRegistry.prototype.add = function (timeout) {\n  var timeoutDuration = timeout.timeout || this._options.subscriptionTimeout;\n\n  if (this._client.getConnectionState() !== C.CONNECTION_STATE.OPEN || timeoutDuration < 1) {\n    return -1;\n  }\n\n  this.remove(timeout);\n  timeout.ackId = this._counter++;\n  timeout.event = timeout.event || C.EVENT.ACK_TIMEOUT;\n  timeout.__timeout = setTimeout(this._onTimeout.bind(this, timeout), timeoutDuration);\n  this._register[this._getUniqueName(timeout)] = timeout;\n  return timeout.ackId;\n};\n\n/**\n * Remove an entry\n *\n * @param {String} name An identifier for the subscription, e.g. a record name or an event name.\n *\n * @public\n * @returns {void}\n */\nAckTimeoutRegistry.prototype.remove = function (timeout) {\n  if (timeout.ackId) {\n    for (var uniqueName in this._register) {\n      if (timeout.ackId === this._register[uniqueName].ackId) {\n        this.clear({\n          topic: this._register[uniqueName].topic,\n          action: this._register[uniqueName].action,\n          data: [this._register[uniqueName].name]\n        });\n      }\n    }\n  }\n\n  if (this._register[this._getUniqueName(timeout)]) {\n    this.clear({\n      topic: timeout.topic,\n      action: timeout.action,\n      data: [timeout.name]\n    });\n  }\n};\n\n/**\n * Processes an incoming ACK-message and removes the corresponding subscription\n *\n * @param   {Object} message A parsed deepstream ACK message\n *\n * @public\n * @returns {void}\n */\nAckTimeoutRegistry.prototype.clear = function (message) {\n  var uniqueName = void 0;\n  if (message.action === C.ACTIONS.ACK && message.data.length > 1) {\n    uniqueName = message.topic + message.data[0] + (message.data[1] ? message.data[1] : '');\n  } else {\n    uniqueName = message.topic + message.action + message.data[0];\n  }\n\n  if (this._register[uniqueName]) {\n    clearTimeout(this._register[uniqueName].__timeout);\n  }\n\n  delete this._register[uniqueName];\n};\n\n/**\n * Will be invoked if the timeout has occured before the ack message was received\n *\n * @param {Object} name The timeout object registered\n *\n * @private\n * @returns {void}\n */\nAckTimeoutRegistry.prototype._onTimeout = function (timeout) {\n  delete this._register[this._getUniqueName(timeout)];\n\n  if (timeout.callback) {\n    delete timeout.__timeout;\n    delete timeout.timeout;\n    timeout.callback(timeout);\n  } else {\n    var msg = 'No ACK message received in time' + (timeout.name ? ' for ' + timeout.name : '');\n    this._client._$onError(timeout.topic, timeout.event, msg);\n  }\n};\n\n/**\n * Returns a unique name from the timeout\n *\n * @private\n * @returns {void}\n */\nAckTimeoutRegistry.prototype._getUniqueName = function (timeout) {\n  return timeout.topic + timeout.action + (timeout.name ? timeout.name : '');\n};\n\n/**\n * Remote all timeouts when connection disconnects\n *\n * @private\n * @returns {void}\n */\nAckTimeoutRegistry.prototype._onConnectionStateChanged = function (connectionState) {\n  if (connectionState !== C.CONNECTION_STATE.OPEN) {\n    for (var uniqueName in this._register) {\n      clearTimeout(this._register[uniqueName].__timeout);\n    }\n  }\n};\n\nmodule.exports = AckTimeoutRegistry;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/utils/ack-timeout-registry.js\n// module id = mmev\n// module chunks = 5 6","'use strict';\n\nvar MERGE_STRATEGIES = require('./constants/merge-strategies');\n\nmodule.exports = {\n  /**\n   * @param {Number} heartBeatInterval           How often you expect the heartbeat to be sent.\n   *                                             If two heatbeats are missed in a row the client\n   *                                             will consider the server to have disconnected\n   *                                             and will close the connection in order to\n   *                                             establish a new one.\n   */\n  heartbeatInterval: 30000,\n\n  /**\n   * @param {Number} reconnectIntervalIncrement  Specifies the number of milliseconds by\n   *                                             which the time until the next reconnection\n   *                                             attempt will be incremented after every\n   *                                             unsuccesful attempt.\n   *                                             E.g. for 1500: if the connection is lost,\n   *                                             the client will attempt to reconnect immediatly,\n   *                                             if that fails it will try again after 1.5 seconds,\n   *                                             if that fails it will try again after 3 seconds\n   *                                             and so on\n   */\n  reconnectIntervalIncrement: 4000,\n\n  /**\n   * @param {Number} maxReconnectInterval        Specifies the maximum number of milliseconds for\n   *                                             the reconnectIntervalIncrement\n   *                                             The amount of reconnections will reach this value\n   *                                             then reconnectIntervalIncrement will be ignored.\n   */\n  maxReconnectInterval: 180000,\n\n  /**\n   * @param {Number} maxReconnectAttempts        The number of reconnection attempts until the\n   *                                             client gives up and declares the connection closed\n   */\n  maxReconnectAttempts: 5,\n\n  /**\n   * @param {Number} rpcAckTimeout               The number of milliseconds after which a rpc will\n   *                                             create an error if no Ack-message has been received\n   */\n  rpcAckTimeout: 6000,\n\n  /**\n   * @param {Number} rpcResponseTimeout          The number of milliseconds after which a rpc will\n   *                                             create an error if no response-message has been\n   *                                             received\n   */\n  rpcResponseTimeout: 10000,\n\n  /**\n   * @param {Number} subscriptionTimeout         The number of milliseconds that can pass after\n   *                                             providing/unproviding a RPC or subscribing/\n   *                                             unsubscribing/listening to a record before an\n   *                                             error is thrown\n   */\n  subscriptionTimeout: 2000,\n\n  /**\n   * @param {Number} maxMessagesPerPacket        If the implementation tries to send a large\n   *                                             number of messages at the same time, the deepstream\n   *                                             client will try to split them into smaller packets\n   *                                             and send these every\n   *                                             <timeBetweenSendingQueuedPackages> ms.\n   *\n   *                                             This parameter specifies the number of messages\n   *                                             after which deepstream sends the packet and\n   *                                             queues the remaining messages.\n   *                                             Set to Infinity to turn the feature off.\n   *\n   */\n  maxMessagesPerPacket: 100,\n\n  /**\n   * @param {Number} timeBetweenSendingQueuedPackages\n   *                                             Please see description for\n   *                                             maxMessagesPerPacket. Sets the time in ms.\n   */\n  timeBetweenSendingQueuedPackages: 16,\n\n  /**\n   * @param {Number} recordReadAckTimeout       The number of milliseconds from the moment\n   *                                            client.record.getRecord() is called until an error\n   *                                            is thrown since no ack message has been received.\n   */\n  recordReadAckTimeout: 15000,\n\n  /**\n   * @param {Number} recordReadTimeout           The number of milliseconds from the moment\n   *                                             client.record.getRecord() is called until an error\n   *                                             is thrown since no data has been received.\n   */\n  recordReadTimeout: 15000,\n\n  /**\n   * @param {Number} recordDeleteTimeout         The number of milliseconds from the moment\n   *                                             record.delete() is called until an error is\n   *                                             thrown since no delete ack message had been\n   *                                             received.\n   *                                             Please take into account that the deletion is only\n   *                                             complete after the record has been deleted from\n   *                                             both cache and storage\n   */\n  recordDeleteTimeout: 15000,\n\n  /**\n   * @param {String} path path to connect to\n   */\n  path: '/deepstream',\n\n  /**\n   *  @param {Function} mergeStrategy            This provides the default strategy used to\n   *                                             deal with merge conflicts.\n   *                                             If the merge strategy is not succesfull it will\n   *                                             set an error, else set the returned data as the\n   *                                             latest revision. This can be overriden on a per\n   *                                             record basis by setting the `setMergeStrategy`.\n   */\n  mergeStrategy: MERGE_STRATEGIES.REMOTE_WINS,\n\n  /**\n   * @param {Boolean} recordDeepCopy             Setting to false disabled deepcopying of record\n   *                                             data when provided via `get()` in a `subscribe`\n   *                                             callback. This improves speed at the expense of\n   *                                             the user having to ensure object immutability.\n   */\n  recordDeepCopy: true,\n\n  /**\n   * https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketaddress-protocols-options\n   *\n   * @param {Object} nodeSocketOptions           Options to pass to the websocket constructor in\n   *                                             node.\n   * @default null\n   */\n  nodeSocketOptions: null\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/default-options.js\n// module id = n6zX\n// module chunks = 5 6","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket = require('ws');\nvar messageParser = require('./message-parser');\nvar messageBuilder = require('./message-builder');\nvar utils = require('../utils/utils');\nvar C = require('../constants/constants');\n\n/**\n * Establishes a connection to a deepstream server using websockets\n *\n * @param {Client} client\n * @param {String} url     Short url, e.g. <host>:<port>. Deepstream works out the protocol\n * @param {Object} options connection options\n *\n * @constructor\n */\nvar Connection = function Connection(client, url, options) {\n  this._client = client;\n  this._options = options;\n  this._authParams = null;\n  this._authCallback = null;\n  this._deliberateClose = false;\n  this._redirecting = false;\n  this._tooManyAuthAttempts = false;\n  this._connectionAuthenticationTimeout = false;\n  this._challengeDenied = false;\n  this._queuedMessages = [];\n  this._reconnectTimeout = null;\n  this._reconnectionAttempt = 0;\n  this._currentPacketMessageCount = 0;\n  this._sendNextPacketTimeout = null;\n  this._currentMessageResetTimeout = null;\n  this._endpoint = null;\n  this._lastHeartBeat = null;\n  this._heartbeatInterval = null;\n\n  this._originalUrl = utils.parseUrl(url, this._options.path);\n  this._url = this._originalUrl;\n\n  this._state = C.CONNECTION_STATE.CLOSED;\n  this._createEndpoint();\n};\n\n/**\n * Returns the current connection state.\n * (One of constants.CONNECTION_STATE)\n *\n * @public\n * @returns {String} connectionState\n */\nConnection.prototype.getState = function () {\n  return this._state;\n};\n\n/**\n * Sends the specified authentication parameters\n * to the server. Can be called up to <maxAuthAttempts>\n * times for the same connection.\n *\n * @param   {Object}   authParams A map of user defined auth parameters.\n *                                E.g. { username:<String>, password:<String> }\n * @param   {Function} callback   A callback that will be invoked with the authenticationr result\n *\n * @public\n * @returns {void}\n */\nConnection.prototype.authenticate = function (authParams, callback) {\n  if ((typeof authParams === 'undefined' ? 'undefined' : _typeof(authParams)) !== 'object') {\n    this._client._$onError(C.TOPIC.ERROR, C.EVENT.INVALID_AUTH_MSG, 'authParams is not an object');\n    return;\n  }\n\n  this._authParams = authParams;\n  this._authCallback = callback;\n\n  if (this._tooManyAuthAttempts || this._challengeDenied || this._connectionAuthenticationTimeout) {\n    this._client._$onError(C.TOPIC.ERROR, C.EVENT.IS_CLOSED, 'this client\\'s connection was closed');\n    return;\n  } else if (this._deliberateClose === true && this._state === C.CONNECTION_STATE.CLOSED) {\n    this._createEndpoint();\n    this._deliberateClose = false;\n    return;\n  }\n\n  if (this._state === C.CONNECTION_STATE.AWAITING_AUTHENTICATION) {\n    this._sendAuthParams();\n  }\n};\n\n/**\n * High level send message method. Creates a deepstream message\n * string and invokes the actual send method.\n *\n * @param   {String} topic  One of C.TOPIC\n * @param   {String} action One of C.ACTIONS\n * @param   {[Mixed]} data   Date that will be added to the message. Primitive values will\n *                          be appended directly, objects and arrays will be serialized as JSON\n *\n * @private\n * @returns {void}\n */\nConnection.prototype.sendMsg = function (topic, action, data) {\n  this.send(messageBuilder.getMsg(topic, action, data));\n};\n\n/**\n * Main method for sending messages. Doesn't send messages instantly,\n * but instead achieves conflation by adding them to the message\n * buffer that will be drained on the next tick\n *\n * @param   {String} message deepstream message\n *\n * @public\n * @returns {void}\n */\nConnection.prototype.send = function (message) {\n  this._queuedMessages.push(message);\n  this._currentPacketMessageCount++;\n\n  if (this._currentMessageResetTimeout === null) {\n    this._currentMessageResetTimeout = utils.nextTick(this._resetCurrentMessageCount.bind(this));\n  }\n\n  if (this._state === C.CONNECTION_STATE.OPEN && this._queuedMessages.length < this._options.maxMessagesPerPacket && this._currentPacketMessageCount < this._options.maxMessagesPerPacket) {\n    this._sendQueuedMessages();\n  } else if (this._sendNextPacketTimeout === null) {\n    this._queueNextPacket();\n  }\n};\n\n/**\n * Closes the connection. Using this method\n * sets a _deliberateClose flag that will prevent the client from\n * reconnecting.\n *\n * @public\n * @returns {void}\n */\nConnection.prototype.close = function () {\n  clearInterval(this._heartbeatInterval);\n  this._deliberateClose = true;\n  this._endpoint.close();\n};\n\n/**\n * Creates the endpoint to connect to using the url deepstream\n * was initialised with.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._createEndpoint = function () {\n  this._endpoint = BrowserWebSocket ? new BrowserWebSocket(this._url) : new NodeWebSocket(this._url, this._options.nodeSocketOptions);\n\n  this._endpoint.onopen = this._onOpen.bind(this);\n  this._endpoint.onerror = this._onError.bind(this);\n  this._endpoint.onclose = this._onClose.bind(this);\n  this._endpoint.onmessage = this._onMessage.bind(this);\n};\n\n/**\n * When the implementation tries to send a large\n * number of messages in one execution thread, the first\n * <maxMessagesPerPacket> are send straight away.\n *\n * _currentPacketMessageCount keeps track of how many messages\n * went into that first packet. Once this number has been exceeded\n * the remaining messages are written to a queue and this message\n * is invoked on a timeout to reset the count.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._resetCurrentMessageCount = function () {\n  this._currentPacketMessageCount = 0;\n  this._currentMessageResetTimeout = null;\n};\n\n/**\n * Concatenates the messages in the current message queue\n * and sends them as a single package. This will also\n * empty the message queue and conclude the send process.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._sendQueuedMessages = function () {\n  if (this._state !== C.CONNECTION_STATE.OPEN || this._endpoint.readyState !== this._endpoint.OPEN) {\n    return;\n  }\n\n  if (this._queuedMessages.length === 0) {\n    this._sendNextPacketTimeout = null;\n    return;\n  }\n\n  var message = this._queuedMessages.splice(0, this._options.maxMessagesPerPacket).join('');\n\n  if (this._queuedMessages.length !== 0) {\n    this._queueNextPacket();\n  } else {\n    this._sendNextPacketTimeout = null;\n  }\n\n  this._submit(message);\n};\n\n/**\n * Sends a message to over the endpoint connection directly\n *\n * Will generate a connection error if the websocket was closed\n * prior to an onclose event.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._submit = function (message) {\n  if (this._endpoint.readyState === this._endpoint.OPEN) {\n    this._endpoint.send(message);\n  } else {\n    this._onError('Tried to send message on a closed websocket connection');\n  }\n};\n\n/**\n * Schedules the next packet whilst the connection is under\n * heavy load.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._queueNextPacket = function () {\n  var fn = this._sendQueuedMessages.bind(this);\n  var delay = this._options.timeBetweenSendingQueuedPackages;\n\n  this._sendNextPacketTimeout = setTimeout(fn, delay);\n};\n\n/**\n * Sends authentication params to the server. Please note, this\n * doesn't use the queued message mechanism, but rather sends the message directly\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._sendAuthParams = function () {\n  this._setState(C.CONNECTION_STATE.AUTHENTICATING);\n  var authMessage = messageBuilder.getMsg(C.TOPIC.AUTH, C.ACTIONS.REQUEST, [this._authParams]);\n  this._submit(authMessage);\n};\n\n/**\n * Ensures that a heartbeat was not missed more than once, otherwise it considers the connection\n * to have been lost and closes it for reconnection.\n * @return {void}\n */\nConnection.prototype._checkHeartBeat = function () {\n  var heartBeatTolerance = this._options.heartbeatInterval * 2;\n\n  if (Date.now() - this._lastHeartBeat > heartBeatTolerance) {\n    clearInterval(this._heartbeatInterval);\n    this._endpoint.close();\n    this._client._$onError(C.TOPIC.CONNECTION, C.EVENT.CONNECTION_ERROR, 'heartbeat not received in the last ' + heartBeatTolerance + ' milliseconds');\n  }\n};\n\n/**\n * Will be invoked once the connection is established. The client\n * can't send messages yet, and needs to get a connection ACK or REDIRECT\n * from the server before authenticating\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._onOpen = function () {\n  this._clearReconnect();\n  this._lastHeartBeat = Date.now();\n  this._heartbeatInterval = utils.setInterval(this._checkHeartBeat.bind(this), this._options.heartbeatInterval);\n  this._setState(C.CONNECTION_STATE.AWAITING_CONNECTION);\n};\n\n/**\n * Callback for generic connection errors. Forwards\n * the error to the client.\n *\n * The connection is considered broken once this method has been\n * invoked.\n *\n * @param   {String|Error} error connection error\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._onError = function (error) {\n  var _this = this;\n\n  clearInterval(this._heartbeatInterval);\n  this._setState(C.CONNECTION_STATE.ERROR);\n\n  /*\n   * If the implementation isn't listening on the error event this will throw\n   * an error. So let's defer it to allow the reconnection to kick in.\n   */\n  setTimeout(function () {\n    var msg = void 0;\n    if (error.code === 'ECONNRESET' || error.code === 'ECONNREFUSED') {\n      msg = 'Can\\'t connect! Deepstream server unreachable on ' + _this._originalUrl;\n    } else {\n      try {\n        msg = JSON.stringify(error);\n      } catch (e) {\n        msg = error.toString();\n      }\n    }\n    _this._client._$onError(C.TOPIC.CONNECTION, C.EVENT.CONNECTION_ERROR, msg);\n  }, 1);\n};\n\n/**\n * Callback when the connection closes. This might have been a deliberate\n * close triggered by the client or the result of the connection getting\n * lost.\n *\n * In the latter case the client will try to reconnect using the configured\n * strategy.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._onClose = function () {\n  clearInterval(this._heartbeatInterval);\n\n  if (this._redirecting === true) {\n    this._redirecting = false;\n    this._createEndpoint();\n  } else if (this._deliberateClose === true) {\n    this._setState(C.CONNECTION_STATE.CLOSED);\n  } else {\n    this._tryReconnect();\n  }\n};\n\n/**\n * Callback for messages received on the connection.\n *\n * @param   {String} message deepstream message\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._onMessage = function (message) {\n  var parsedMessages = messageParser.parse(message.data, this._client);\n\n  for (var i = 0; i < parsedMessages.length; i++) {\n    if (parsedMessages[i] === null) {\n      continue;\n    } else if (parsedMessages[i].topic === C.TOPIC.CONNECTION) {\n      this._handleConnectionResponse(parsedMessages[i]);\n    } else if (parsedMessages[i].topic === C.TOPIC.AUTH) {\n      this._handleAuthResponse(parsedMessages[i]);\n    } else {\n      this._client._$onMessage(parsedMessages[i]);\n    }\n  }\n};\n\n/**\n * The connection response will indicate whether the deepstream connection\n * can be used or if it should be forwarded to another instance. This\n * allows us to introduce load-balancing if needed.\n *\n * If authentication parameters are already provided this will kick of\n * authentication immediately. The actual 'open' event won't be emitted\n * by the client until the authentication is successful.\n *\n * If a challenge is recieved, the user will send the url to the server\n * in response to get the appropriate redirect. If the URL is invalid the\n * server will respond with a REJECTION resulting in the client connection\n * being permanently closed.\n *\n * If a redirect is recieved, this connection is closed and updated with\n * a connection to the url supplied in the message.\n *\n * @param   {Object} message parsed connection message\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._handleConnectionResponse = function (message) {\n  if (message.action === C.ACTIONS.PING) {\n    this._lastHeartBeat = Date.now();\n    this._submit(messageBuilder.getMsg(C.TOPIC.CONNECTION, C.ACTIONS.PONG));\n  } else if (message.action === C.ACTIONS.ACK) {\n    this._setState(C.CONNECTION_STATE.AWAITING_AUTHENTICATION);\n    if (this._authParams) {\n      this._sendAuthParams();\n    }\n  } else if (message.action === C.ACTIONS.CHALLENGE) {\n    this._setState(C.CONNECTION_STATE.CHALLENGING);\n    this._submit(messageBuilder.getMsg(C.TOPIC.CONNECTION, C.ACTIONS.CHALLENGE_RESPONSE, [this._originalUrl]));\n  } else if (message.action === C.ACTIONS.REJECTION) {\n    this._challengeDenied = true;\n    this.close();\n  } else if (message.action === C.ACTIONS.REDIRECT) {\n    this._url = message.data[0];\n    this._redirecting = true;\n    this._endpoint.close();\n  } else if (message.action === C.ACTIONS.ERROR) {\n    if (message.data[0] === C.EVENT.CONNECTION_AUTHENTICATION_TIMEOUT) {\n      this._deliberateClose = true;\n      this._connectionAuthenticationTimeout = true;\n      this._client._$onError(C.TOPIC.CONNECTION, message.data[0], message.data[1]);\n    }\n  }\n};\n\n/**\n * Callback for messages received for the AUTH topic. If\n * the authentication was successful this method will\n * open the connection and send all messages that the client\n * tried to send so far.\n *\n * @param   {Object} message parsed auth message\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._handleAuthResponse = function (message) {\n  if (message.action === C.ACTIONS.ERROR) {\n\n    if (message.data[0] === C.EVENT.TOO_MANY_AUTH_ATTEMPTS) {\n      this._deliberateClose = true;\n      this._tooManyAuthAttempts = true;\n    } else if (message.data[0] === C.EVENT.INVALID_AUTH_MSG) {\n      this._deliberateClose = true;\n\n      if (this._authCallback) {\n        this._authCallback(false, 'invalid authentication message');\n      }\n\n      return;\n    } else {\n      this._setState(C.CONNECTION_STATE.AWAITING_AUTHENTICATION);\n    }\n\n    if (this._authCallback) {\n      this._authCallback(false, this._getAuthData(message.data[1]));\n    }\n  } else if (message.action === C.ACTIONS.ACK) {\n    this._setState(C.CONNECTION_STATE.OPEN);\n\n    if (this._authCallback) {\n      this._authCallback(true, this._getAuthData(message.data[0]));\n    }\n\n    this._sendQueuedMessages();\n  }\n};\n\n/**\n * Checks if data is present with login ack and converts it\n * to the correct type\n *\n * @param {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {object}\n */\nConnection.prototype._getAuthData = function (data) {\n  if (data === undefined) {\n    return null;\n  }\n  return messageParser.convertTyped(data, this._client);\n};\n\n/**\n * Updates the connection state and emits the\n * connectionStateChanged event on the client\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._setState = function (state) {\n  this._state = state;\n  this._client.emit(C.EVENT.CONNECTION_STATE_CHANGED, state);\n};\n\n/**\n * If the connection drops or is closed in error this\n * method schedules increasing reconnection intervals\n *\n * If the number of failed reconnection attempts exceeds\n * options.maxReconnectAttempts the connection is closed\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._tryReconnect = function () {\n  if (this._reconnectTimeout !== null) {\n    return;\n  }\n\n  if (this._reconnectionAttempt < this._options.maxReconnectAttempts) {\n    this._setState(C.CONNECTION_STATE.RECONNECTING);\n    this._reconnectTimeout = setTimeout(this._tryOpen.bind(this), Math.min(this._options.maxReconnectInterval, this._options.reconnectIntervalIncrement * this._reconnectionAttempt));\n    this._reconnectionAttempt++;\n  } else {\n    this._clearReconnect();\n    this.close();\n    this._client.emit(C.EVENT.MAX_RECONNECTION_ATTEMPTS_REACHED, this._reconnectionAttempt);\n  }\n};\n\n/**\n * Attempts to open a errourosly closed connection\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._tryOpen = function () {\n  if (this._originalUrl !== this._url) {\n    this._url = this._originalUrl;\n  }\n  this._createEndpoint();\n  this._reconnectTimeout = null;\n};\n\n/**\n * Stops all further reconnection attempts,\n * either because the connection is open again\n * or because the maximal number of reconnection\n * attempts has been exceeded\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._clearReconnect = function () {\n  clearTimeout(this._reconnectTimeout);\n  this._reconnectTimeout = null;\n  this._reconnectionAttempt = 0;\n};\n\nmodule.exports = Connection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/message/connection.js\n// module id = ntGu\n// module chunks = 5 6","'use strict';\n\nmodule.exports = {\n  /**\n  *  Choose the server's state over the client's\n  **/\n  REMOTE_WINS: function REMOTE_WINS(record, remoteValue, remoteVersion, callback) {\n    callback(null, remoteValue);\n  },\n\n  /**\n  *  Choose the local state over the server's\n  **/\n  LOCAL_WINS: function LOCAL_WINS(record, remoteValue, remoteVersion, callback) {\n    callback(null, record.get());\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/constants/merge-strategies.js\n// module id = q/jE\n// module chunks = 5 6","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.0.11.0@url/util.js\n// module id = rkjp\n// module chunks = 5 6","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = s9/g\n// module chunks = 5 6","'use strict';\n\nvar C = require('../constants/constants');\nvar utils = require('../utils/utils');\nvar messageBuilder = require('../message/message-builder');\n\n/**\n * This object provides a number of methods that allow a rpc provider\n * to respond to a request\n *\n * @param {Connection} connection - the clients connection object\n * @param {String} name the name of the rpc\n * @param {String} correlationId the correlationId for the RPC\n */\nvar RpcResponse = function RpcResponse(connection, name, correlationId) {\n  this._connection = connection;\n  this._name = name;\n  this._correlationId = correlationId;\n  this._isAcknowledged = false;\n  this._isComplete = false;\n  this.autoAck = true;\n  utils.nextTick(this._performAutoAck.bind(this));\n};\n\n/**\n * Acknowledges the receipt of the request. This\n * will happen implicitly unless the request callback\n * explicitly sets autoAck to false\n *\n * @public\n * @returns   {void}\n */\nRpcResponse.prototype.ack = function () {\n  if (this._isAcknowledged === false) {\n    this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.ACK, [C.ACTIONS.REQUEST, this._name, this._correlationId]);\n    this._isAcknowledged = true;\n  }\n};\n\n/**\n * Reject the request. This might be necessary if the client\n * is already processing a large number of requests. If deepstream\n * receives a rejection message it will try to route the request to\n * another provider - or return a NO_RPC_PROVIDER error if there are no\n * providers left\n *\n * @public\n * @returns  {void}\n */\nRpcResponse.prototype.reject = function () {\n  this.autoAck = false;\n  this._isComplete = true;\n  this._isAcknowledged = true;\n  this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.REJECTION, [this._name, this._correlationId]);\n};\n\n/**\n * Notifies the server that an error has occured while trying to process the request.\n * This will complete the rpc.\n *\n * @param {String} errorMsg the message used to describe the error that occured\n * @public\n * @returns  {void}\n */\nRpcResponse.prototype.error = function (errorMsg) {\n  this.autoAck = false;\n  this._isComplete = true;\n  this._isAcknowledged = true;\n  this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.ERROR, [errorMsg, this._name, this._correlationId]);\n};\n\n/**\n * Completes the request by sending the response data\n * to the server. If data is an array or object it will\n * automatically be serialised.\n * If autoAck is disabled and the response is sent before\n * the ack message the request will still be completed and the\n * ack message ignored\n *\n * @param {String} data the data send by the provider. Might be JSON serialized\n *\n * @public\n * @returns {void}\n */\nRpcResponse.prototype.send = function (data) {\n  if (this._isComplete === true) {\n    throw new Error('Rpc ' + this._name + ' already completed');\n  }\n  this.ack();\n\n  var typedData = messageBuilder.typed(data);\n  this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.RESPONSE, [this._name, this._correlationId, typedData]);\n  this._isComplete = true;\n};\n\n/**\n * Callback for the autoAck timeout. Executes ack\n * if autoAck is not disabled\n *\n * @private\n * @returns {void}\n */\nRpcResponse.prototype._performAutoAck = function () {\n  if (this.autoAck === true) {\n    this.ack();\n  }\n};\n\nmodule.exports = RpcResponse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/rpc/rpc-response.js\n// module id = sqtL\n// module chunks = 5 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.0.2.1@querystring-es3/decode.js\n// module id = steR\n// module chunks = 5 6","<template>\r\n  <div class=\"card ivu-card ivu-card-bordered\">\r\n    <Poptip class=\"badge-custom\" width=\"660\" placement=\"right-end\" @on-popper-show=\"popperShow\" v-if=\"type!=='subject'\" :transfer=\"true\">\r\n      <Badge :count=\"taskCount\"></Badge>\r\n      <div slot=\"title\">\r\n        <h3>{{appinfo.text+' - 待办任务'}}</h3>\r\n      </div>\r\n      <div slot=\"content\" class=\"api\">\r\n        <Table :columns=\"columns\" :data=\"columnData\" size=\"small\"></Table>\r\n        <div style=\"margin: 10px;overflow: hidden\">\r\n          <div style=\"float: right;\">\r\n            <Page :total=\"pageTotal\" :current=\"currentPage\" size=\"small\" :page-size=\"pageSize\" @on-change=\"changeCurrentPage\" show-total></Page>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Poptip>\r\n    <div class=\"badge-custom\" @click=\"redirectTo(appinfo)\">\r\n      <Badge :count=\"taskCount\" v-if=\"type==='subject'\" type=\"primary\"></Badge>\r\n    </div>\r\n\r\n    <img :src=\"appinfo.icon\" />\r\n    <div class=\"content\">\r\n      <a @click.stop=\"goAppSetting(appinfo)\" class=\"content-detail\">详情</a>\r\n      <h5 @click=\"redirectTo(appinfo)\">{{appinfo.text}}</h5>\r\n      <span>{{appinfo.administrator?appinfo.transName+'  ':appinfo.transName}}</span>\r\n        <my-pop-tip :userInfo=\"userInfo\"  trigger=\"click\">\r\n          <span @click=\"showUserInfo\" slot=\"userCard\" class=\"content-admin\">{{appinfo.administrator}}</span>\r\n        </my-pop-tip>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAppTaskCount } from \"@/services/flowService\";\r\nimport { getUserInfoByUserId } from \"@/services/appService.js\";\r\nimport MyPopTip from \"@/components/poptip/MyPopTip\";\r\nexport default {\r\n  props: [\"appinfo\", \"allTaskCount\"],\r\n  components:{\r\n    MyPopTip\r\n  },\r\n  data() {\r\n    return {\r\n      taskCount: 0,\r\n      type: this.appinfo.url.split(\"/\")[0],\r\n      columns: [\r\n        {\r\n          title: \"交易号\",\r\n          key: \"transCode\",\r\n          sortable: true,\r\n          width: 160,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\r\n              \"a\",\r\n              {\r\n                attrs: {\r\n                  href: \"/Form/index.html?data=\" + params.row.transCode,\r\n                  target: \"_blank\"\r\n                }\r\n              },\r\n              params.row.transCode\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: \"当前节点\",\r\n          key: \"nodeName\"\r\n        },\r\n        {\r\n          title: \"当前用户\",\r\n          key: \"assigneeName\",\r\n          width: 90\r\n        },\r\n        {\r\n          title: \"创建者\",\r\n          key: \"creatorName\",\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"任务创建时间\",\r\n          key: \"crtTime\",\r\n          width: 160,\r\n          align: \"center\",\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            //时间戳转换为日期格式\r\n            function formatDateTime(inputTime) {\r\n              let date = new Date(inputTime);\r\n              let y = date.getFullYear();\r\n              let m = date.getMonth() + 1;\r\n              m = m < 10 ? \"0\" + m : m;\r\n              let d = date.getDate();\r\n              d = d < 10 ? \"0\" + d : d;\r\n              let h = date.getHours();\r\n              h = h < 10 ? \"0\" + h : h;\r\n              let minute = date.getMinutes();\r\n              let second = date.getSeconds();\r\n              minute = minute < 10 ? \"0\" + minute : minute;\r\n              second = second < 10 ? \"0\" + second : second;\r\n              return (\r\n                y + \"-\" + m + \"-\" + d + \" \" + h + \":\" + minute + \":\" + second\r\n              );\r\n            }\r\n            return h(\"span\", formatDateTime(params.row.crtTime));\r\n          }\r\n        }\r\n      ],\r\n      columnData: [],\r\n      loading: true,\r\n      pageTotal: 0, //table总数\r\n      pageSize: 10,\r\n      currentPage: 1, //table当前页\r\n      pageListId: \"\",\r\n\r\n      userInfo:{},\r\n    };\r\n  },\r\n  created() {\r\n    if (!~this.appinfo.icon.indexOf(\"/dist/\")) {\r\n      this.appinfo.icon = \"/dist/\" + this.appinfo.icon;\r\n    }\r\n    let listId = this.appinfo.url.split(\"/\")[1];\r\n    let f = this.allTaskCount.filter(f => {\r\n      return f.listId === listId;\r\n    });\r\n    if (f.length > 0) {\r\n      this.taskCount = f[0].total;\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    allTaskCount: {\r\n      handler: function(val, oldValue) {\r\n        let listId = this.appinfo.url.split(\"/\")[1];\r\n        let f = val.filter(f => {\r\n          return f.listId === listId;\r\n        });\r\n        if (f.length > 0) {\r\n          this.taskCount = f[0].total;\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 新怡环境下应用链接跳转\r\n     */\r\n    redirectTo: function(appInfo) {\r\n      let url = appInfo.url;\r\n      let nr = window.top.document.getElementById(\"frame1\").getAttribute(\"nr\");\r\n      if (appInfo.target === \"_blank\") {\r\n        window.open(url, \"_blank\");\r\n      } else {\r\n        if (!nr) {\r\n          if (~url.indexOf(\"outlink\")) {\r\n            url = url;\r\n          } else if (~appInfo.url.indexOf(\"app\")) {\r\n            url = \"appReport/\" + url;\r\n          } else {\r\n            url = \"report/\" + url;\r\n          }\r\n        }\r\n\r\n        window.top.postMessage(\r\n          {\r\n            type: \"redirect\",\r\n            url: url\r\n          },\r\n          \"*\"\r\n        );\r\n      }\r\n    },\r\n\r\n    showUserInfo(){\r\n     \r\n      let userId = this.appinfo.adminId;\r\n      getUserInfoByUserId(userId).then(res=>{\r\n        if(res.dataCount){\r\n          this.userInfo= res.tableContent[0];\r\n        }\r\n      })\r\n    },\r\n\r\n    popperShow(e) {\r\n      this.pageListId = this.appinfo.url.split(\"/\")[1];\r\n      let params = {\r\n        type: \"myToDo\",\r\n        page: this.currentPage,\r\n        listId: this.pageListId,\r\n        limit: this.pageSize\r\n      };\r\n      getAppTaskCount(params).then(res => {\r\n        this.pageTotal = res.total;\r\n        if (res.tableContent.length > 0) {\r\n          this.columnData = res.tableContent;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 分页加载\r\n     */\r\n    changeCurrentPage(currentPage) {\r\n      let params = {\r\n        type: \"myToDo\",\r\n        page: currentPage,\r\n        listId: this.pageListId,\r\n        limit: this.pageSize\r\n      };\r\n      this.loading = true;\r\n      getAppTaskCount(params).then(res => {\r\n        if (res.tableContent.length > 0) {\r\n          this.columnData = res.tableContent;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    },\r\n    goAppSetting(list) {\r\n      let url = \"appSetting/\" + list.listId;\r\n      window.top.postMessage(\r\n        {\r\n          type: \"redirect\",\r\n          url: url\r\n        },\r\n        \"*\"\r\n      );\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n@import \"./common.less\";\r\n\r\n.card {\r\n  height: 70px;\r\n  padding: 10px 12px;\r\n  margin: 10px 0;\r\n  border-radius: 0px;\r\n  img {\r\n    height: 50px;\r\n    width: 50px;\r\n    z-index: 1;\r\n    cursor: pointer;\r\n    // position: relative;\r\n  }\r\n\r\n  img:hover {\r\n    cursor: auto;\r\n  }\r\n  .content {\r\n    cursor: default;\r\n    font-size: @card-text-font-size;\r\n    width: 60%;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    z-index: 1;\r\n    white-space: nowrap;\r\n    color: #000;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 80px;\r\n    transform: translateY(-50%);\r\n\r\n    &-detail {\r\n      display: none;\r\n      float: right;\r\n      font-size: 14px;\r\n    }\r\n\r\n    h5 {\r\n      cursor: pointer;\r\n      position: relative;\r\n      z-index: -99;\r\n      font-size: 16px;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n    }\r\n\r\n    span {\r\n      font-size: 12px;\r\n      color: #5f5e5e;\r\n    }\r\n\r\n    &-admin{\r\n      color: #4b8cf0 !important;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .badge-custom {\r\n    top: -13px;\r\n    cursor: pointer;\r\n    left: -10px;\r\n    z-index: 10;\r\n    position: absolute;\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n.api {\r\n  position: relative;\r\n  z-index: 100;\r\n}\r\n\r\n.card:hover {\r\n  .content-detail {\r\n    display: inline-block;\r\n  }\r\n  -webkit-transition: box-shadow 0.3s cubic-bezier(0.55, 0, 0.1, 1) 0s;\r\n  -moz-transition: box-shadow 0.3s cubic-bezier(0.55, 0, 0.1, 1) 0s;\r\n  -o-transition: box-shadow 0.3s cubic-bezier(0.55, 0, 0.1, 1) 0s;\r\n  transition: box-shadow 0.3s cubic-bezier(0.55, 0, 0.1, 1) 0s;\r\n  box-shadow: 0 15px 10px 0 rgba(0, 0, 0, 0.1), 0 2px 2px 0 rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.ivu-card {\r\n  background: #fff;\r\n  font-size: 16px;\r\n  position: relative;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n.ivu-card-bordered {\r\n  border: 1px solid #dddee1;\r\n  border-color: #e9eaec;\r\n  box-shadow: 4px 4px 10px #bbb8b8;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/card/CardItem.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card ivu-card ivu-card-bordered\"},[(_vm.type!=='subject')?_c('Poptip',{staticClass:\"badge-custom\",attrs:{\"width\":\"660\",\"placement\":\"right-end\",\"transfer\":true},on:{\"on-popper-show\":_vm.popperShow}},[_c('Badge',{attrs:{\"count\":_vm.taskCount}}),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('h3',[_vm._v(_vm._s(_vm.appinfo.text+' - 待办任务'))])]),_vm._v(\" \"),_c('div',{staticClass:\"api\",attrs:{\"slot\":\"content\"},slot:\"content\"},[_c('Table',{attrs:{\"columns\":_vm.columns,\"data\":_vm.columnData,\"size\":\"small\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"margin\":\"10px\",\"overflow\":\"hidden\"}},[_c('div',{staticStyle:{\"float\":\"right\"}},[_c('Page',{attrs:{\"total\":_vm.pageTotal,\"current\":_vm.currentPage,\"size\":\"small\",\"page-size\":_vm.pageSize,\"show-total\":\"\"},on:{\"on-change\":_vm.changeCurrentPage}})],1)])],1)],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"badge-custom\",on:{\"click\":function($event){_vm.redirectTo(_vm.appinfo)}}},[(_vm.type==='subject')?_c('Badge',{attrs:{\"count\":_vm.taskCount,\"type\":\"primary\"}}):_vm._e()],1),_vm._v(\" \"),_c('img',{attrs:{\"src\":_vm.appinfo.icon}}),_vm._v(\" \"),_c('div',{staticClass:\"content\"},[_c('a',{staticClass:\"content-detail\",on:{\"click\":function($event){$event.stopPropagation();_vm.goAppSetting(_vm.appinfo)}}},[_vm._v(\"详情\")]),_vm._v(\" \"),_c('h5',{on:{\"click\":function($event){_vm.redirectTo(_vm.appinfo)}}},[_vm._v(_vm._s(_vm.appinfo.text))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.appinfo.administrator?_vm.appinfo.transName+'  ':_vm.appinfo.transName))]),_vm._v(\" \"),_c('my-pop-tip',{attrs:{\"userInfo\":_vm.userInfo,\"trigger\":\"click\"}},[_c('span',{staticClass:\"content-admin\",attrs:{\"slot\":\"userCard\"},on:{\"click\":_vm.showUserInfo},slot:\"userCard\"},[_vm._v(_vm._s(_vm.appinfo.administrator))])])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-61938584\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/.13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/card/CardItem.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/.3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-61938584\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=styles&index=0!./CardItem.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/.13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./CardItem.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./CardItem.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/.13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-61938584\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=template&index=0!./CardItem.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-61938584\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/card/CardItem.vue\n// module id = null\n// module chunks = ","<template>\r\n  <row class=\"menu-field-set\" :gutter=\"16\">\r\n    <label>{{menuItem.text}}</label>\r\n\r\n    <Col span=\"4\" v-for=\"(item,j) in menuItem.children\" :key=\"j\" >\r\n    <card-item :appinfo=\"item\" :allTaskCount=\"allTaskCount\">\r\n    </card-item>\r\n    </Col>\r\n\r\n  </row>\r\n</template>\r\n\r\n<script>\r\nimport CardItem from \"@/components/card/CardItem\";\r\n\r\nexport default {\r\n  props: [\"menuItem\", \"allTaskCount\"],\r\n\r\n  components: {\r\n    CardItem\r\n  },\r\n  created() {}\r\n};\r\n</script>\r\n\r\n<style lang ='less' scoped>\r\n@import './common.less';\r\n\r\n\r\n@media screen and (max-width: 521px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 90% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 522px) and (max-width: 780px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n     width: 50% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 781px) and (max-width: 1023px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 33.333333% !important;\r\n  }\r\n}\r\n\r\n\r\n@media screen and (min-width:1024px) and (max-width: 1466px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 25% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width:1467px) and (max-width:1680px) {\r\n   .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 20% !important;\r\n  }\r\n}\r\n\r\n.menu-field-set {\r\n  margin-left: 0px !important;\r\n  margin-right: 0px !important;\r\n\r\n  label {\r\n    display: block;\r\n    margin-left: 1%;\r\n    color: #333;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .menu-box {\r\n    .menu-item {\r\n      overflow: hidden;\r\n      padding-bottom: 2%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/card/CardList.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('row',{staticClass:\"menu-field-set\",attrs:{\"gutter\":16}},[_c('label',[_vm._v(_vm._s(_vm.menuItem.text))]),_vm._v(\" \"),_vm._l((_vm.menuItem.children),function(item,j){return _c('Col',{key:j,attrs:{\"span\":\"4\"}},[_c('card-item',{attrs:{\"appinfo\":item,\"allTaskCount\":_vm.allTaskCount}})],1)})],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-24ac7fc4\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/.13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/card/CardList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/.3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-24ac7fc4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=styles&index=0!./CardList.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/.13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./CardList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./CardList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/.13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-24ac7fc4\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=template&index=0!./CardList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-24ac7fc4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/card/CardList.vue\n// module id = null\n// module chunks = ","<template>\r\n\r\n  <div class=\"wrap\">\r\n    <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\r\n    <div class=\"main-header\">\r\n      <div class=\"main-header-nav\">\r\n        <Row>\r\n          <Col span=\"24\">\r\n          <ButtonGroup class=\"fr\">\r\n            <!-- <Button size=\"small\" @click=\"goAppManage\" type=\"ghost\" caseId='apps' v-if=\"isAdmin\">\r\n              <i class=\"iconfont\">&#xe6cf;</i>\r\n              应用管理\r\n            </Button> -->\r\n            <!-- <Button size=\"small\" @click=\"changeView\" caseId='apps' v-bind:class=\"caseId==='apps'?'ivu-btn-active':''\">\r\n              <i class=\"iconfont\">&#xe608;</i>\r\n              全部应用\r\n            </Button> -->\r\n            <!-- <Button size=\"small\" v-for=\"(pulse,i) in  pulseGraphLlistr\" :key=\"i\" type=\"ghost\" @click=\"changeView\" :caseId=\"pulse.id\" v-bind:class=\"caseId===pulse.id?'ivu-btn-active':''\">\r\n              <i class=\"iconfont\">&#xe64c;</i>\r\n              {{pulse.name}}\r\n            </Button> -->\r\n             <Icon :type=\"model==='apps'?'ios-apps':'md-share'\" size=\"16\" /> \r\n            <Select v-model=\"model\" class=\"input-select\" @on-change=\"changeView\" placeholder=\"请选择业务单元\" style=\"width:230px;font-size:16px\">\r\n              <Option value=\"apps\">\r\n                <Icon type=\"ios-apps\" size=\"16\" /> 所有应用看板\r\n              </Option>\r\n              <Option v-for=\"item in pulseGraphLlistr\" :value=\"item.id\" :key=\"item.id\">\r\n                <Icon type=\"md-share\" size=\"16\" /> {{ item.name }}\r\n              </Option>\r\n            </Select>\r\n          </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n      <div v-if=\"cutView&&caseId==='apps'\">\r\n        <section v-for=\"(menuList,i) in menuList\" :key=\"i\" class=\"bg-gray-lighter\">\r\n\r\n          <row class=\"menu-group\">\r\n            <row>\r\n              <h3 class=\"menu-group-title\">{{menuList.text}}</h3>\r\n            </row>\r\n\r\n            <row :gutter=\"16\">\r\n              <Col v-if=\"item.leaf\" v-for=\"(item,j) in menuList.children\" :key=\"j\" span=\"4\">\r\n              <card-item v-if=\"item.leaf\" :appinfo=\"item\" :allTaskCount=\"allTaskCount\"></card-item>\r\n              </Col>\r\n              <card-list v-else :menuItem=\"item\" :index='j' :allTaskCount=\"allTaskCount\"></card-list>\r\n            </row>\r\n          </row>\r\n        </section>\r\n      </div>\r\n      <div v-for=\"(pulseGraph,index) in pulseGraphLlistr\" :key=\"index\" v-if=\"!cutView && pulseGraph.id === caseId\">\r\n        <pulse-graph :caseId=\"pulseGraph.id\"></pulse-graph>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as ds from \"deepstream.io-client-js\";\r\nimport CardList from \"@/components/card/CardList\";\r\nimport CardItem from \"@/components/card/CardItem\";\r\nimport { getToken } from \"@/utils/utils\";\r\nimport PulseGraph from \"@/views/flow/pulseGraph\";\r\nimport {\r\n  getMenu,\r\n  getPulsationDiagramCase,\r\n  getCurrentUserAllTasks,\r\n  getPulseGraph,\r\n  getMyFavorite\r\n} from \"@/services/flowService\";\r\n\r\nexport default {\r\n  components: {\r\n    CardList,\r\n    CardItem,\r\n    PulseGraph\r\n  },\r\n  data() {\r\n    return {\r\n      spinShow: true,\r\n      cutView: true,\r\n      menuList: [],\r\n      favoriteMenu: {\r\n        leaf: false,\r\n        text: \"常用应用\",\r\n        children: []\r\n      },\r\n      caseId: \"apps\",\r\n      pulseGraphLlistr: [],\r\n      allTaskCount: [],\r\n      ds: ds(\"wss://sunwingfood.roletask.com:6021/deepstream\"),\r\n      books$$: null,\r\n      isAdmin: this.$currentUser.isAdmin,\r\n      model: \"apps\"\r\n    };\r\n  },\r\n  mounted() {\r\n    this.subscribeMessage();\r\n\r\n    getMyFavorite().then(res => {\r\n      if (res.tableContent.length > 0) {\r\n        this.favoriteMenu.children = res.tableContent;\r\n      }\r\n    });\r\n\r\n    //获取当前用户所有待办任务\r\n    getCurrentUserAllTasks().then(res => {\r\n      this.allTaskCount = res.tableContent;\r\n      //获取菜单信息\r\n      getMenu().then(res => {\r\n        this.urlMd5(res);\r\n\r\n        if (this.favoriteMenu.children.length > 0) {\r\n          this.menuList = [this.favoriteMenu, ...res];\r\n        } else {\r\n          this.menuList = res;\r\n        }\r\n        this.spinShow = false;\r\n      });\r\n    });\r\n\r\n    getPulsationDiagramCase().then(res => {\r\n      this.pulseGraphLlistr = res.tableContent;\r\n    });\r\n  },\r\n\r\n  methods: {\r\n    changeView(caseId) {\r\n      if (!caseId) return;\r\n      if (caseId === \"apps\") {\r\n        this.cutView = true;\r\n        this.caseId = caseId;\r\n      } else {\r\n        this.cutView = false;\r\n        this.caseId = Number(caseId);\r\n      }\r\n    },\r\n\r\n    goAppManage() {\r\n      window.top.location.hash = \"#page/AppSetting\";\r\n    },\r\n\r\n    //订阅消息\r\n    subscribeMessage: function() {\r\n      let currentUser = this.$currentUser;\r\n      if (currentUser.name && currentUser.Id) {\r\n        let username = [currentUser.name, currentUser.userId].join(\"|\");\r\n        let token = getToken();\r\n        //注册deepStream\r\n        this.ds.login(\r\n          {\r\n            token: token,\r\n            username: username\r\n          },\r\n          data => {\r\n            console.log(\"connect success!\");\r\n          }\r\n        );\r\n        //消息订阅\r\n        this.ds.event.subscribe(\"taskChange/\" + token, msg => {\r\n          this.allTaskCount = msg.tableContent;\r\n        });\r\n      }\r\n    },\r\n\r\n    //处理链接过长时\r\n    urlMd5: function(res) {\r\n      let loop = function(res) {\r\n        let l = res.length,\r\n          item;\r\n\r\n        while (l--) {\r\n          item = res[l];\r\n          if (item.url && item.target == \"_iframe\") {\r\n            let url = item.url,\r\n              outlinks = {},\r\n              md5Str = window.top.MD5(url),\r\n              newUrl = \"outlink/\" + md5Str;\r\n            item.url = newUrl;\r\n          }\r\n          if (item.children) loop(item.children);\r\n        }\r\n      };\r\n      loop(res);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" >\r\n.fr {\r\n  float: right;\r\n}\r\n.menuTitle {\r\n  font-size: 28;\r\n  font-weight: 400;\r\n}\r\n\r\n@media screen and (max-width: 521px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 90% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 522px) and (max-width: 780px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 50% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 781px) and (max-width: 1023px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 33.333333% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 1024px) and (max-width: 1466px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 25% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 1467px) and (max-width: 1680px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 20% !important;\r\n  }\r\n}\r\n\r\n.wrap {\r\n  top: 40px;\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: #ddd;\r\n}\r\n\r\n.bg-gray-lighter {\r\n  background-color: #f0f0f0;\r\n  padding: 0 10%;\r\n}\r\n\r\n.bg-white-lighter {\r\n  background-color: #fff;\r\n  padding: 0 10%;\r\n}\r\n\r\n.menu-group {\r\n  margin-bottom: 0px;\r\n  //   background-color: #fff;\r\n  padding: 5px 10px 20px;\r\n  &-title {\r\n    font-size: 18px;\r\n    font-weight: 400;\r\n    margin-bottom: 10px;\r\n    text-align: left;\r\n  }\r\n\r\n  .col-span {\r\n    span: 6;\r\n  }\r\n}\r\n\r\n.main-header {\r\n  position: fixed;\r\n\r\n  top: 0px;\r\n  height: 40px;\r\n  width: 100%;\r\n  padding: 0 10%;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid #9e9e9e57;\r\n  z-index: 997;\r\n  padding: 5px;\r\n  &-nav {\r\n    button {\r\n      cursor: pointer;\r\n      -webkit-box-align: center;\r\n      align-items: center;\r\n      font-size: 14px;\r\n      text-align: center;\r\n      border-radius: 0px;\r\n    }\r\n\r\n    .ivu-select-selected-value{\r\n      font-size: 14px !important;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n&-container {\r\n  background: #fff;\r\n  margin: 80px auto 15px;\r\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n&-content {\r\n  padding: 20px 25px;\r\n  position: relative;\r\n}\r\n\r\n//按钮选中时样式\r\n.ivu-btn-active {\r\n  color: #fff;\r\n  background-color: #2d8cf0;\r\n  border-color: #2d8cf0;\r\n}\r\n\r\n// .input-select {\r\n//   width: 160px !important;\r\n//   margin: 0 5px !important;\r\n// }\r\n\r\n//下拉选择器修改自带样式\r\n.ivu-select-selection {\r\n  height: 30px !important;\r\n  border-radius: 0px !important;\r\n}\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/home/HomePage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrap\"},[(_vm.spinShow)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}}):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"main-header\"},[_c('div',{staticClass:\"main-header-nav\"},[_c('Row',[_c('Col',{attrs:{\"span\":\"24\"}},[_c('ButtonGroup',{staticClass:\"fr\"},[_c('Icon',{attrs:{\"type\":_vm.model==='apps'?'ios-apps':'md-share',\"size\":\"16\"}}),_vm._v(\" \"),_c('Select',{staticClass:\"input-select\",staticStyle:{\"width\":\"230px\",\"font-size\":\"16px\"},attrs:{\"placeholder\":\"请选择业务单元\"},on:{\"on-change\":_vm.changeView},model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}},[_c('Option',{attrs:{\"value\":\"apps\"}},[_c('Icon',{attrs:{\"type\":\"ios-apps\",\"size\":\"16\"}}),_vm._v(\" 所有应用看板\\n            \")],1),_vm._v(\" \"),_vm._l((_vm.pulseGraphLlistr),function(item){return _c('Option',{key:item.id,attrs:{\"value\":item.id}},[_c('Icon',{attrs:{\"type\":\"md-share\",\"size\":\"16\"}}),_vm._v(\" \"+_vm._s(item.name)+\"\\n            \")],1)})],2)],1)],1)],1)],1)]),_vm._v(\" \"),(_vm.cutView&&_vm.caseId==='apps')?_c('div',_vm._l((_vm.menuList),function(menuList,i){return _c('section',{key:i,staticClass:\"bg-gray-lighter\"},[_c('row',{staticClass:\"menu-group\"},[_c('row',[_c('h3',{staticClass:\"menu-group-title\"},[_vm._v(_vm._s(menuList.text))])]),_vm._v(\" \"),_c('row',{attrs:{\"gutter\":16}},_vm._l((menuList.children),function(item,j){return (item.leaf)?_c('Col',{key:j,attrs:{\"span\":\"4\"}},[(item.leaf)?_c('card-item',{attrs:{\"appinfo\":item,\"allTaskCount\":_vm.allTaskCount}}):_vm._e()],1):_c('card-list',{attrs:{\"menuItem\":item,\"index\":j,\"allTaskCount\":_vm.allTaskCount}})}))],1)],1)})):_vm._e(),_vm._v(\" \"),_vm._l((_vm.pulseGraphLlistr),function(pulseGraph,index){return (!_vm.cutView && pulseGraph.id === _vm.caseId)?_c('div',{key:index},[_c('pulse-graph',{attrs:{\"caseId\":pulseGraph.id}})],1):_vm._e()})],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-3c41be0a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/.13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/views/home/HomePage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/.3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3c41be0a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=styles&index=0!./HomePage.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/.13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./HomePage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=script&index=0!./HomePage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/.13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3c41be0a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/.13.7.2@vue-loader/lib/selector?type=template&index=0!./HomePage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/home/HomePage.vue\n// module id = null\n// module chunks = ","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.0.2.1@querystring-es3/encode.js\n// module id = wkpQ\n// module chunks = 5 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.0.11.0@url/url.js\n// module id = xqzb\n// module chunks = 5 6","'use strict';\n\nvar C = require('../constants/constants');\nvar ResubscribeNotifier = require('./resubscribe-notifier');\n\n/**\n * Provides a scaffold for subscriptionless requests to deepstream, such as the SNAPSHOT\n * and HAS functionality. The SingleNotifier multiplexes all the client requests so\n * that they can can be notified at once, and also includes reconnection funcionality\n * incase the connection drops.\n *\n * @param {Client} client          The deepstream client\n * @param {Connection} connection  The deepstream connection\n * @param {String} topic           Constant. One of C.TOPIC\n * @param {String} action          Constant. One of C.ACTIONS\n * @param {Number} timeoutDuration The duration of the timeout in milliseconds\n *\n * @constructor\n */\nvar SingleNotifier = function SingleNotifier(client, connection, topic, action, timeoutDuration) {\n  this._client = client;\n  this._connection = connection;\n  this._topic = topic;\n  this._action = action;\n  this._timeoutDuration = timeoutDuration;\n  this._requests = {};\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._resubscribeNotifier = new ResubscribeNotifier(this._client, this._resendRequests.bind(this));\n  this._onResponseTimeout = this._onResponseTimeout.bind(this);\n};\n\n/**\n * Check if there is a request pending with a specified name\n *\n * @param {String} name An identifier for the request, e.g. a record name\n *\n * @public\n * @returns {void}\n */\nSingleNotifier.prototype.hasRequest = function (name) {\n  return !!this._requests[name];\n};\n\n/**\n * Add a request. If one has already been made it will skip the server request\n * and multiplex the response\n *\n * @param {String} name An identifier for the request, e.g. a record name\n\n *\n * @public\n * @returns {void}\n */\nSingleNotifier.prototype.request = function (name, callback) {\n  if (!this._requests[name]) {\n    this._requests[name] = [];\n    this._connection.sendMsg(this._topic, this._action, [name]);\n  }\n\n  var ackId = this._ackTimeoutRegistry.add({\n    topic: this._topic,\n    event: C.EVENT.RESPONSE_TIMEOUT,\n    name: name,\n    action: this._action,\n    timeout: this._timeoutDuration,\n    callback: this._onResponseTimeout\n  });\n  this._requests[name].push({ callback: callback, ackId: ackId });\n};\n\n/**\n * Process a response for a request. This has quite a flexible API since callback functions\n * differ greatly and helps maximise reuse.\n *\n * @param {String} name An identifier for the request, e.g. a record name\n * @param {String} error Error message\n * @param {Object} data If successful, the response data\n *\n * @public\n * @returns {void}\n */\nSingleNotifier.prototype.recieve = function (name, error, data) {\n  var entries = this._requests[name];\n\n  if (!entries) {\n    this._client._$onError(this._topic, C.EVENT.UNSOLICITED_MESSAGE, 'no entry for ' + name);\n    return;\n  }\n\n  for (var i = 0; i < entries.length; i++) {\n    var entry = entries[i];\n    this._ackTimeoutRegistry.remove({\n      ackId: entry.ackId\n    });\n    entry.callback(error, data);\n  }\n  delete this._requests[name];\n};\n\n/**\n * Will be invoked if a timeout occurs before a response arrives from the server\n *\n * @param {String} name An identifier for the request, e.g. a record name\n *\n * @private\n * @returns {void}\n */\nSingleNotifier.prototype._onResponseTimeout = function (timeout) {\n  var msg = 'No response received in time for ' + this._topic + '|' + this._action + '|' + timeout.name;\n  this._client._$onError(this._topic, C.EVENT.RESPONSE_TIMEOUT, msg);\n};\n\n/**\n * Resends all the requests once the connection is back up\n *\n * @private\n * @returns {void}\n */\nSingleNotifier.prototype._resendRequests = function () {\n  for (var request in this._requests) {\n    this._connection.sendMsg(this._topic, this._action, [request]);\n  }\n};\n\nmodule.exports = SingleNotifier;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/utils/single-notifier.js\n// module id = yoCr\n// module chunks = 5 6","'use strict';\n/* eslint-disable valid-typeof */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar C = require('../constants/constants');\n\n/**\n * A regular expression that matches whitespace on either side, but\n * not in the center of a string\n *\n * @type {RegExp}\n */\nvar TRIM_REGULAR_EXPRESSION = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n/**\n * Used in typeof comparisons\n *\n * @type {String}\n */\nvar OBJECT = 'object';\n\n/**\n * True if environment is node, false if it's a browser\n * This seems somewhat inelegant, if anyone knows a better solution,\n * let's change this (must identify browserify's pseudo node implementation though)\n *\n * @public\n * @type {Boolean}\n */\nexports.isNode = typeof process !== 'undefined' && process.toString() === '[object process]';\n\n/**\n * Provides as soon as possible async execution in a cross\n * platform way\n *\n * @param   {Function} fn the function to be executed in an asynchronous fashion\n *\n * @public\n * @returns {void}\n */\nexports.nextTick = function (fn) {\n  if (exports.isNode) {\n    process.nextTick(fn);\n  } else {\n    setTimeout(fn, 0);\n  }\n};\n\n/**\n * Removes whitespace from the beginning and end of a string\n *\n * @param   {String} inputString\n *\n * @public\n * @returns {String} trimmedString\n */\nexports.trim = function (inputString) {\n  if (inputString.trim) {\n    return inputString.trim();\n  }\n  return inputString.replace(TRIM_REGULAR_EXPRESSION, '');\n};\n\n/**\n * Compares two objects for deep (recoursive) equality\n *\n * This used to be a significantly more complex custom implementation,\n * but JSON.stringify has gotten so fast that it now outperforms the custom\n * way by a factor of 1.5 to 3.\n *\n * In IE11 / Edge the custom implementation is still slightly faster, but for\n * consistencies sake and the upsides of leaving edge-case handling to the native\n * browser / node implementation we'll go for JSON.stringify from here on.\n *\n * Please find performance test results here\n *\n * http://jsperf.com/deep-equals-code-vs-json\n *\n * @param   {Mixed} objA\n * @param   {Mixed} objB\n *\n * @public\n * @returns {Boolean} isEqual\n */\nexports.deepEquals = function (objA, objB) {\n  if (objA === objB) {\n    return true;\n  } else if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== OBJECT || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== OBJECT) {\n    return false;\n  }\n\n  return JSON.stringify(objA) === JSON.stringify(objB);\n};\n\n/**\n * Similar to deepEquals above, tests have shown that JSON stringify outperforms any attempt of\n * a code based implementation by 50% - 100% whilst also handling edge-cases and keeping\n * implementation complexity low.\n *\n * If ES6/7 ever decides to implement deep copying natively (what happened to Object.clone?\n * that was briefly a thing...), let's switch it for the native implementation. For now though,\n * even Object.assign({}, obj) only provides a shallow copy.\n *\n * Please find performance test results backing these statements here:\n *\n * http://jsperf.com/object-deep-copy-assign\n *\n * @param   {Mixed} obj the object that should be cloned\n *\n * @public\n * @returns {Mixed} clone\n */\nexports.deepCopy = function (obj) {\n  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === OBJECT) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  return obj;\n};\n\n/**\n * Copy the top level of items, but do not copy its items recourisvely. This\n * is much quicker than deepCopy does not guarantee the object items are new/unique.\n * Mainly used to change the reference to the actual object itself, but not its children.\n *\n * @param   {Mixed} obj the object that should cloned\n *\n * @public\n * @returns {Mixed} clone\n */\nexports.shallowCopy = function (obj) {\n  if (Array.isArray(obj)) {\n    return obj.slice(0);\n  } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === OBJECT) {\n    var copy = Object.create(null);\n    var props = Object.keys(obj);\n    for (var i = 0; i < props.length; i++) {\n      copy[props[i]] = obj[props[i]];\n    }\n    return copy;\n  }\n  return obj;\n};\n\n/**\n * Set timeout utility that adds support for disabling a timeout\n * by passing null\n *\n * @param {Function} callback        the function that will be called after the given time\n * @param {Number}   timeoutDuration the duration of the timeout in milliseconds\n *\n * @public\n * @returns {Number} timeoutId\n */\nexports.setTimeout = function (callback, timeoutDuration) {\n  if (timeoutDuration !== null) {\n    return setTimeout(callback, timeoutDuration);\n  }\n  return -1;\n};\n\n/**\n * Set Interval utility that adds support for disabling an interval\n * by passing null\n *\n * @param {Function} callback        the function that will be called after the given time\n * @param {Number}   intervalDuration the duration of the interval in milliseconds\n *\n * @public\n * @returns {Number} intervalId\n */\nexports.setInterval = function (callback, intervalDuration) {\n  if (intervalDuration !== null) {\n    return setInterval(callback, intervalDuration);\n  }\n  return -1;\n};\n\n/**\n * This method is used to break up long running operations and run a callback function immediately\n * after the browser has completed other operations such as events and display updates.\n *\n * @param {Function} callback        the function that will be called after the given time\n * @param {...*}     param1, ..., paramN additional parameters which are passed through to the\n *                                     callback\n *\n * @public\n */\nexports.requestIdleCallback = !exports.isNode && window.requestIdleCallback && window.requestIdleCallback.bind(window) || function (cb) {\n  var start = Date.now();\n  return setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\n\nexports.cancelIdleCallback = !exports.isNode && window.cancelIdleCallback && window.cancelIdleCallback.bind(window) || function (id) {\n  clearTimeout(id);\n};\n\n/**\n * Used to see if a protocol is specified within the url\n * @type {RegExp}\n */\nvar hasUrlProtocol = /^wss:|^ws:|^\\/\\//;\n\n/**\n * Used to see if the protocol contains any unsupported protocols\n * @type {RegExp}\n */\nvar unsupportedProtocol = /^http:|^https:/;\n\nvar URL = require('url');\n\n/**\n * Take the url passed when creating the client and ensure the correct\n * protocol is provided\n * @param  {String} url Url passed in by client\n * @return {String} Url with supported protocol\n */\nexports.parseUrl = function (initialURl, defaultPath) {\n  var url = initialURl;\n  if (unsupportedProtocol.test(url)) {\n    throw new Error('Only ws and wss are supported');\n  }\n  if (!hasUrlProtocol.test(url)) {\n    url = 'ws://' + url;\n  } else if (url.indexOf('//') === 0) {\n    url = 'ws:' + url;\n  }\n  var serverUrl = URL.parse(url);\n  if (!serverUrl.host) {\n    throw new Error('invalid url, missing host');\n  }\n  serverUrl.protocol = serverUrl.protocol ? serverUrl.protocol : 'ws:';\n  serverUrl.pathname = serverUrl.pathname ? serverUrl.pathname : defaultPath;\n  return URL.format(serverUrl);\n};\n\n/**\n * Returns true is the connection state is OPEN\n * @return {Boolean}\n */\nexports.isConnected = function (client) {\n  var connectionState = client.getConnectionState();\n  return connectionState === C.CONNECTION_STATE.OPEN;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.3.0@deepstream.io-client-js/dist/lib/utils/utils.js\n// module id = z4Yi\n// module chunks = 5 6"],"sourceRoot":""}