{"version":3,"sources":["webpack:///./node_modules/deepstream.io-client-js/dist/lib/rpc/rpc.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/message/connection.js","webpack:///./node_modules/querystring-es3/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/client.js","webpack:///./node_modules/core-js/library/fn/array/from.js","webpack:///./node_modules/component-emitter2/index.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/record/json-path.js","webpack:///./node_modules/babel-runtime/helpers/toConsumableArray.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/constants/merge-strategies.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/event/event-handler.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/rpc/rpc-response.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/message/message-parser.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/default-options.js","webpack:///./node_modules/punycode/punycode.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/record/record.js","webpack:///./node_modules/url/url.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/record/record-handler.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/rpc/rpc-handler.js","webpack:///./node_modules/babel-runtime/core-js/array/from.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/record/anonymous-record.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/utils/single-notifier.js","webpack:///./node_modules/core-js/library/modules/_create-property.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/utils/listener.js","webpack:///./node_modules/querystring-es3/decode.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/constants/constants.js","webpack:///src/components/pulsegraph/TaskModal.vue","webpack:///./src/components/pulsegraph/TaskModal.vue?e0c2","webpack:///./src/components/pulsegraph/TaskModal.vue","webpack:///src/views/flow/circularGraph.vue","webpack:///./src/views/flow/circularGraph.vue?4ed0","webpack:///./src/views/flow/circularGraph.vue","webpack:///src/views/flow/pulseGraph.vue","webpack:///./src/views/flow/pulseGraph.vue?d2c6","webpack:///./src/views/flow/pulseGraph.vue","webpack:///./node_modules/deepstream.io-client-js/dist/lib/utils/resubscribe-notifier.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/message/message-builder.js","webpack:///./node_modules/url/util.js","webpack:///./node_modules/core-js/library/modules/es6.array.from.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/utils/ack-timeout-registry.js","webpack:///src/components/card/CardItem.vue","webpack:///./src/components/card/CardItem.vue?fae2","webpack:///./src/components/card/CardItem.vue","webpack:///src/components/card/CardList.vue","webpack:///./src/components/card/CardList.vue?5555","webpack:///./src/components/card/CardList.vue","webpack:///src/views/home/HomePage.vue","webpack:///./src/views/home/HomePage.vue?d0b7","webpack:///./src/views/home/HomePage.vue","webpack:///./node_modules/querystring-es3/encode.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/presence/presence-handler.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/record/list.js","webpack:///./node_modules/deepstream.io-client-js/dist/lib/utils/utils.js"],"names":["C","__webpack_require__","messageParser","Rpc","name","callback","options","client","this","_options","_callback","_client","_ackTimeoutRegistry","_$getAckTimeoutRegistry","_ackTimeout","add","topic","TOPIC","RPC","action","ACTIONS","ACK","timeout","rpcAckTimeout","error","bind","_responseTimeout","REQUEST","event","EVENT","RESPONSE_TIMEOUT","rpcResponseTimeout","prototype","ack","remove","ackId","respond","data","convertedData","convertTyped","_complete","module","exports","_typeof","Symbol","iterator","obj","constructor","BrowserWebSocket","global","WebSocket","MozWebSocket","NodeWebSocket","messageBuilder","utils","Connection","url","_authParams","_authCallback","_deliberateClose","_redirecting","_tooManyAuthAttempts","_connectionAuthenticationTimeout","_challengeDenied","_queuedMessages","_reconnectTimeout","_reconnectionAttempt","_currentPacketMessageCount","_sendNextPacketTimeout","_currentMessageResetTimeout","_endpoint","_lastHeartBeat","_heartbeatInterval","_originalUrl","parseUrl","path","_url","_state","CONNECTION_STATE","CLOSED","_createEndpoint","getState","authenticate","authParams","AWAITING_AUTHENTICATION","_sendAuthParams","_$onError","ERROR","IS_CLOSED","INVALID_AUTH_MSG","sendMsg","send","getMsg","message","push","nextTick","_resetCurrentMessageCount","OPEN","length","maxMessagesPerPacket","_sendQueuedMessages","_queueNextPacket","close","clearInterval","nodeSocketOptions","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_onMessage","readyState","splice","join","_submit","fn","delay","timeBetweenSendingQueuedPackages","setTimeout","_setState","AUTHENTICATING","authMessage","AUTH","_checkHeartBeat","heartBeatTolerance","heartbeatInterval","Date","now","CONNECTION","CONNECTION_ERROR","_clearReconnect","setInterval","AWAITING_CONNECTION","_this","msg","code","JSON","stringify","e","toString","_tryReconnect","parsedMessages","parse","i","_handleConnectionResponse","_handleAuthResponse","_$onMessage","PING","PONG","CHALLENGE","CHALLENGING","CHALLENGE_RESPONSE","REJECTION","REDIRECT","CONNECTION_AUTHENTICATION_TIMEOUT","TOO_MANY_AUTH_ATTEMPTS","_getAuthData","undefined","state","emit","CONNECTION_STATE_CHANGED","maxReconnectAttempts","RECONNECTING","_tryOpen","Math","min","maxReconnectInterval","reconnectIntervalIncrement","MAX_RECONNECTION_ATTEMPTS_REACHED","clearTimeout","decode","encode","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","MS","Emitter","EventHandler","RpcHandler","RecordHandler","PresenceHandler","defaultOptions","AckTimeoutRegistry","Client","_getOptions","_connection","rpc","record","presence","_messageCallbacks","_$handle","RECORD","PRESENCE","_onErrorMessage","createDeepstream","login","authParamsOrCallback","getConnectionState","getUid","getTime","random","replace","processedError","MESSAGE_PARSE_ERROR","slice","errorMsg","ACK_TIMEOUT","NOT_AUTHENTICATED","hasListeners","console","log","Error","errorMessage","mergedOptions","key","CONSTANTS","MERGE_STRATEGIES","Array","from","mixin","on","addEventListener","_callbacks","create","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","args","len","listeners","eventNames","keys","PARTS_REG_EXP","cache","patch","oldValue","newValue","deepCopy","j","isArray","arr","value","props","_value","tokenize","parts","String","match","tokens","set","result","shallowCopy","node","isNaN","__esModule","_from","_from2","default","arr2","REMOTE_WINS","remoteValue","remoteVersion","LOCAL_WINS","ResubscribeNotifier","Listener","EventEmitter","connection","_emitter","_listener","_resubscribeNotifier","_resubscribe","subscribe","SUBSCRIBE","unsubscribe","UNSUBSCRIBE","typed","listen","pattern","destroyPending","destroy","LISTENER_EXISTS","unlisten","listener","sendDestroy","UNLISTEN","NOT_LISTENING","SUBSCRIPTION_FOR_PATTERN_REMOVED","SUBSCRIPTION_HAS_PROVIDER","MESSAGE_DENIED","NOT_SUBSCRIBED","UNSOLICITED_MESSAGE","clear","eventName","RpcResponse","correlationId","_name","_correlationId","_isAcknowledged","_isComplete","autoAck","_performAutoAck","reject","typedData","RESPONSE","MessageParser","_actions","_getActions","rawMessages","split","MESSAGE_SEPERATOR","_parseMessage","type","charAt","TYPES","STRING","substr","OBJECT","NUMBER","parseFloat","NULL","TRUE","FALSE","UNDEFINED","actions","MESSAGE_PART_SEPERATOR","messageObject","raw","subscriptionTimeout","recordReadAckTimeout","recordReadTimeout","recordDeleteTimeout","mergeStrategy","recordDeepCopy","__WEBPACK_AMD_DEFINE_RESULT__","root","nodeType","freeGlobal","window","self","punycode","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","floor","stringFromCharCode","fromCharCode","RangeError","map","array","mapDomain","string","ucs2decode","extra","output","counter","charCodeAt","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","input","out","basic","index","oldi","w","t","baseMinusT","codePoint","inputLength","n","bias","lastIndexOf","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","version","ucs2","toASCII","test","toUnicode","toLowerCase","call","jsonPath","Record","recordOptions","usages","_recordOptions","isReady","isDestroyed","hasProvider","_$data","_eventEmitter","_queuedMethodCalls","_writeCallbacks","_mergeStrategy","setMergeStrategy","_sendRead","_readAckTimeout","READ","pathOrData","dataOrCallback","_checkDestroyed","method","isConnected","requestIdleCallback","config","writeSuccess","_setUpCallback","_sendUpdate","_applyChange","triggerNow","_normalizeArguments","whenReady","pathOrCallback","discard","_this2","_discardTimeout","delete","_this3","_deleteAckTimeout","DELETE","DELETE_TIMEOUT","_onRead","_applyUpdate","_processAckMessage","UPDATE","PATCH","WRITE_ACKNOWLEDGEMENT","_handleWriteAcknowledgements","VERSION_EXISTS","_recoverRecord","_clearTimeouts","versions","remoteData","_onRecordRecovered","msgData","oldVersion","deepEquals","acknowledgedAction","_destroy","parseInt","SNAPSHOT","_setReady","currentVersion","newVersion","Number","CREATEORREAD","newData","oldData","silent","methodName","util","Url","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","href","urlParse","resolve","source","relative","resolveObject","format","isString","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","parseQueryString","slashesDenoteHost","isObject","u","TypeError","queryIndex","indexOf","splitter","uSplit","rest","trim","simplePath","exec","proto","lowerProto","atSign","hostEnd","hec","decodeURIComponent","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","p","h","ae","esc","encodeURIComponent","escape","qm","s","rel","tkeys","tk","tkey","rkeys","rk","rkey","v","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","isAbsolute","AnonymousRecord","List","SingleNotifier","_records","_lists","_destroyEventEmitter","_hasRegistry","HAS","_snapshotRegistry","getRecord","_onRecordError","_onDestroyPending","_removeRecord","getList","getAnonymousRecord","snapshot","request","has","setData","recordName","recordData","CREATEANDUPDATE","recieve","processed","hasRequest","onMessage","_rpcs","_providers","_reprovide","provide","unprovide","make","uid","_getRpc","rpcName","rawMessage","_respondToRpc","response","MESSAGE_PERMISSION_ERROR","recordHandler","_recordHandler","_record","_subscriptions","_proxyMethod","parameters","subscriptions","setName","_callMethodOnRecord","timeoutDuration","_topic","_action","_timeoutDuration","_requests","_resendRequests","_onResponseTimeout","entries","entry","$defineProperty","createDesc","object","f","_pattern","LISTEN","_sendListen","accept","LISTEN_ACCEPT","LISTEN_REJECT","_createCallbackResponse","SUBSCRIPTION_FOR_PATTERN_FOUND","hasOwnProperty","prop","qs","sep","eq","regexp","maxKeys","kstr","vstr","x","idx","xs","PRIVATE","NO_RPC_PROVIDER","RECORD_NOT_FOUND","CREATE","INVOKE","PROVIDER_UPDATE","QUERY","PRESENCE_JOIN","PRESENCE_LEAVE","CALL_STATE","INITIAL","CONNECTING","ESTABLISHED","ACCEPTED","DECLINED","ENDED","TaskModal","columns","title","sortable","render","params","attrs","row","transCode","target","inputTime","date","y","getFullYear","getMonth","d","getDate","getHours","minute","getMinutes","second","getSeconds","formatDateTime","crtTime","columnData","loading","pageTotal","pageSize","currentPage","modelState","creatorName","expand","expandValue","expandIcon","watch","listId","handler","filterTaskBtn","modal","methods","changeCurrentPage","modalVisibleChange","$emit","clearInputValue","page","limit","filter","flowService","then","res","total","tableContent","expandCrtTime","pulsegraph_TaskModal","_vm","_h","$createElement","_c","_self","taskValue","width","closable","on-visible-change","model","$$v","expression","staticClass","_v","staticStyle","margin-left","placeholder","size","click","_s","domProps","innerHTML","directives","rawName","placement","stripe","margin","float","current","page-size","show-total","show-elevator","on-change","slot","staticRenderFns","components_pulsegraph_TaskModal","normalizeComponent","ssrContext","echarts","circularGraph","nodes","links","groupLength","dataItem","drawECharts","myChart","init","document","getElementById","redirectTo","symbol","categories","item","forEach","category","draggable","icon","option","tooltip","clickable","legend","a","animationDuration","animationDurationUpdate","animationEasingUpdate","series","height","top","layout","circular","rotateLabel","edgeSymbol","label","normal","position","formatter","lineStyle","color","curveness","force","repulsion","setOption","param","seriesIndex","postMessage","created","that","caseId","child","toConsumableArray_default","id","show","itemStyle","borderColor","shadowBlur","shadowOffsetX","shadowOffsetY","endNode","mounted","flow_circularGraph","_m","pulseGraph","spinShow","baseLength","graphSpace","circleFillColor","circleBorderColor","squareFillColor","squareBorderColor","isActive","pointList","transTypePointList","waterFlow","flowType","businessItemWidth","ds","books$$","radioGroupLabel","rodioGroupDoOrNot","doneortodo","taskType","defaultDisplayTask","teamDone","teamTodo","myDone","myToDo","pageListId","components","CircularGraph","circularGraph_normalizeComponent","draw","nodePointXY","tempPoint","tempX","tempY","point","i2","pointX","sort","pointY","childNode","itemIndex","childIndex","relevantNode","relIndex","endIndex","groupIndex","baseNum","_baseNum","calcSvgWidth","nodeNumber","sreenWidth","body","clientWidth","calcSvgHeight","clientHeight","doAction","lastNode","outBlur","open","subscribeMessage","token","radioGroupChange","radioGroupChangeDoneOrTodo","opentask","getAttribute","emitModal","val","currentUser","$currentUser","username","nickname","userId","c","subjectName","style","catch","content","$Modal","flow_pulseGraph","fix","_e","_l","xmlns","in","dx","dy","values","stdDeviation","in2","mode","markerUnits","markerWidth","markerHeight","viewBox","refX","refY","orient","fill","x1","y1","x2","y2","stop-color","stop-opacity","offset","business","class","svg-image-style-opacity","isPermitted","svg-image-style","xlink:href","rx","$event","stopPropagation","cx","cy","r","stroke-width","font-size","stroke","points","marker-end","pulseGraph_Component","pulseGraph_normalizeComponent","__webpack_exports__","resubscribe","_isReconnecting","_connectionStateChangeHandler","_handleConnectionStateChanges","SEP","sendData","arg","ctx","$export","toObject","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","arrayLike","step","O","aLen","mapfn","mapping","iterFn","next","done","_register","_counter","_onConnectionStateChanged","__timeout","_onTimeout","_getUniqueName","uniqueName","connectionState","CardItem","taskCount","appinfo","allTaskCount","deep","appInfo","popperShow","card_CardItem","on-popper-show","count","text","src","transName","components_card_CardItem","CardList","card_CardList","gutter","menuItem","span","components_card_CardList","CardList_normalizeComponent","HomePage","PulseGraph","cutView","menuList","favoriteMenu","leaf","abc","pulseGraphLlistr","isAdmin","isSysRoleList","o","urlMd5","changeView","currentTarget","goAppManage","location","Id","loop","newUrl","MD5","home_HomePage","pulse","HomePage_Component","HomePage_normalizeComponent","stringifyPrimitive","isFinite","objectKeys","ks","_createClass","defineProperties","descriptor","configurable","writable","Constructor","protoProps","staticProps","validateArguments","defaultAction","instance","_classCallCheck","_queryEmitter","_subscribeEmitter","_flush","_flushTimeout","_pendingSubscribes","_pendingUnsubscribes","users","queryId","_sendGlobalSubscription","_sendSubscriptionBulk","pendingSubscribes","pendingUnsubscribes","names","_onDiscard","_onReady","_queuedMethods","_beforeStructure","_hasAddListener","_hasRemoveListener","_hasMoveListener","getEntries","isEmpty","setEntries","_beforeChange","_afterChange","removeEntry","currentEntries","hasIndex","_hasIndex","addEntry","listCallback","wrappedCallback","_getStructure","after","before","structure","TRIM_REGULAR_EXPRESSION","isNode","process","inputString","objA","objB","copy","intervalDuration","start","didTimeout","timeRemaining","max","cancelIdleCallback","hasUrlProtocol","unsupportedProtocol","URL","initialURl","defaultPath","serverUrl"],"mappings":"wDAEA,IAAAA,EAAAC,EAAA,QACAC,EAAAD,EAAA,QAeAE,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACAC,KAAAC,SAAAH,EACAE,KAAAE,UAAAL,EACAG,KAAAG,QAAAJ,EACAC,KAAAI,oBAAAL,EAAAM,0BACAL,KAAAM,YAAAN,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAC,IACAC,OAAAnB,EAAAoB,QAAAC,IACAjB,OACAkB,QAAAd,KAAAC,SAAAc,cACAlB,SAAAG,KAAAgB,MAAAC,KAAAjB,QAEAA,KAAAkB,iBAAAlB,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAC,IACAC,OAAAnB,EAAAoB,QAAAO,QACAvB,OACAwB,MAAA5B,EAAA6B,MAAAC,iBACAR,QAAAd,KAAAC,SAAAsB,mBACA1B,SAAAG,KAAAgB,MAAAC,KAAAjB,SAUAL,EAAA6B,UAAAC,IAAA,WACAzB,KAAAI,oBAAAsB,QACAC,MAAA3B,KAAAM,eAaAX,EAAA6B,UAAAI,QAAA,SAAAC,GACA,IAAAC,EAAApC,EAAAqC,aAAAF,EAAA7B,KAAAG,SACAH,KAAAE,UAAA,KAAA4B,GACA9B,KAAAgC,aAcArC,EAAA6B,UAAAR,MAAA,SAAAF,GACAd,KAAAE,UAAAY,EAAAM,OAAAN,GACAd,KAAAgC,aAUArC,EAAA6B,UAAAQ,UAAA,WACAhC,KAAAI,oBAAAsB,QACAC,MAAA3B,KAAAM,cAEAN,KAAAI,oBAAAsB,QACAC,MAAA3B,KAAAkB,oBAIAe,EAAAC,QAAAvC,sECjGA,IAAAwC,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAZ,UAAA,gBAAAc,GAE5IE,EAAAC,EAAAC,WAAAD,EAAAE,aACAC,EAAAnD,EAAA,GACAC,EAAAD,EAAA,QACAoD,EAAApD,EAAA,QACAqD,EAAArD,EAAA,QACAD,EAAAC,EAAA,QAWAsD,EAAA,SAAAhD,EAAAiD,EAAAlD,GACAE,KAAAG,QAAAJ,EACAC,KAAAC,SAAAH,EACAE,KAAAiD,YAAA,KACAjD,KAAAkD,cAAA,KACAlD,KAAAmD,kBAAA,EACAnD,KAAAoD,cAAA,EACApD,KAAAqD,sBAAA,EACArD,KAAAsD,kCAAA,EACAtD,KAAAuD,kBAAA,EACAvD,KAAAwD,mBACAxD,KAAAyD,kBAAA,KACAzD,KAAA0D,qBAAA,EACA1D,KAAA2D,2BAAA,EACA3D,KAAA4D,uBAAA,KACA5D,KAAA6D,4BAAA,KACA7D,KAAA8D,UAAA,KACA9D,KAAA+D,eAAA,KACA/D,KAAAgE,mBAAA,KAEAhE,KAAAiE,aAAAnB,EAAAoB,SAAAlB,EAAAhD,KAAAC,SAAAkE,MACAnE,KAAAoE,KAAApE,KAAAiE,aAEAjE,KAAAqE,OAAA7E,EAAA8E,iBAAAC,OACAvE,KAAAwE,mBAUAzB,EAAAvB,UAAAiD,SAAA,WACA,OAAAzE,KAAAqE,QAeAtB,EAAAvB,UAAAkD,aAAA,SAAAC,EAAA9E,GACA,wBAAA8E,EAAA,YAAAxC,EAAAwC,IAAA,CAQA,GAHA3E,KAAAiD,YAAA0B,EACA3E,KAAAkD,cAAArD,IAEAG,KAAAqD,sBAAArD,KAAAuD,kBAAAvD,KAAAsD,kCAGG,WAAAtD,KAAAmD,kBAAAnD,KAAAqE,SAAA7E,EAAA8E,iBAAAC,QACHvE,KAAAwE,uBACAxE,KAAAmD,kBAAA,SAIAnD,KAAAqE,SAAA7E,EAAA8E,iBAAAM,yBACA5E,KAAA6E,mBATA7E,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAsE,MAAAvF,EAAA6B,MAAA2D,UAAA,4CARAhF,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAsE,MAAAvF,EAAA6B,MAAA4D,iBAAA,gCAiCAlC,EAAAvB,UAAA0D,QAAA,SAAA1E,EAAAG,EAAAkB,GACA7B,KAAAmF,KAAAtC,EAAAuC,OAAA5E,EAAAG,EAAAkB,KAaAkB,EAAAvB,UAAA2D,KAAA,SAAAE,GACArF,KAAAwD,gBAAA8B,KAAAD,GACArF,KAAA2D,6BAEA,OAAA3D,KAAA6D,8BACA7D,KAAA6D,4BAAAf,EAAAyC,SAAAvF,KAAAwF,0BAAAvE,KAAAjB,QAGAA,KAAAqE,SAAA7E,EAAA8E,iBAAAmB,MAAAzF,KAAAwD,gBAAAkC,OAAA1F,KAAAC,SAAA0F,sBAAA3F,KAAA2D,2BAAA3D,KAAAC,SAAA0F,qBACA3F,KAAA4F,sBACG,OAAA5F,KAAA4D,wBACH5D,KAAA6F,oBAYA9C,EAAAvB,UAAAsE,MAAA,WACAC,cAAA/F,KAAAgE,oBACAhE,KAAAmD,kBAAA,EACAnD,KAAA8D,UAAAgC,SAUA/C,EAAAvB,UAAAgD,gBAAA,WACAxE,KAAA8D,UAAAtB,EAAA,IAAAA,EAAAxC,KAAAoE,MAAA,IAAAxB,EAAA5C,KAAAoE,KAAApE,KAAAC,SAAA+F,mBAEAhG,KAAA8D,UAAAmC,OAAAjG,KAAAkG,QAAAjF,KAAAjB,MACAA,KAAA8D,UAAAqC,QAAAnG,KAAAoG,SAAAnF,KAAAjB,MACAA,KAAA8D,UAAAuC,QAAArG,KAAAsG,SAAArF,KAAAjB,MACAA,KAAA8D,UAAAyC,UAAAvG,KAAAwG,WAAAvF,KAAAjB,OAgBA+C,EAAAvB,UAAAgE,0BAAA,WACAxF,KAAA2D,2BAAA,EACA3D,KAAA6D,4BAAA,MAWAd,EAAAvB,UAAAoE,oBAAA,WACA,GAAA5F,KAAAqE,SAAA7E,EAAA8E,iBAAAmB,MAAAzF,KAAA8D,UAAA2C,aAAAzG,KAAA8D,UAAA2B,KAIA,OAAAzF,KAAAwD,gBAAAkC,OAAA,CAKA,IAAAL,EAAArF,KAAAwD,gBAAAkD,OAAA,EAAA1G,KAAAC,SAAA0F,sBAAAgB,KAAA,IAEA,IAAA3G,KAAAwD,gBAAAkC,OACA1F,KAAA6F,mBAEA7F,KAAA4D,uBAAA,KAGA5D,KAAA4G,QAAAvB,QAZArF,KAAA4D,uBAAA,MAwBAb,EAAAvB,UAAAoF,QAAA,SAAAvB,GACArF,KAAA8D,UAAA2C,aAAAzG,KAAA8D,UAAA2B,KACAzF,KAAA8D,UAAAqB,KAAAE,GAEArF,KAAAoG,SAAA,2DAWArD,EAAAvB,UAAAqE,iBAAA,WACA,IAAAgB,EAAA7G,KAAA4F,oBAAA3E,KAAAjB,MACA8G,EAAA9G,KAAAC,SAAA8G,iCAEA/G,KAAA4D,uBAAAoD,WAAAH,EAAAC,IAUA/D,EAAAvB,UAAAqD,gBAAA,WACA7E,KAAAiH,UAAAzH,EAAA8E,iBAAA4C,gBACA,IAAAC,EAAAtE,EAAAuC,OAAA5F,EAAAiB,MAAA2G,KAAA5H,EAAAoB,QAAAO,SAAAnB,KAAAiD,cACAjD,KAAA4G,QAAAO,IAQApE,EAAAvB,UAAA6F,gBAAA,WACA,IAAAC,EAAA,EAAAtH,KAAAC,SAAAsH,kBAEAC,KAAAC,MAAAzH,KAAA+D,eAAAuD,IACAvB,cAAA/F,KAAAgE,oBACAhE,KAAA8D,UAAAgC,QACA9F,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAiH,WAAAlI,EAAA6B,MAAAsG,iBAAA,sCAAAL,EAAA,mBAYAvE,EAAAvB,UAAA0E,QAAA,WACAlG,KAAA4H,kBACA5H,KAAA+D,eAAAyD,KAAAC,MACAzH,KAAAgE,mBAAAlB,EAAA+E,YAAA7H,KAAAqH,gBAAApG,KAAAjB,WAAAC,SAAAsH,mBACAvH,KAAAiH,UAAAzH,EAAA8E,iBAAAwD,sBAeA/E,EAAAvB,UAAA4E,SAAA,SAAApF,GACA,IAAA+G,EAAA/H,KAEA+F,cAAA/F,KAAAgE,oBACAhE,KAAAiH,UAAAzH,EAAA8E,iBAAAS,OAMAiC,WAAA,WACA,IAAAgB,OAAA,EACA,kBAAAhH,EAAAiH,MAAA,iBAAAjH,EAAAiH,KACAD,EAAA,mDAAAD,EAAA9D,kBAEA,IACA+D,EAAAE,KAAAC,UAAAnH,GACO,MAAAoH,GACPJ,EAAAhH,EAAAqH,WAGAN,EAAA5H,QAAA2E,UAAAtF,EAAAiB,MAAAiH,WAAAlI,EAAA6B,MAAAsG,iBAAAK,IACG,IAcHjF,EAAAvB,UAAA8E,SAAA,WACAP,cAAA/F,KAAAgE,qBAEA,IAAAhE,KAAAoD,cACApD,KAAAoD,cAAA,EACApD,KAAAwE,oBACG,IAAAxE,KAAAmD,iBACHnD,KAAAiH,UAAAzH,EAAA8E,iBAAAC,QAEAvE,KAAAsI,iBAYAvF,EAAAvB,UAAAgF,WAAA,SAAAnB,GAGA,IAFA,IAAAkD,EAAA7I,EAAA8I,MAAAnD,EAAAxD,KAAA7B,KAAAG,SAEAsI,EAAA,EAAiBA,EAAAF,EAAA7C,OAA2B+C,IAC5C,OAAAF,EAAAE,KAEKF,EAAAE,GAAAjI,QAAAhB,EAAAiB,MAAAiH,WACL1H,KAAA0I,0BAAAH,EAAAE,IACKF,EAAAE,GAAAjI,QAAAhB,EAAAiB,MAAA2G,KACLpH,KAAA2I,oBAAAJ,EAAAE,IAEAzI,KAAAG,QAAAyI,YAAAL,EAAAE,MA2BA1F,EAAAvB,UAAAkH,0BAAA,SAAArD,GACAA,EAAA1E,SAAAnB,EAAAoB,QAAAiI,MACA7I,KAAA+D,eAAAyD,KAAAC,MACAzH,KAAA4G,QAAA/D,EAAAuC,OAAA5F,EAAAiB,MAAAiH,WAAAlI,EAAAoB,QAAAkI,QACGzD,EAAA1E,SAAAnB,EAAAoB,QAAAC,KACHb,KAAAiH,UAAAzH,EAAA8E,iBAAAM,yBACA5E,KAAAiD,aACAjD,KAAA6E,mBAEGQ,EAAA1E,SAAAnB,EAAAoB,QAAAmI,WACH/I,KAAAiH,UAAAzH,EAAA8E,iBAAA0E,aACAhJ,KAAA4G,QAAA/D,EAAAuC,OAAA5F,EAAAiB,MAAAiH,WAAAlI,EAAAoB,QAAAqI,oBAAAjJ,KAAAiE,iBACGoB,EAAA1E,SAAAnB,EAAAoB,QAAAsI,WACHlJ,KAAAuD,kBAAA,EACAvD,KAAA8F,SACGT,EAAA1E,SAAAnB,EAAAoB,QAAAuI,UACHnJ,KAAAoE,KAAAiB,EAAAxD,KAAA,GACA7B,KAAAoD,cAAA,EACApD,KAAA8D,UAAAgC,SACGT,EAAA1E,SAAAnB,EAAAoB,QAAAmE,OACHM,EAAAxD,KAAA,KAAArC,EAAA6B,MAAA+H,oCACApJ,KAAAmD,kBAAA,EACAnD,KAAAsD,kCAAA,EACAtD,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAiH,WAAArC,EAAAxD,KAAA,GAAAwD,EAAAxD,KAAA,MAgBAkB,EAAAvB,UAAAmH,oBAAA,SAAAtD,GACA,GAAAA,EAAA1E,SAAAnB,EAAAoB,QAAAmE,MAAA,CAEA,GAAAM,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAgI,uBACArJ,KAAAmD,kBAAA,EACAnD,KAAAqD,sBAAA,MACK,IAAAgC,EAAAxD,KAAA,KAAArC,EAAA6B,MAAA4D,iBAOL,OANAjF,KAAAmD,kBAAA,OAEAnD,KAAAkD,eACAlD,KAAAkD,eAAA,qCAKAlD,KAAAiH,UAAAzH,EAAA8E,iBAAAM,yBAGA5E,KAAAkD,eACAlD,KAAAkD,eAAA,EAAAlD,KAAAsJ,aAAAjE,EAAAxD,KAAA,UAEGwD,EAAA1E,SAAAnB,EAAAoB,QAAAC,MACHb,KAAAiH,UAAAzH,EAAA8E,iBAAAmB,MAEAzF,KAAAkD,eACAlD,KAAAkD,eAAA,EAAAlD,KAAAsJ,aAAAjE,EAAAxD,KAAA,KAGA7B,KAAA4F,wBAaA7C,EAAAvB,UAAA8H,aAAA,SAAAzH,GACA,YAAA0H,IAAA1H,EACA,KAEAnC,EAAAqC,aAAAF,EAAA7B,KAAAG,UAUA4C,EAAAvB,UAAAyF,UAAA,SAAAuC,GACAxJ,KAAAqE,OAAAmF,EACAxJ,KAAAG,QAAAsJ,KAAAjK,EAAA6B,MAAAqI,yBAAAF,IAaAzG,EAAAvB,UAAA8G,cAAA,WACA,OAAAtI,KAAAyD,oBAIAzD,KAAA0D,qBAAA1D,KAAAC,SAAA0J,sBACA3J,KAAAiH,UAAAzH,EAAA8E,iBAAAsF,cACA5J,KAAAyD,kBAAAuD,WAAAhH,KAAA6J,SAAA5I,KAAAjB,MAAA8J,KAAAC,IAAA/J,KAAAC,SAAA+J,qBAAAhK,KAAAC,SAAAgK,2BAAAjK,KAAA0D,uBACA1D,KAAA0D,yBAEA1D,KAAA4H,kBACA5H,KAAA8F,QACA9F,KAAAG,QAAAsJ,KAAAjK,EAAA6B,MAAA6I,kCAAAlK,KAAA0D,yBAUAX,EAAAvB,UAAAqI,SAAA,WACA7J,KAAAiE,eAAAjE,KAAAoE,OACApE,KAAAoE,KAAApE,KAAAiE,cAEAjE,KAAAwE,kBACAxE,KAAAyD,kBAAA,MAYAV,EAAAvB,UAAAoG,gBAAA,WACAuC,aAAAnK,KAAAyD,mBACAzD,KAAAyD,kBAAA,KACAzD,KAAA0D,qBAAA,GAGAzB,EAAAC,QAAAa,2DChiBAb,EAAAkI,OAAAlI,EAAAsG,MAAA/I,EAAA,QACAyC,EAAAmI,OAAAnI,EAAAiG,UAAA1I,EAAA,4ECHAwC,EAAAC,QAAA,SAAAD,GAoBA,OAnBAA,EAAAqI,kBACArI,EAAAsI,UAAA,aACAtI,EAAAuI,SAEAvI,EAAAwI,WAAAxI,EAAAwI,aACAC,OAAAC,eAAA1I,EAAA,UACA2I,YAAA,EACAC,IAAA,WACA,OAAA5I,EAAA6I,KAGAJ,OAAAC,eAAA1I,EAAA,MACA2I,YAAA,EACAC,IAAA,WACA,OAAA5I,EAAAwG,KAGAxG,EAAAqI,gBAAA,GAEArI,wCClBA,IAAAzC,EAAAC,EAAA,QACAsL,EAAAtL,EAAA,QACAuL,EAAAvL,EAAA,QACAsD,EAAAtD,EAAA,QACAwL,EAAAxL,EAAA,QACAyL,EAAAzL,EAAA,QACA0L,EAAA1L,EAAA,QACA2L,EAAA3L,EAAA,QACA4L,EAAA5L,EAAA,QACA6L,EAAA7L,EAAA,QAkBA8L,EAAA,SAAAvI,EAAAlD,GACAE,KAAAoE,KAAApB,EACAhD,KAAAC,SAAAD,KAAAwL,YAAA1L,OAEAE,KAAAyL,YAAA,IAAA1I,EAAA/C,UAAAoE,KAAApE,KAAAC,UACAD,KAAAI,oBAAA,IAAAkL,EAAAtL,UAAAC,UAEAD,KAAAoB,MAAA,IAAA6J,EAAAjL,KAAAC,SAAAD,KAAAyL,YAAAzL,MACAA,KAAA0L,IAAA,IAAAR,EAAAlL,KAAAC,SAAAD,KAAAyL,YAAAzL,MACAA,KAAA2L,OAAA,IAAAR,EAAAnL,KAAAC,SAAAD,KAAAyL,YAAAzL,MACAA,KAAA4L,SAAA,IAAAR,EAAApL,KAAAC,SAAAD,KAAAyL,YAAAzL,MAEAA,KAAA6L,qBACA7L,KAAA6L,kBAAArM,EAAAiB,MAAAY,OAAArB,KAAAoB,MAAA0K,SAAA7K,KAAAjB,KAAAoB,OACApB,KAAA6L,kBAAArM,EAAAiB,MAAAC,KAAAV,KAAA0L,IAAAI,SAAA7K,KAAAjB,KAAA0L,KACA1L,KAAA6L,kBAAArM,EAAAiB,MAAAsL,QAAA/L,KAAA2L,OAAAG,SAAA7K,KAAAjB,KAAA2L,QACA3L,KAAA6L,kBAAArM,EAAAiB,MAAAuL,UAAAhM,KAAA4L,SAAAE,SAAA7K,KAAAjB,KAAA4L,UACA5L,KAAA6L,kBAAArM,EAAAiB,MAAAsE,OAAA/E,KAAAiM,gBAAAhL,KAAAjB,OA+MA,SAAAkM,EAAAlJ,EAAAlD,GACA,WAAAyL,EAAAvI,EAAAlD,GA7MAkL,EAAAO,EAAA/J,WA6BA+J,EAAA/J,UAAA2K,MAAA,SAAAC,EAAAvM,GAMA,MALA,mBAAAuM,EACApM,KAAAyL,YAAA/G,gBAAoC0H,GAEpCpM,KAAAyL,YAAA/G,aAAA0H,MAA4DvM,GAE5DG,MASAuL,EAAA/J,UAAAsE,MAAA,WACA9F,KAAAyL,YAAA3F,SAUAyF,EAAA/J,UAAA6K,mBAAA,WACA,OAAArM,KAAAyL,YAAAhH,YAWA8G,EAAA/J,UAAA8K,OAAA,WAIA,OAHA,IAAA9E,MAAA+E,UAAAlE,SAAA,IAGA,KAFA,KAAAyB,KAAA0C,UAAAnE,SAAA,IAAAoE,QAAA,SAaAlB,EAAA/J,UAAAnB,wBAAA,WACA,OAAAL,KAAAI,qBAYAmL,EAAA/J,UAAAoH,YAAA,SAAAvD,GACArF,KAAA6L,kBAAAxG,EAAA7E,OACAR,KAAA6L,kBAAAxG,EAAA7E,OAAA6E,IAEAA,EAAAqH,gBAAA,EACA1M,KAAA8E,UAAAO,EAAA7E,MAAAhB,EAAA6B,MAAAsL,oBAAA,sCAAAtH,EAAA7E,QAGA6E,EAAA1E,SAAAnB,EAAAoB,QAAAmE,OAAAM,EAAAqH,gBACA1M,KAAA8E,UAAAO,EAAA7E,MAAA6E,EAAAxD,KAAA,GAAAwD,EAAAxD,KAAA+K,MAAA,KAwBArB,EAAA/J,UAAAsD,UAAA,SAAAtE,EAAAY,EAAA4G,GACA,IAAA6E,OAAA,EAaA,GAPAzL,IAAA5B,EAAA6B,MAAAyL,aAAA1L,IAAA5B,EAAA6B,MAAAC,kBACAtB,KAAAqM,uBAAA7M,EAAA8E,iBAAAM,0BACAiI,EAAA,oFACA7F,WAAAhH,KAAA8E,UAAA7D,KAAAjB,KAAAR,EAAA6B,MAAA0L,kBAAAvN,EAAAiB,MAAAsE,MAAA8H,GAAA,KAIA7M,KAAAgN,aAAA,SAYA,MARAC,QAAAC,IAAA,iFAEAL,EAAAzL,EAAA,KAAA4G,EAEAxH,IACAqM,GAAA,KAAArM,EAAA,KAGA,IAAA2M,MAAAN,GAXA7M,KAAAyJ,KAAA,QAAAzB,EAAA5G,EAAAZ,GACAR,KAAAyJ,KAAArI,EAAAZ,EAAAwH,IAuBAuD,EAAA/J,UAAAyK,gBAAA,SAAAmB,GACApN,KAAA8E,UAAAsI,EAAA5M,MAAA4M,EAAAvL,KAAA,GAAAuL,EAAAvL,KAAA,KAYA0J,EAAA/J,UAAAgK,YAAA,SAAA1L,GACA,IAAAuN,KAEA,QAAAC,KAAAjC,OACA,IAAAvL,EAAAwN,GACAD,EAAAC,GAAAjC,EAAAiC,GAEAD,EAAAC,GAAAxN,EAAAwN,GAIA,OAAAD,GAoBA9B,EAAA/J,UAAA+L,UAAA/N,EACA0M,EAAAqB,UAAA/N,EAKA+L,EAAA/J,UAAAgM,iBAAAzC,EACAmB,EAAAsB,iBAAAzC,EAEA9I,EAAAC,QAAAgK,0BC7QAzM,EAAA,QACAA,EAAA,QACAwC,EAAAC,QAAAzC,EAAA,QAAAgO,MAAAC,6BCaA,SAAA1C,EAAA1I,GACA,GAAAA,EAAA,OAWA,SAAAA,GACA,QAAAgL,KAAAtC,EAAAxJ,UACAc,EAAAgL,GAAAtC,EAAAxJ,UAAA8L,GAEA,OAAAhL,EAfAqL,CAAArL,GAVAL,EAAAC,QAAA8I,EAqCAA,EAAAxJ,UAAAoM,GACA5C,EAAAxJ,UAAAqM,iBAAA,SAAAzM,EAAAyF,GAIA,OAHA7G,KAAA8N,WAAA9N,KAAA8N,YAAApD,OAAAqD,OAAA,OACA/N,KAAA8N,WAAA1M,GAAApB,KAAA8N,WAAA1M,QACAkE,KAAAuB,GACA7G,MAaAgL,EAAAxJ,UAAAwM,KAAA,SAAA5M,EAAAyF,GACA,SAAA+G,IACA5N,KAAAiO,IAAA7M,EAAAwM,GACA/G,EAAAqH,MAAAlO,KAAAmO,WAKA,OAFAP,EAAA/G,KACA7G,KAAA4N,GAAAxM,EAAAwM,GACA5N,MAaAgL,EAAAxJ,UAAAyM,IACAjD,EAAAxJ,UAAA4M,eACApD,EAAAxJ,UAAA6M,mBACArD,EAAAxJ,UAAA8M,oBAAA,SAAAlN,EAAAyF,GAIA,GAHA7G,KAAA8N,WAAA9N,KAAA8N,YAAApD,OAAAqD,OAAA,MAGA,GAAAI,UAAAzI,OAEA,OADA1F,KAAA8N,WAAApD,OAAAqD,OAAA,MACA/N,KAIA,IAUAuO,EAVAC,EAAAxO,KAAA8N,WAAA1M,GACA,IAAAoN,EAAA,OAAAxO,KAGA,MAAAmO,UAAAzI,OAEA,cADA1F,KAAA8N,WAAA1M,GACApB,KAKA,QAAAyI,EAAA,EAAiBA,EAAA+F,EAAA9I,OAAsB+C,IAEvC,IADA8F,EAAAC,EAAA/F,MACA5B,GAAA0H,EAAA1H,OAAA,CACA2H,EAAA9H,OAAA+B,EAAA,GACA,MAUA,OAJA,IAAA+F,EAAA9I,eACA1F,KAAA8N,WAAA1M,GAGApB,MAWAgL,EAAAxJ,UAAAiI,KAAA,SAAArI,GACApB,KAAA8N,WAAA9N,KAAA8N,YAAApD,OAAAqD,OAAA,MAKA,IAHA,IAAAU,EAAA,IAAAhB,MAAAU,UAAAzI,OAAA,GACA8I,EAAAxO,KAAA8N,WAAA1M,GAEAqH,EAAA,EAAiBA,EAAA0F,UAAAzI,OAAsB+C,IACvCgG,EAAAhG,EAAA,GAAA0F,UAAA1F,GAGA,GAAA+F,EAEA,CAAA/F,EAAA,UAAAiG,GADAF,IAAA5B,MAAA,IACAlH,OAA2C+C,EAAAiG,IAASjG,EACpD+F,EAAA/F,GAAAyF,MAAAlO,KAAAyO,GAIA,OAAAzO,MAWAgL,EAAAxJ,UAAAmN,UAAA,SAAAvN,GAEA,OADApB,KAAA8N,WAAA9N,KAAA8N,YAAApD,OAAAqD,OAAA,MACA/N,KAAA8N,WAAA1M,QAWA4J,EAAAxJ,UAAAwL,aAAA,SAAA5L,GACA,QAAApB,KAAA2O,UAAAvN,GAAAsE,QASAsF,EAAAxJ,UAAAoN,WAAA,WACA,OAAA5O,KAAA8N,WAAApD,OAAAmE,KAAA7O,KAAA8N,0ECrLA,IAAA3L,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAZ,UAAA,gBAAAc,GAE5IQ,EAAArD,EAAA,QAEAqP,EAAA,gBACAC,EAAArE,OAAAqD,OAAA,MAyEA,SAAAiB,EAAAC,EAAAC,EAAAC,GACA,IAAA1G,OAAA,EACA2G,OAAA,EACA,UAAAH,GAAA,OAAAC,EACA,OAAAA,EACG,GAAAzB,MAAA4B,QAAAJ,IAAAxB,MAAA4B,QAAAH,GAAA,CACH,IAAAI,OAAA,EACA,IAAA7G,EAAA,EAAeA,EAAAyG,EAAAxJ,OAAqB+C,IAAA,CACpC,IAAA8G,EAAAP,EAAAC,EAAAxG,GAAAyG,EAAAzG,IAAA,GACA,IAAA6G,EAAA,CACA,GAAAC,IAAAN,EAAAxG,GACA,SAGA,IADA6G,KACAF,EAAA,EAAmBA,EAAA3G,IAAO2G,EAC1BE,EAAAF,GAAAH,EAAAG,GAGAE,EAAA7G,GAAA8G,EAIA,OADAD,GADAA,MAAA,IAAAH,EAAArM,EAAAqM,SAAAG,QACAL,EAAAvJ,SAAAwJ,EAAAxJ,OAAAuJ,EAAAC,GAEG,IAAAzB,MAAA4B,QAAAH,IAAA,qBAAAD,EAAA,YAAA9M,EAAA8M,KAAA,qBAAAC,EAAA,YAAA/M,EAAA+M,IAAA,CACH,IAAA5M,OAAA,EACAkN,EAAA9E,OAAAmE,KAAAK,GACA,IAAAzG,EAAA,EAAeA,EAAA+G,EAAA9J,OAAkB+C,IAAA,CACjC,IAAAgH,EAAAT,EAAAC,EAAAO,EAAA/G,IAAAyG,EAAAM,EAAA/G,KAAA,GACA,IAAAnG,EAAA,CACA,GAAAmN,IAAAR,EAAAO,EAAA/G,IACA,SAGA,IADAnG,EAAAoI,OAAAqD,OAAA,MACAqB,EAAA,EAAmBA,EAAA3G,IAAO2G,EAC1B9M,EAAAkN,EAAAJ,IAAAH,EAAAO,EAAAJ,IAGA9M,EAAAkN,EAAA/G,IAAAyG,EAAAM,EAAA/G,IAIA,OADAnG,GADAA,MAAA,IAAA6M,EAAArM,EAAAqM,SAAA7M,QACAoI,OAAAmE,KAAAI,GAAAvJ,SAAA8J,EAAA9J,OAAAuJ,EAAAC,GAEG,OAAAA,IAAAD,GACH,IAAAE,EAAArM,EAAAqM,SAAAD,KAGAD,EASA,SAAAS,EAAAvL,GACA,GAAA4K,EAAA5K,GACA,OAAA4K,EAAA5K,GAGA,IAAAwL,EAAA,cAAAC,OAAAzL,GAAAyL,OAAAzL,GAAA0L,MAAAf,MAEA,IAAAa,EACA,UAAAxC,MAAA,gBAAAhJ,GAIA,OADA4K,EAAA5K,GAAAwL,EACAZ,EAAA5K,GAnIAlC,EAAAC,QAAA2I,IAAA,SAAAhJ,EAAAsC,EAAAgL,GAGA,IAFA,IAAAW,EAAAJ,EAAAvL,GACAoL,EAAA1N,EACA4G,EAAA,EAAiBA,EAAAqH,EAAApK,OAAmB+C,IAAA,CACpC,QAAAc,IAAAgG,EACA,OAEA,wBAAAA,EAAA,YAAApN,EAAAoN,IACA,UAAApC,MAAA,wBAEAoC,IAAAO,EAAArH,IAGA,WAAA0G,EAAArM,EAAAqM,SAAAI,MAYAtN,EAAAC,QAAA6N,IAAA,SAAAlO,EAAAsC,EAAAoL,EAAAJ,GACA,IAAAW,EAAAJ,EAAAvL,GAEA,OAAA2L,EAAApK,OACA,OAAAsJ,EAAAnN,EAAA0N,EAAAJ,GAGA,IAAAF,EAAAhN,EAAAC,QAAA2I,IAAAhJ,EAAAsC,GAAA,GACA+K,EAAAF,EAAAC,EAAAM,EAAAJ,GAEA,GAAAD,IAAAD,EACA,OAAApN,EAMA,IAHA,IAAAmO,EAAAlN,EAAAmN,YAAApO,GAEAqO,EAAAF,EACAvH,EAAA,EAAiBA,EAAAqH,EAAApK,OAAmB+C,IACpCA,IAAAqH,EAAApK,OAAA,EACAwK,EAAAJ,EAAArH,IAAAyG,EAEAgB,OADK3G,IAAA2G,EAAAJ,EAAArH,IACLyH,EAAAJ,EAAArH,IAAA3F,EAAAmN,YAAAC,EAAAJ,EAAArH,KACKqH,EAAArH,EAAA,KAAA0H,MAAAL,EAAArH,EAAA,IACLyH,EAAAJ,EAAArH,OAEAyH,EAAAJ,EAAArH,IAAAiC,OAAAqD,OAAA,MAIA,OAAAiC,sCCpEA9N,EAAAkO,YAAA,EAEA,IAIA9N,EAJA+N,EAAA5Q,EAAA,QAEA6Q,GAEAhO,EAFA+N,IAEsC/N,EAAA8N,WAAA9N,GAAuCiO,QAAAjO,GAE7EJ,EAAAqO,QAAA,SAAAjB,GACA,GAAA7B,MAAA4B,QAAAC,GAAA,CACA,QAAA7G,EAAA,EAAA+H,EAAA/C,MAAA6B,EAAA5J,QAA6C+C,EAAA6G,EAAA5J,OAAgB+C,IAC7D+H,EAAA/H,GAAA6G,EAAA7G,GAGA,OAAA+H,EAEA,SAAAF,EAAAC,SAAAjB,uCChBArN,EAAAC,SAIAuO,YAAA,SAAA9E,EAAA+E,EAAAC,EAAA9Q,GACAA,EAAA,KAAA6Q,IAMAE,WAAA,SAAAjF,EAAA+E,EAAAC,EAAA9Q,GACAA,EAAA,KAAA8L,EAAAd,4CCZA,IAAAhI,EAAApD,EAAA,QACAC,EAAAD,EAAA,QACAoR,EAAApR,EAAA,QACAD,EAAAC,EAAA,QACAqR,EAAArR,EAAA,QACAsR,EAAAtR,EAAA,QAaAwL,EAAA,SAAAnL,EAAAkR,EAAAjR,GACAC,KAAAC,SAAAH,EACAE,KAAAyL,YAAAuF,EACAhR,KAAAG,QAAAJ,EACAC,KAAAiR,SAAA,IAAAF,EACA/Q,KAAAkR,aACAlR,KAAAI,oBAAAL,EAAAM,0BACAL,KAAAmR,qBAAA,IAAAN,EAAA7Q,KAAAG,QAAAH,KAAAoR,aAAAnQ,KAAAjB,QAaAiL,EAAAzJ,UAAA6P,UAAA,SAAAzR,EAAAC,GACA,oBAAAD,GAAA,IAAAA,EAAA8F,OACA,UAAAyH,MAAA,yBAEA,sBAAAtN,EACA,UAAAsN,MAAA,6BAGAnN,KAAAiR,SAAAjE,aAAApN,KACAI,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAY,MACAV,OAAAnB,EAAAoB,QAAA0Q,UACA1R,SAEAI,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAY,MAAA7B,EAAAoB,QAAA0Q,WAAA1R,KAGAI,KAAAiR,SAAArD,GAAAhO,EAAAC,IAcAoL,EAAAzJ,UAAA+P,YAAA,SAAA3R,EAAAC,GACA,oBAAAD,GAAA,IAAAA,EAAA8F,OACA,UAAAyH,MAAA,yBAEA,QAAA5D,IAAA1J,GAAA,mBAAAA,EACA,UAAAsN,MAAA,6BAEAnN,KAAAiR,SAAAhD,IAAArO,EAAAC,GAEAG,KAAAiR,SAAAjE,aAAApN,KACAI,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAY,MACAV,OAAAnB,EAAAoB,QAAA4Q,YACA5R,SAEAI,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAY,MAAA7B,EAAAoB,QAAA4Q,aAAA5R,MAcAqL,EAAAzJ,UAAAiI,KAAA,SAAA7J,EAAAiC,GACA,oBAAAjC,GAAA,IAAAA,EAAA8F,OACA,UAAAyH,MAAA,yBAGAnN,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAY,MAAA7B,EAAAoB,QAAAS,OAAAzB,EAAAiD,EAAA4O,MAAA5P,KACA7B,KAAAiR,SAAAxH,KAAA7J,EAAAiC,IAcAoJ,EAAAzJ,UAAAkQ,OAAA,SAAAC,EAAA9R,GACA,oBAAA8R,GAAA,IAAAA,EAAAjM,OACA,UAAAyH,MAAA,4BAEA,sBAAAtN,EACA,UAAAsN,MAAA,8BAGAnN,KAAAkR,UAAAS,IAAA3R,KAAAkR,UAAAS,GAAAC,gBAGG5R,KAAAkR,UAAAS,IACH3R,KAAAkR,UAAAS,GAAAE,UAGA7R,KAAAkR,UAAAS,GAAA,IAAAb,EAAAtR,EAAAiB,MAAAY,MAAAsQ,EAAA9R,EAAAG,KAAAC,SAAAD,KAAAG,QAAAH,KAAAyL,cANAzL,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAY,MAAA7B,EAAA6B,MAAAyQ,gBAAAH,IAkBA1G,EAAAzJ,UAAAuQ,SAAA,SAAAJ,GACA,oBAAAA,GAAA,IAAAA,EAAAjM,OACA,UAAAyH,MAAA,4BAGA,IAAA6E,EAAAhS,KAAAkR,UAAAS,GAEAK,MAAAJ,eACAI,EAAAC,cACGjS,KAAAkR,UAAAS,IACH3R,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAY,MACAV,OAAAnB,EAAA6B,MAAA6Q,SACAtS,KAAA+R,IAEA3R,KAAAkR,UAAAS,GAAAE,iBACA7R,KAAAkR,UAAAS,IAEA3R,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAsL,OAAAvM,EAAA6B,MAAA8Q,cAAAR,IAYA1G,EAAAzJ,UAAAsK,SAAA,SAAAzG,GACA,IAAAzF,EAAAyF,EAAAxD,KAAAwD,EAAA1E,SAAAnB,EAAAoB,QAAAC,IAAA,KAEA,GAAAwE,EAAA1E,SAAAnB,EAAAoB,QAAAS,MAAA,CASA,GAAAgE,EAAA1E,SAAAnB,EAAAoB,QAAAC,KAAAwE,EAAAxD,KAAA,KAAArC,EAAAoB,QAAAsR,UAAAlS,KAAAkR,UAAAtR,IAAAI,KAAAkR,UAAAtR,GAAAgS,eAGA,OAFA5R,KAAAkR,UAAAtR,GAAAiS,sBACA7R,KAAAkR,UAAAtR,GAEG,GAAAI,KAAAkR,UAAAtR,GACHI,KAAAkR,UAAAtR,GAAAgJ,YAAAvD,QAEG,GAAAA,EAAA1E,SAAAnB,EAAAoB,QAAAwR,kCAGA/M,EAAA1E,SAAAnB,EAAAoB,QAAAyR,0BAAA,CAKH,GAAAhN,EAAA1E,SAAAnB,EAAAoB,QAAAC,IAKA,OAAAwE,EAAA1E,SAAAnB,EAAAoB,QAAAmE,OACAM,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAiR,eACAtS,KAAAI,oBAAAsB,QACAlB,MAAAhB,EAAAiB,MAAAY,MACAzB,KAAAyF,EAAAxD,KAAA,GACAlB,OAAA0E,EAAAxD,KAAA,KAEKwD,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAkR,gBACLvS,KAAAI,oBAAAsB,QACAlB,MAAAhB,EAAAiB,MAAAY,MACAzB,KAAAyF,EAAAxD,KAAA,GACAlB,OAAAnB,EAAAoB,QAAA4Q,cAGAnM,EAAAqH,gBAAA,OACA1M,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAY,MAAAgE,EAAAxD,KAAA,GAAAwD,EAAAxD,KAAA,UAIA7B,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAY,MAAA7B,EAAA6B,MAAAmR,oBAAA5S,GAvBAI,KAAAI,oBAAAqS,MAAApN,SAxBAA,EAAAxD,MAAA,IAAAwD,EAAAxD,KAAA6D,OACA1F,KAAAiR,SAAAxH,KAAA7J,EAAAF,EAAAqC,aAAAsD,EAAAxD,KAAA,GAAA7B,KAAAG,UAEAH,KAAAiR,SAAAxH,KAAA7J,IAqDAqL,EAAAzJ,UAAA4P,aAAA,WACA,IAAA5C,EAAAxO,KAAAiR,SAAAnD,WACA,QAAA4E,KAAAlE,EACAxO,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAY,MAAA7B,EAAAoB,QAAA0Q,WAAAoB,KAIAzQ,EAAAC,QAAA+I,uCClPA,IAAAzL,EAAAC,EAAA,QACAqD,EAAArD,EAAA,QACAoD,EAAApD,EAAA,QAUAkT,EAAA,SAAA3B,EAAApR,EAAAgT,GACA5S,KAAAyL,YAAAuF,EACAhR,KAAA6S,MAAAjT,EACAI,KAAA8S,eAAAF,EACA5S,KAAA+S,iBAAA,EACA/S,KAAAgT,aAAA,EACAhT,KAAAiT,SAAA,EACAnQ,EAAAyC,SAAAvF,KAAAkT,gBAAAjS,KAAAjB,QAWA2S,EAAAnR,UAAAC,IAAA,YACA,IAAAzB,KAAA+S,kBACA/S,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAC,IAAAlB,EAAAoB,QAAAC,KAAArB,EAAAoB,QAAAO,QAAAnB,KAAA6S,MAAA7S,KAAA8S,iBACA9S,KAAA+S,iBAAA,IAcAJ,EAAAnR,UAAA2R,OAAA,WACAnT,KAAAiT,SAAA,EACAjT,KAAAgT,aAAA,EACAhT,KAAA+S,iBAAA,EACA/S,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAC,IAAAlB,EAAAoB,QAAAsI,WAAAlJ,KAAA6S,MAAA7S,KAAA8S,kBAWAH,EAAAnR,UAAAR,MAAA,SAAA6L,GACA7M,KAAAiT,SAAA,EACAjT,KAAAgT,aAAA,EACAhT,KAAA+S,iBAAA,EACA/S,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAC,IAAAlB,EAAAoB,QAAAmE,OAAA8H,EAAA7M,KAAA6S,MAAA7S,KAAA8S,kBAgBAH,EAAAnR,UAAA2D,KAAA,SAAAtD,GACA,QAAA7B,KAAAgT,YACA,UAAA7F,MAAA,OAAAnN,KAAA6S,MAAA,sBAEA7S,KAAAyB,MAEA,IAAA2R,EAAAvQ,EAAA4O,MAAA5P,GACA7B,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAC,IAAAlB,EAAAoB,QAAAyS,UAAArT,KAAA6S,MAAA7S,KAAA8S,eAAAM,IACApT,KAAAgT,aAAA,GAUAL,EAAAnR,UAAA0R,gBAAA,YACA,IAAAlT,KAAAiT,SACAjT,KAAAyB,OAIAQ,EAAAC,QAAAyQ,qCC1GA,IAAAnT,EAAAC,EAAA,QAQA6T,EAAA,WACAtT,KAAAuT,SAAAvT,KAAAwT,eAsBAF,EAAA9R,UAAAgH,MAAA,SAAAnD,EAAAtF,GAIA,IAHA,IAAAwI,KACAkL,EAAApO,EAAAqO,MAAAlU,EAAAmU,mBAEAlL,EAAA,EAAiBA,EAAAgL,EAAA/N,OAAwB+C,IACzCgL,EAAAhL,GAAA/C,OAAA,GACA6C,EAAAjD,KAAAtF,KAAA4T,cAAAH,EAAAhL,GAAA1I,IAIA,OAAAwI,GAYA+K,EAAA9R,UAAAO,aAAA,SAAAwN,EAAAxP,GACA,IAAA8T,EAAAtE,EAAAuE,OAAA,GAEA,GAAAD,IAAArU,EAAAuU,MAAAC,OACA,OAAAzE,EAAA0E,OAAA,GAGA,GAAAJ,IAAArU,EAAAuU,MAAAG,OACA,IACA,OAAAhM,KAAAM,MAAA+G,EAAA0E,OAAA,IACK,MAAA7L,GAEL,YADArI,EAAA+E,UAAAtF,EAAAiB,MAAAsE,MAAAvF,EAAA6B,MAAAsL,oBAAAvE,EAAAC,WAAA,IAAAkH,EAAA,KAKA,OAAAsE,IAAArU,EAAAuU,MAAAI,OACAC,WAAA7E,EAAA0E,OAAA,IAGAJ,IAAArU,EAAAuU,MAAAM,KACA,KAGAR,IAAArU,EAAAuU,MAAAO,MAIAT,IAAArU,EAAAuU,MAAAQ,YAIAV,IAAArU,EAAAuU,MAAAS,WAIAzU,EAAA+E,UAAAtF,EAAAiB,MAAAsE,MAAAvF,EAAA6B,MAAAsL,oBAAA,iBAAA4C,EAAA,OAYA+D,EAAA9R,UAAAgS,YAAA,WACA,IAAAiB,KAEA,QAAAnH,KAAA9N,EAAAoB,QACA6T,EAAAjV,EAAAoB,QAAA0M,MAGA,OAAAmH,GAaAnB,EAAA9R,UAAAoS,cAAA,SAAAvO,EAAAtF,GACA,IAAA4P,EAAAtK,EAAAqO,MAAAlU,EAAAkV,wBACAC,KAEA,OAAAhF,EAAAjK,OAAA,GACA3F,EAAA+E,UAAAtF,EAAAiB,MAAAsE,MAAAvF,EAAA6B,MAAAsL,oBAAA,8BACA,WAGApD,IAAAvJ,KAAAuT,SAAA5D,EAAA,KACA5P,EAAA+E,UAAAtF,EAAAiB,MAAAsE,MAAAvF,EAAA6B,MAAAsL,oBAAA,kBAAAgD,EAAA,IACA,OAGAgF,EAAAC,IAAAvP,EACAsP,EAAAnU,MAAAmP,EAAA,GACAgF,EAAAhU,OAAAgP,EAAA,GACAgF,EAAA9S,KAAA8N,EAAAjJ,OAAA,GAEAiO,IAGA1S,EAAAC,QAAA,IAAAoR,qCC/IA,IAAA9F,EAAA/N,EAAA,QAEAwC,EAAAC,SAQAqF,kBAAA,IAaA0C,2BAAA,IAQAD,qBAAA,KAMAL,qBAAA,EAMA5I,cAAA,IAOAQ,mBAAA,IAQAsT,oBAAA,IAeAlP,qBAAA,IAOAoB,iCAAA,GAOA+N,qBAAA,KAOAC,kBAAA,KAWAC,oBAAA,KAKA7Q,KAAA,cAUA8Q,cAAAzH,EAAAiD,YAQAyE,gBAAA,EASAlP,kBAAA,2CC3IA,IAAAmP,qDACC,SAAAC,GAGD,iBAAAlT,MACAA,EAAAmT,SACA,iBAAApT,MACAA,EAAAoT,SAHA,IAIAC,EAAA,iBAAA7S,KAEA6S,EAAA7S,SAAA6S,GACAA,EAAAC,SAAAD,GACAA,EAAAE,KAUA,IAAAC,EAGAC,EAAA,WAGAC,EAAA,GACAC,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,IACAC,EAAA,GACAC,EAAA,IACAC,EAAA,IAGAC,EAAA,QACAC,EAAA,eACAC,EAAA,4BAGAC,GACAC,SAAA,kDACAC,YAAA,iDACAC,gBAAA,iBAIAC,EAAAf,EAAAC,EACAe,EAAA7M,KAAA6M,MACAC,EAAAhH,OAAAiH,aAaA,SAAA7V,EAAA6S,GACA,UAAAiD,WAAAR,EAAAzC,IAWA,SAAAkD,EAAAC,EAAAnQ,GAGA,IAFA,IAAAnB,EAAAsR,EAAAtR,OACAsK,KACAtK,KACAsK,EAAAtK,GAAAmB,EAAAmQ,EAAAtR,IAEA,OAAAsK,EAaA,SAAAiH,EAAAC,EAAArQ,GACA,IAAA8I,EAAAuH,EAAAxD,MAAA,KACA1D,EAAA,GAWA,OAVAL,EAAAjK,OAAA,IAGAsK,EAAAL,EAAA,OACAuH,EAAAvH,EAAA,IAMAK,EADA+G,GAFAG,IAAAzK,QAAA4J,EAAA,MACA3C,MAAA,KACA7M,GAAAF,KAAA,KAiBA,SAAAwQ,EAAAD,GAMA,IALA,IAGA3H,EACA6H,EAJAC,KACAC,EAAA,EACA5R,EAAAwR,EAAAxR,OAGA4R,EAAA5R,IACA6J,EAAA2H,EAAAK,WAAAD,OACA,OAAA/H,GAAA,OAAA+H,EAAA5R,EAGA,eADA0R,EAAAF,EAAAK,WAAAD,OAEAD,EAAA/R,OAAA,KAAAiK,IAAA,UAAA6H,GAAA,QAIAC,EAAA/R,KAAAiK,GACA+H,KAGAD,EAAA/R,KAAAiK,GAGA,OAAA8H,EAWA,SAAAG,EAAAR,GACA,OAAAD,EAAAC,EAAA,SAAAzH,GACA,IAAA8H,EAAA,GAOA,OANA9H,EAAA,QAEA8H,GAAAT,GADArH,GAAA,SACA,eACAA,EAAA,WAAAA,GAEA8H,GAAAT,EAAArH,KAEG5I,KAAA,IAoCH,SAAA8Q,EAAAC,EAAAC,GAGA,OAAAD,EAAA,OAAAA,EAAA,SAAAC,IAAA,GAQA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,EAGA,IAFAH,EAAAE,EAAApB,EAAAkB,EAAA9B,GAAA8B,GAAA,EACAA,GAAAlB,EAAAkB,EAAAC,GAC+BD,EAAAnB,EAAAb,GAAA,EAAmCmC,GAAArC,EAClEkC,EAAAlB,EAAAkB,EAAAnB,GAEA,OAAAC,EAAAqB,GAAAtB,EAAA,GAAAmB,KAAA/B,IAUA,SAAA1L,EAAA6N,GAEA,IAEAC,EAIAC,EACA/I,EACAgJ,EACAC,EACAC,EACAN,EACAN,EACAa,EAEAC,EArEAC,EAsDApB,KACAqB,EAAAT,EAAAvS,OAEA+C,EAAA,EACAkQ,EAAA1C,EACA2C,EAAA5C,EAqBA,KALAmC,EAAAF,EAAAY,YAAA3C,IACA,IACAiC,EAAA,GAGA/I,EAAA,EAAaA,EAAA+I,IAAW/I,EAExB6I,EAAAV,WAAAnI,IAAA,KACApO,EAAA,aAEAqW,EAAA/R,KAAA2S,EAAAV,WAAAnI,IAMA,IAAAgJ,EAAAD,EAAA,EAAAA,EAAA,IAAyCC,EAAAM,GAAqB,CAO9D,IAAAL,EAAA5P,EAAA6P,EAAA,EAAAN,EAAArC,EAEAyC,GAAAM,GACA1X,EAAA,mBAGA0W,GAxGAe,EAwGAR,EAAAV,WAAAa,MAvGA,MACAK,EAAA,GAEAA,EAAA,MACAA,EAAA,GAEAA,EAAA,MACAA,EAAA,GAEA9C,IAgGAA,GAAA+B,EAAAf,GAAAjB,EAAAjN,GAAA6P,KACAtX,EAAA,YAGAyH,GAAAiP,EAAAY,IAGAZ,GAFAa,EAAAP,GAAAY,EAAAhD,EAAAoC,GAAAY,EAAA/C,IAAAmC,EAAAY,IAbsDZ,GAAArC,EAoBtD2C,EAAA3B,EAAAjB,GADA8C,EAAA7C,EAAA4C,KAEAvX,EAAA,YAGAsX,GAAAE,EAKAI,EAAAhB,EAAAnP,EAAA4P,EADAH,EAAAb,EAAA3R,OAAA,EACA,GAAA2S,GAIA1B,EAAAlO,EAAAyP,GAAAxC,EAAAiD,GACA3X,EAAA,YAGA2X,GAAAhC,EAAAlO,EAAAyP,GACAzP,GAAAyP,EAGAb,EAAA3Q,OAAA+B,IAAA,EAAAkQ,GAIA,OAAAnB,EAAAH,GAUA,SAAAhN,EAAA4N,GACA,IAAAU,EACAd,EACAiB,EACAC,EACAH,EACAxJ,EACA4J,EACAC,EACAjB,EACAO,EACAW,EAGAR,EAEAS,EACAX,EACAY,EANA/B,KAoBA,IARAqB,GAHAT,EAAAd,EAAAc,IAGAvS,OAGAiT,EAAA1C,EACA4B,EAAA,EACAe,EAAA5C,EAGA5G,EAAA,EAAaA,EAAAsJ,IAAiBtJ,GAC9B8J,EAAAjB,EAAA7I,IACA,KACAiI,EAAA/R,KAAAsR,EAAAsC,IAeA,IAXAJ,EAAAC,EAAA1B,EAAA3R,OAMAqT,GACA1B,EAAA/R,KAAA4Q,GAIA4C,EAAAJ,GAAA,CAIA,IAAAM,EAAAtD,EAAAtG,EAAA,EAA0BA,EAAAsJ,IAAiBtJ,GAC3C8J,EAAAjB,EAAA7I,KACAuJ,GAAAO,EAAAF,IACAA,EAAAE,GAcA,IAPAF,EAAAL,EAAAhC,GAAAjB,EAAAmC,IADAsB,EAAAL,EAAA,KAEA9X,EAAA,YAGA6W,IAAAmB,EAAAL,GAAAQ,EACAR,EAAAK,EAEA5J,EAAA,EAAcA,EAAAsJ,IAAiBtJ,EAO/B,IANA8J,EAAAjB,EAAA7I,IAEAuJ,KAAAd,EAAAnC,GACA1U,EAAA,YAGAkY,GAAAP,EAAA,CAEA,IAAAM,EAAApB,EAAAG,EAAArC,IAEAsD,GADAV,EAAAP,GAAAY,EAAAhD,EAAAoC,GAAAY,EAAA/C,IAAAmC,EAAAY,IADkDZ,GAAArC,EAKlDyD,EAAAH,EAAAV,EACAC,EAAA7C,EAAA4C,EACAlB,EAAA/R,KACAsR,EAAAa,EAAAc,EAAAa,EAAAZ,EAAA,KAEAS,EAAAtC,EAAAyC,EAAAZ,GAGAnB,EAAA/R,KAAAsR,EAAAa,EAAAwB,EAAA,KACAL,EAAAhB,EAAAC,EAAAsB,EAAAL,GAAAC,GACAlB,EAAA,IACAiB,IAIAjB,IACAc,EAGA,OAAAtB,EAAA1Q,KAAA,IA4CA8O,GAMA4D,QAAA,QAQAC,MACAlP,OAAA+M,EACA9M,OAAAmN,GAEApN,SACAC,SACAkP,QA/BA,SAAAtB,GACA,OAAAhB,EAAAgB,EAAA,SAAAf,GACA,OAAAd,EAAAoD,KAAAtC,GACA,OAAA7M,EAAA6M,GACAA,KA4BAuC,UAnDA,SAAAxB,GACA,OAAAhB,EAAAgB,EAAA,SAAAf,GACA,OAAAf,EAAAqD,KAAAtC,GACA9M,EAAA8M,EAAAtK,MAAA,GAAA8M,eACAxC,WA4DG3N,KAFH4L,EAAA,WACA,OAAAM,GACGkE,KAAAzX,EAAAzC,EAAAyC,EAAAD,QAAAC,QAAAiT,GAngBF,4FCED,IAAAhT,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAZ,UAAA,gBAAAc,GAE5IsX,EAAAna,EAAA,QACAoR,EAAApR,EAAA,QACAsR,EAAAtR,EAAA,QACAD,EAAAC,EAAA,QACAoD,EAAApD,EAAA,QACAC,EAAAD,EAAA,QACAqD,EAAArD,EAAA,QAgBAoa,EAAA,SAAAja,EAAAka,EAAA9I,EAAAlR,EAAAC,GACA,oBAAAH,GAAA,IAAAA,EAAA8F,OACA,UAAAyH,MAAA,yBAGAnN,KAAAJ,OACAI,KAAA+Z,OAAA,EACA/Z,KAAAga,eAAAF,EACA9Z,KAAAyL,YAAAuF,EACAhR,KAAAG,QAAAJ,EACAC,KAAAC,SAAAH,EACAE,KAAAia,SAAA,EACAja,KAAAka,aAAA,EACAla,KAAAma,aAAA,EACAna,KAAAoa,OAAA1P,OAAAqD,OAAA,MACA/N,KAAAqZ,QAAA,KACArZ,KAAAqa,cAAA,IAAAtJ,EACA/Q,KAAAsa,sBACAta,KAAAua,mBAEAva,KAAAwa,eAAA,KACA1a,EAAAmV,eACAjV,KAAAya,iBAAA3a,EAAAmV,eAGAjV,KAAAI,oBAAAL,EAAAM,0BACAL,KAAAmR,qBAAA,IAAAN,EAAA7Q,KAAAG,QAAAH,KAAA0a,UAAAzZ,KAAAjB,OAEAA,KAAA2a,gBAAA3a,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAsL,OACAnM,OACAe,OAAAnB,EAAAoB,QAAA0Q,UACAxQ,QAAAd,KAAAC,SAAA6U,uBAEA9U,KAAAkB,iBAAAlB,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAsL,OACAnM,OACAe,OAAAnB,EAAAoB,QAAAga,KACAxZ,MAAA5B,EAAA6B,MAAAC,iBACAR,QAAAd,KAAAC,SAAA8U,oBAEA/U,KAAA0a,aAGA3J,EAAA8I,EAAArY,WAcAqY,EAAArY,UAAAiZ,iBAAA,SAAAxF,GACA,sBAAAA,EAGA,UAAA9H,MAAA,8CAFAnN,KAAAwa,eAAAvF,GAoBA4E,EAAArY,UAAAqJ,IAAA,SAAA1G,GACA,OAAAyV,EAAA/O,IAAA7K,KAAAoa,OAAAjW,EAAAnE,KAAAC,SAAAiV,iBAiBA2E,EAAArY,UAAAuO,IAAA,SAAA8K,EAAAC,EAAAjb,GACA,IAAAsE,OAAA,EACAtC,OAAA,EACA,OAAAsM,UAAAzI,OAAA,CAEA,wBAAAmV,EAAA,YAAA1Y,EAAA0Y,IACA,UAAA1N,MAAA,yBAEAtL,EAAAgZ,OACG,OAAA1M,UAAAzI,OACH,oBAAAmV,GAAA,IAAAA,EAAAnV,QAAA,mBAAAoV,EAEA3W,EAAA0W,EACAhZ,EAAAiZ,MACK,yBAAAD,EAAA,YAAA1Y,EAAA0Y,KAAA,mBAAAC,EAKL,UAAA3N,MAAA,yBAHAtL,EAAAgZ,EACAhb,EAAAib,OAIG,OAAA3M,UAAAzI,OAAA,CAEH,oBAAAmV,GAAA,IAAAA,EAAAnV,QAAA,mBAAA7F,EACA,UAAAsN,MAAA,oEAEAhJ,EAAA0W,EACAhZ,EAAAiZ,EAGA,IAAA3W,IAAA,OAAAtC,GAAA,qBAAAA,EAAA,YAAAM,EAAAN,KACA,UAAAsL,MAAA,+DAGA,GAAAnN,KAAA+a,gBAAA,OACA,OAAA/a,KAGA,IAAAA,KAAAia,QAEA,OADAja,KAAAsa,mBAAAhV,MAAkC0V,OAAA,MAAAvM,KAAAN,YAClCnO,KAGA,IAAAiP,EAAAjP,KAAAoa,OACAlL,EAAA0K,EAAA7J,IAAAd,EAAA9K,EAAAtC,EAAA7B,KAAAC,SAAAiV,gBAEA,GAAAjG,IAAAC,EAAA,CACA,sBAAArP,EAAA,CACA,IAAAuN,EAAA,KACAtK,EAAAmY,YAAAjb,KAAAG,WACAiN,EAAA,oEAEAtK,EAAAoY,oBAAA,WACA,OAAArb,EAAAuN,KAGA,OAAApN,KAGA,IAAAmb,OAAA,EAcA,MAbA,mBAAAtb,KACAsb,MACAC,cAAA,EACAtY,EAAAmY,YAAAjb,KAAAG,SAKAH,KAAAqb,eAAArb,KAAAqZ,QAAAxZ,GAJAiD,EAAAoY,oBAAA,WACA,OAAArb,EAAA,uEAMAG,KAAAsb,YAAAnX,EAAAtC,EAAAsZ,GACAnb,KAAAub,aAAArM,GACAlP,MAuBA6Z,EAAArY,UAAA6P,UAAA,SAAAlN,EAAAtE,EAAA2b,GACA,IAAAzT,EAAA/H,KAEAyO,EAAAzO,KAAAyb,oBAAAtN,WAEA,QAAA5E,IAAAkF,EAAAtK,OAAA,iBAAAsK,EAAAtK,MAAA,IAAAsK,EAAAtK,KAAAuB,QACA,UAAAyH,MAAA,yBAEA,sBAAAsB,EAAA5O,SACA,UAAAsN,MAAA,6BAGAnN,KAAA+a,gBAAA,eAIAtM,EAAA+M,WACAxb,KAAA0b,UAAA,WACA3T,EAAAsS,cAAAzM,GAAAa,EAAAtK,KAAAsK,EAAA5O,UACA4O,EAAA5O,SAAAkI,EAAA8C,IAAA4D,EAAAtK,SAGAnE,KAAAqa,cAAAzM,GAAAa,EAAAtK,KAAAsK,EAAA5O,YAuBAga,EAAArY,UAAA+P,YAAA,SAAAoK,EAAA9b,GACA,IAAA4O,EAAAzO,KAAAyb,oBAAAtN,WAEA,QAAA5E,IAAAkF,EAAAtK,OAAA,iBAAAsK,EAAAtK,MAAA,IAAAsK,EAAAtK,KAAAuB,QACA,UAAAyH,MAAA,yBAEA,QAAA5D,IAAAkF,EAAA5O,UAAA,mBAAA4O,EAAA5O,SACA,UAAAsN,MAAA,6BAGAnN,KAAA+a,gBAAA,gBAGA/a,KAAAqa,cAAApM,IAAAQ,EAAAtK,KAAAsK,EAAA5O,WAUAga,EAAArY,UAAAoa,QAAA,WACA,IAAAC,EAAA7b,KAEAA,KAAA+a,gBAAA,YAGA/a,KAAA0b,UAAA,WACAG,EAAA9B,SACA8B,EAAA9B,QAAA,IACA8B,EAAApS,KAAA,kBACAoS,EAAAC,gBAAAD,EAAAzb,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAsL,OACAnM,KAAAic,EAAAjc,KACAe,OAAAnB,EAAAoB,QAAA4Q,cAEAqK,EAAApQ,YAAAvG,QAAA1F,EAAAiB,MAAAsL,OAAAvM,EAAAoB,QAAA4Q,aAAAqK,EAAAjc,WAWAia,EAAArY,UAAAua,OAAA,WACA,IAAAC,EAAAhc,KAEAA,KAAA+a,gBAAA,WAGA/a,KAAA0b,UAAA,WACAM,EAAAvS,KAAA,kBACAuS,EAAAC,kBAAAD,EAAA5b,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAsL,OACAnM,KAAAoc,EAAApc,KACAe,OAAAnB,EAAAoB,QAAAsb,OACA9a,MAAA5B,EAAA6B,MAAA8a,eACArb,QAAAkb,EAAA/b,SAAA+U,sBAEAgH,EAAAvQ,YAAAvG,QAAA1F,EAAAiB,MAAAsL,OAAAvM,EAAAoB,QAAAsb,QAAAF,EAAApc,UAaAia,EAAArY,UAAAka,UAAA,SAAA7b,IACA,IAAAG,KAAAia,QACApa,EAAAG,MAEAA,KAAAgO,KAAA,QAAAnO,EAAAoB,KAAAjB,aAYA6Z,EAAArY,UAAAoH,YAAA,SAAAvD,GACA,GAAAA,EAAA1E,SAAAnB,EAAAoB,QAAAga,KACA,OAAA5a,KAAAqZ,SACArZ,KAAAI,oBAAAqS,MAAApN,GACArF,KAAAoc,QAAA/W,IAEArF,KAAAqc,aAAAhX,EAAArF,KAAAG,cAEG,GAAAkF,EAAA1E,SAAAnB,EAAAoB,QAAAC,IACHb,KAAAsc,mBAAAjX,QACG,GAAAA,EAAA1E,SAAAnB,EAAAoB,QAAA2b,QAAAlX,EAAA1E,SAAAnB,EAAAoB,QAAA4b,MACHxc,KAAAqc,aAAAhX,EAAArF,KAAAG,cACG,GAAAkF,EAAA1E,SAAAnB,EAAAoB,QAAA6b,sBACH5C,EAAA6C,6BAAArX,EAAArF,KAAAua,gBAAAva,KAAAG,cACG,GAAAkF,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAsb,eAEH3c,KAAA4c,eAAAvX,EAAAxD,KAAA,GAAAqG,KAAAM,MAAAnD,EAAAxD,KAAA,IAAAwD,QACG,GAAAA,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAiR,eACHtS,KAAA6c,sBACG,GAAAxX,EAAA1E,SAAAnB,EAAAoB,QAAAyR,0BAAA,CACH,IAAA8H,EAAAza,EAAAqC,aAAAsD,EAAAxD,KAAA,GAAA7B,KAAAG,SACAH,KAAAma,cACAna,KAAAyJ,KAAA,qBAAA0Q,KAIAN,EAAA6C,6BAAA,SAAArX,EAAAmJ,EAAAzO,GAEA,IADA,IAAA+c,EAAA5U,KAAAM,MAAAnD,EAAAxD,KAAA,IACA4G,EAAA,EAAiBA,EAAAqU,EAAApX,OAAqB+C,IAAA,CACtC,IAAA5I,EAAA2O,EAAAsO,EAAArU,SACAc,IAAA1J,IACAA,EAAAH,EAAAqC,aAAAsD,EAAAxD,KAAA,GAAA9B,WACAyO,EAAAsO,EAAArU,OAiBAoR,EAAArY,UAAAob,eAAA,SAAAjM,EAAAoM,EAAA1X,GACAA,EAAAqH,gBAAA,EACA1M,KAAAwa,eACAxa,KAAAwa,eAAAxa,KAAA+c,EAAApM,EAAA3Q,KAAAgd,mBAAA/b,KAAAjB,KAAA2Q,EAAAoM,EAAA1X,IAEArF,KAAAyJ,KAAA,QAAAjK,EAAA6B,MAAAsb,eAAA,uBAAAhM,EAAA,mBAAA3Q,KAAAqZ,UAIAQ,EAAArY,UAAA8Z,YAAA,SAAAnX,EAAAtC,EAAAsZ,GACAnb,KAAAqZ,UACA,IAAA4D,OAAA,EACA9Y,GAIA8Y,OAAA1T,IAAA4R,GAAAnb,KAAAJ,KAAAI,KAAAqZ,QAAAlV,EAAAtB,EAAA4O,MAAA5P,KAAA7B,KAAAJ,KAAAI,KAAAqZ,QAAAlV,EAAAtB,EAAA4O,MAAA5P,GAAAsZ,GACAnb,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAsL,OAAAvM,EAAAoB,QAAA4b,MAAAS,KAJAA,OAAA1T,IAAA4R,GAAAnb,KAAAJ,KAAAI,KAAAqZ,QAAAxX,IAAA7B,KAAAJ,KAAAI,KAAAqZ,QAAAxX,EAAAsZ,GACAnb,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAsL,OAAAvM,EAAAoB,QAAA2b,OAAAU,KAmBApD,EAAArY,UAAAwb,mBAAA,SAAArM,EAAAoM,EAAA1X,EAAArE,EAAAa,GACA,GAAAb,EAgCAhB,KAAAyJ,KAAA,QAAAjK,EAAA6B,MAAAsb,eAAA,uBAAAhM,EAAA,mBAAA3Q,KAAAqZ,aAhCA,CACA,IAAA6D,EAAAld,KAAAqZ,QACArZ,KAAAqZ,QAAA1I,EAEA,IAAA1B,EAAAjP,KAAAoa,OAEA,GAAAtX,EAAAqa,WAAAlO,EAAA8N,GACA,OAGA,IAAA7N,EAAA0K,EAAA7J,IAAAd,OAAA1F,EAAA1H,GAAA,GAEA,GAAAiB,EAAAqa,WAAAtb,EAAAkb,GAAA,CACA/c,KAAAub,aAAA1Z,GAEA,IAAAhC,EAAAG,KAAAua,gBAAA5J,GAKA,iBAJApH,IAAA1J,IACAA,EAAA,aACAG,KAAAua,gBAAA5J,KAKA,IAAAwK,EAAA9V,EAAAxD,KAAA,GACA,GAAAsZ,GAAAjT,KAAAM,MAAA2S,GAAAC,aAAA,CACA,IAAAlb,EAAAF,KAAAua,gBAAA2C,UACAld,KAAAua,gBAAA2C,GACAld,KAAAqb,eAAArb,KAAAqZ,QAAAnZ,GAEAF,KAAAsb,iBAAA/R,EAAA1H,EAAAsZ,GACAnb,KAAAub,aAAArM,KAeA2K,EAAArY,UAAA8a,mBAAA,SAAAjX,GACA,IAAA+X,EAAA/X,EAAAxD,KAAA,GAEAub,IAAA5d,EAAAoB,QAAA0Q,UACAtR,KAAAI,oBAAAqS,MAAApN,GACG+X,IAAA5d,EAAAoB,QAAAsb,QACHlc,KAAAyJ,KAAA,UACAzJ,KAAAqd,YACGD,IAAA5d,EAAAoB,QAAA4Q,cACHxR,KAAAyJ,KAAA,WACAzJ,KAAAqd,aAYAxD,EAAArY,UAAA6a,aAAA,SAAAhX,GACA,IAAAgU,EAAAiE,SAAAjY,EAAAxD,KAAA,OACAA,OAAA,EAOA,GALAA,EADAwD,EAAA1E,SAAAnB,EAAAoB,QAAA4b,MACA9c,EAAAqC,aAAAsD,EAAAxD,KAAA,GAAA7B,KAAAG,SAEA+H,KAAAM,MAAAnD,EAAAxD,KAAA,IAGA,OAAA7B,KAAAqZ,QACArZ,KAAAqZ,eACG,GAAArZ,KAAAqZ,QAAA,IAAAA,EAUH,YATAhU,EAAA1E,SAAAnB,EAAAoB,QAAA4b,MAKAxc,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAsL,OAAAvM,EAAAoB,QAAA2c,UAAAvd,KAAAJ,OAEAI,KAAA4c,eAAAvD,EAAAxX,EAAAwD,IAKArF,KAAAqZ,UACArZ,KAAAub,aAAA3B,EAAA7J,IAAA/P,KAAAoa,OAAA/U,EAAA1E,SAAAnB,EAAAoB,QAAA4b,MAAAnX,EAAAxD,KAAA,QAAA0H,EAAA1H,KAWAgY,EAAArY,UAAA4a,QAAA,SAAA/W,GACArF,KAAAqZ,QAAAiE,SAAAjY,EAAAxD,KAAA,OACA7B,KAAAub,aAAA3B,EAAA7J,IAAA/P,KAAAoa,YAAA7Q,EAAArB,KAAAM,MAAAnD,EAAAxD,KAAA,MACA7B,KAAAwd,aAUA3D,EAAArY,UAAAgc,UAAA,WACAxd,KAAAia,SAAA,EACA,QAAAxR,EAAA,EAAiBA,EAAAzI,KAAAsa,mBAAA5U,OAAoC+C,IACrDzI,UAAAsa,mBAAA7R,GAAAuS,QAAA9M,MAAAlO,UAAAsa,mBAAA7R,GAAAgG,MAEAzO,KAAAsa,sBACAta,KAAAyJ,KAAA,UAGAoQ,EAAArY,UAAA6Z,eAAA,SAAAoC,EAAA5d,GACA,IAAA6d,EAAAC,OAAA3d,KAAAqZ,SAAA,EACArZ,KAAAua,gBAAAmD,GAAA7d,GAUAga,EAAArY,UAAAkZ,UAAA,WACA1a,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAsL,OAAAvM,EAAAoB,QAAAgd,cAAA5d,KAAAJ,QAUAia,EAAArY,UAAA+Z,aAAA,SAAAsC,GACA,IAAA7d,KAAAka,YAAA,CAIA,IAAA4D,EAAA9d,KAAAoa,OACApa,KAAAoa,OAAAyD,EAGA,IADA,IAAArT,EAAAxK,KAAAqa,cAAAzL,aACAnG,EAAA,EAAiBA,EAAA+B,EAAA9E,OAAkB+C,IAAA,CACnCmR,EAAA/O,IAAAgT,EAAArT,EAAA/B,IAAA,KACAmR,EAAA/O,IAAAiT,EAAAtT,EAAA/B,IAAA,IAGAzI,KAAAqa,cAAA5Q,KAAAe,EAAA/B,GAAAzI,KAAA6K,IAAAL,EAAA/B,QAaAoR,EAAArY,UAAAia,oBAAA,SAAAhN,GAGA,OAAAA,EAAA/I,QAAA,WAAAvD,EAAAsM,EAAA,IACA,OAAAA,EAAA,GAKA,IAFA,IAAAuB,EAAAtF,OAAAqD,OAAA,MAEAtF,EAAA,EAAiBA,EAAAgG,EAAA/I,OAAiB+C,IAClC,iBAAAgG,EAAAhG,GACAuH,EAAA7L,KAAAsK,EAAAhG,GACK,mBAAAgG,EAAAhG,GACLuH,EAAAnQ,SAAA4O,EAAAhG,GACK,kBAAAgG,EAAAhG,KACLuH,EAAAwL,WAAA/M,EAAAhG,IAIA,OAAAuH,GASA6J,EAAArY,UAAAqb,eAAA,WACA7c,KAAAI,oBAAAsB,QAAmCC,MAAA3B,KAAA2a,gBAAAoD,QAAA,IACnC/d,KAAAI,oBAAAsB,QAAmCC,MAAA3B,KAAAkB,iBAAA6c,QAAA,IACnC/d,KAAAI,oBAAAsB,QAAmCC,MAAA3B,KAAAic,kBAAA8B,QAAA,IACnC/d,KAAAI,oBAAAsB,QAAmCC,MAAA3B,KAAA8b,gBAAAiC,QAAA,KAYnClE,EAAArY,UAAAuZ,gBAAA,SAAAiD,GACA,QAAAhe,KAAAka,cACAla,KAAAyJ,KAAA,yBAAAuU,EAAA,cAAAhe,KAAAJ,KAAA,2BACA,IAaAia,EAAArY,UAAA6b,SAAA,WACArd,KAAA6c,iBACA7c,KAAAqa,cAAApM,MACAjO,KAAAmR,qBAAAU,UACA7R,KAAAka,aAAA,EACAla,KAAAia,SAAA,EACAja,KAAAG,QAAA,KACAH,KAAAqa,cAAA,KACAra,KAAAyL,YAAA,MAGAxJ,EAAAC,QAAA2X,0DCzpBA,IAAApE,EAAAhW,EAAA,QACAwe,EAAAxe,EAAA,QASA,SAAAye,IACAle,KAAAme,SAAA,KACAne,KAAAoe,QAAA,KACApe,KAAAqe,KAAA,KACAre,KAAAse,KAAA,KACAte,KAAAue,KAAA,KACAve,KAAAwe,SAAA,KACAxe,KAAAye,KAAA,KACAze,KAAA0e,OAAA,KACA1e,KAAA2e,MAAA,KACA3e,KAAA4e,SAAA,KACA5e,KAAAmE,KAAA,KACAnE,KAAA6e,KAAA,KAnBA3c,EAAAsG,MAAAsW,EACA5c,EAAA6c,QA0ZA,SAAAC,EAAAC,GACA,OAAAH,EAAAE,GAAA,MAAAD,QAAAE,IA1ZA/c,EAAAgd,cAiaA,SAAAF,EAAAC,GACA,OAAAD,EACAF,EAAAE,GAAA,MAAAE,cAAAD,GADAA,GAjaA/c,EAAAid,OAsVA,SAAA7c,GAKA2b,EAAAmB,SAAA9c,OAAAwc,EAAAxc,IACA,OAAAA,aAAA4b,EACA5b,EAAA6c,SADAjB,EAAA1c,UAAA2d,OAAAxF,KAAArX,IA1VAJ,EAAAgc,MAqBA,IAAAmB,EAAA,oBACAC,EAAA,WAGAC,EAAA,qCAOAC,GAAA,IAAgB,IAAK,kBAAAC,QAHrB,qCAMAC,GAAA,KAAAD,OAAAD,GAKAG,GAAA,gBAAqC,KAAAF,OAAAC,GACrCE,GAAA,aAEAC,EAAA,yBACAC,EAAA,+BAEAC,GACAC,YAAA,EACAC,eAAA,GAGAC,GACAF,YAAA,EACAC,eAAA,GAGAE,GACAC,MAAA,EACAC,OAAA,EACAC,KAAA,EACAC,QAAA,EACAC,MAAA,EACAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,WAAA,EACAC,SAAA,GAEAC,EAAArhB,EAAA,QAEA,SAAAqf,EAAA9b,EAAA+d,EAAAC,GACA,GAAAhe,GAAAib,EAAAgD,SAAAje,iBAAAkb,EAAA,OAAAlb,EAEA,IAAAke,EAAA,IAAAhD,EAEA,OADAgD,EAAA1Y,MAAAxF,EAAA+d,EAAAC,GACAE,EAGAhD,EAAA1c,UAAAgH,MAAA,SAAAxF,EAAA+d,EAAAC,GACA,IAAA/C,EAAAmB,SAAApc,GACA,UAAAme,UAAA,gDAAAne,GAMA,IAAAoe,EAAApe,EAAAqe,QAAA,KACAC,GACA,IAAAF,KAAApe,EAAAqe,QAAA,aACAE,EAAAve,EAAA0Q,MAAA4N,GAEAC,EAAA,GAAAA,EAAA,GAAA9U,QADA,MACA,KAGA,IAAA+U,EAFAxe,EAAAue,EAAA5a,KAAA2a,GAQA,GAFAE,IAAAC,QAEAT,GAAA,IAAAhe,EAAA0Q,MAAA,KAAAhO,OAAA,CAEA,IAAAgc,EAAAnC,EAAAoC,KAAAH,GACA,GAAAE,EAeA,OAdA1hB,KAAAmE,KAAAqd,EACAxhB,KAAA6e,KAAA2C,EACAxhB,KAAA4e,SAAA8C,EAAA,GACAA,EAAA,IACA1hB,KAAA0e,OAAAgD,EAAA,GAEA1hB,KAAA2e,MADAoC,EACAD,EAAAtY,MAAAxI,KAAA0e,OAAAzK,OAAA,IAEAjU,KAAA0e,OAAAzK,OAAA,IAEO8M,IACP/gB,KAAA0e,OAAA,GACA1e,KAAA2e,UAEA3e,KAIA,IAAA4hB,EAAAvC,EAAAsC,KAAAH,GACA,GAAAI,EAAA,CAEA,IAAAC,GADAD,IAAA,IACAlI,cACA1Z,KAAAme,SAAA0D,EACAL,IAAAvN,OAAA2N,EAAAlc,QAOA,GAAAsb,GAAAY,GAAAJ,EAAA3R,MAAA,yBACA,IAAAuO,EAAA,OAAAoD,EAAAvN,OAAA,MACAmK,GAAAwD,GAAA1B,EAAA0B,KACAJ,IAAAvN,OAAA,GACAjU,KAAAoe,SAAA,GAIA,IAAA8B,EAAA0B,KACAxD,GAAAwD,IAAAzB,EAAAyB,IAAA,CAmBA,IADA,IASAvD,EAAAyD,EATAC,GAAA,EACAtZ,EAAA,EAAmBA,EAAAmX,EAAAla,OAA4B+C,IAAA,EAE/C,KADAuZ,EAAAR,EAAAH,QAAAzB,EAAAnX,QACA,IAAAsZ,GAAAC,EAAAD,KACAA,EAAAC,IAiBA,KATAF,GAFA,IAAAC,EAEAP,EAAA3I,YAAA,KAIA2I,EAAA3I,YAAA,IAAAkJ,MAMA1D,EAAAmD,EAAA5U,MAAA,EAAAkV,GACAN,IAAA5U,MAAAkV,EAAA,GACA9hB,KAAAqe,KAAA4D,mBAAA5D,IAIA0D,GAAA,EACA,IAAAtZ,EAAA,EAAmBA,EAAAkX,EAAAja,OAAyB+C,IAAA,CAC5C,IAAAuZ,GACA,KADAA,EAAAR,EAAAH,QAAA1B,EAAAlX,QACA,IAAAsZ,GAAAC,EAAAD,KACAA,EAAAC,IAGA,IAAAD,IACAA,EAAAP,EAAA9b,QAEA1F,KAAAse,KAAAkD,EAAA5U,MAAA,EAAAmV,GACAP,IAAA5U,MAAAmV,GAGA/hB,KAAAkiB,YAIAliB,KAAAwe,SAAAxe,KAAAwe,UAAA,GAIA,IAAA2D,EAAA,MAAAniB,KAAAwe,SAAA,IACA,MAAAxe,KAAAwe,SAAAxe,KAAAwe,SAAA9Y,OAAA,GAGA,IAAAyc,EAEA,IADA,IAAAC,EAAApiB,KAAAwe,SAAA9K,MAAA,MACA5I,GAAArC,EAAA,EAAA2Z,EAAA1c,QAA2C+C,EAAAqC,EAAOrC,IAAA,CAClD,IAAA4Z,EAAAD,EAAA3Z,GACA,GAAA4Z,IACAA,EAAAxS,MAAAgQ,GAAA,CAEA,IADA,IAAAyC,EAAA,GACAlT,EAAA,EAAA4I,EAAAqK,EAAA3c,OAA0C0J,EAAA4I,EAAO5I,IACjDiT,EAAA9K,WAAAnI,GAAA,IAIAkT,GAAA,IAEAA,GAAAD,EAAAjT,GAIA,IAAAkT,EAAAzS,MAAAgQ,GAAA,CACA,IAAA0C,EAAAH,EAAAxV,MAAA,EAAAnE,GACA+Z,EAAAJ,EAAAxV,MAAAnE,EAAA,GACAga,EAAAJ,EAAAxS,MAAAiQ,GACA2C,IACAF,EAAAjd,KAAAmd,EAAA,IACAD,EAAAE,QAAAD,EAAA,KAEAD,EAAA9c,SACA8b,EAAA,IAAAgB,EAAA7b,KAAA,KAAA6a,GAEAxhB,KAAAwe,SAAA+D,EAAA5b,KAAA,KACA,QAMA3G,KAAAwe,SAAA9Y,OAjNA,IAkNA1F,KAAAwe,SAAA,GAGAxe,KAAAwe,SAAAxe,KAAAwe,SAAA9E,cAGAyI,IAKAniB,KAAAwe,SAAA/I,EAAA8D,QAAAvZ,KAAAwe,WAGA,IAAAmE,EAAA3iB,KAAAue,KAAA,IAAAve,KAAAue,KAAA,GACAqE,EAAA5iB,KAAAwe,UAAA,GACAxe,KAAAse,KAAAsE,EAAAD,EACA3iB,KAAA6e,MAAA7e,KAAAse,KAIA6D,IACAniB,KAAAwe,SAAAxe,KAAAwe,SAAAvK,OAAA,EAAAjU,KAAAwe,SAAA9Y,OAAA,GACA,MAAA8b,EAAA,KACAA,EAAA,IAAAA,IAOA,IAAAzB,EAAA8B,GAKA,IAAApZ,EAAA,EAAAqC,EAAA4U,EAAAha,OAA0C+C,EAAAqC,EAAOrC,IAAA,CACjD,IAAAoa,EAAAnD,EAAAjX,GACA,QAAA+Y,EAAAH,QAAAwB,GAAA,CAEA,IAAAC,EAAAC,mBAAAF,GACAC,IAAAD,IACAC,EAAAE,OAAAH,IAEArB,IAAA9N,MAAAmP,GAAAlc,KAAAmc,IAMA,IAAArE,EAAA+C,EAAAH,QAAA,MACA,IAAA5C,IAEAze,KAAAye,KAAA+C,EAAAvN,OAAAwK,GACA+C,IAAA5U,MAAA,EAAA6R,IAEA,IAAAwE,EAAAzB,EAAAH,QAAA,KAoBA,IAnBA,IAAA4B,GACAjjB,KAAA0e,OAAA8C,EAAAvN,OAAAgP,GACAjjB,KAAA2e,MAAA6C,EAAAvN,OAAAgP,EAAA,GACAlC,IACA/gB,KAAA2e,MAAAmC,EAAAtY,MAAAxI,KAAA2e,QAEA6C,IAAA5U,MAAA,EAAAqW,IACGlC,IAEH/gB,KAAA0e,OAAA,GACA1e,KAAA2e,UAEA6C,IAAAxhB,KAAA4e,SAAA4C,GACArB,EAAA0B,IACA7hB,KAAAwe,WAAAxe,KAAA4e,WACA5e,KAAA4e,SAAA,KAIA5e,KAAA4e,UAAA5e,KAAA0e,OAAA,CACAiE,EAAA3iB,KAAA4e,UAAA,OACAsE,EAAAljB,KAAA0e,QAAA,GACA1e,KAAAmE,KAAAwe,EAAAO,EAKA,OADAljB,KAAA6e,KAAA7e,KAAAmf,SACAnf,MAcAke,EAAA1c,UAAA2d,OAAA,WACA,IAAAd,EAAAre,KAAAqe,MAAA,GACAA,IAEAA,GADAA,EAAA0E,mBAAA1E,IACA5R,QAAA,YACA4R,GAAA,KAGA,IAAAF,EAAAne,KAAAme,UAAA,GACAS,EAAA5e,KAAA4e,UAAA,GACAH,EAAAze,KAAAye,MAAA,GACAH,GAAA,EACAK,EAAA,GAEA3e,KAAAse,KACAA,EAAAD,EAAAre,KAAAse,KACGte,KAAAwe,WACHF,EAAAD,IAAA,IAAAre,KAAAwe,SAAA6C,QAAA,KACArhB,KAAAwe,SACA,IAAAxe,KAAAwe,SAAA,KACAxe,KAAAue,OACAD,GAAA,IAAAte,KAAAue,OAIAve,KAAA2e,OACAV,EAAAgD,SAAAjhB,KAAA2e,QACAjU,OAAAmE,KAAA7O,KAAA2e,OAAAjZ,SACAiZ,EAAAmC,EAAA3Y,UAAAnI,KAAA2e,QAGA,IAAAD,EAAA1e,KAAA0e,QAAAC,GAAA,IAAAA,GAAA,GAsBA,OApBAR,GAAA,MAAAA,EAAAlK,QAAA,KAAAkK,GAAA,KAIAne,KAAAoe,WACAD,GAAAgC,EAAAhC,MAAA,IAAAG,GACAA,EAAA,MAAAA,GAAA,IACAM,GAAA,MAAAA,EAAA9K,OAAA,KAAA8K,EAAA,IAAAA,IACGN,IACHA,EAAA,IAGAG,GAAA,MAAAA,EAAA3K,OAAA,KAAA2K,EAAA,IAAAA,GACAC,GAAA,MAAAA,EAAA5K,OAAA,KAAA4K,EAAA,IAAAA,GAOAP,EAAAG,GALAM,IAAAnS,QAAA,iBAAAoD,GACA,OAAAkT,mBAAAlT,OAEA6O,IAAAjS,QAAA,YAEAgS,GAOAP,EAAA1c,UAAAud,QAAA,SAAAE,GACA,OAAAjf,KAAAkf,cAAAJ,EAAAG,GAAA,OAAAE,UAQAjB,EAAA1c,UAAA0d,cAAA,SAAAD,GACA,GAAAhB,EAAAmB,SAAAH,GAAA,CACA,IAAAkE,EAAA,IAAAjF,EACAiF,EAAA3a,MAAAyW,GAAA,MACAA,EAAAkE,EAKA,IAFA,IAAAnT,EAAA,IAAAkO,EACAkF,EAAA1Y,OAAAmE,KAAA7O,MACAqjB,EAAA,EAAkBA,EAAAD,EAAA1d,OAAmB2d,IAAA,CACrC,IAAAC,EAAAF,EAAAC,GACArT,EAAAsT,GAAAtjB,KAAAsjB,GAQA,GAHAtT,EAAAyO,KAAAQ,EAAAR,KAGA,KAAAQ,EAAAJ,KAEA,OADA7O,EAAA6O,KAAA7O,EAAAmP,SACAnP,EAIA,GAAAiP,EAAAb,UAAAa,EAAAd,SAAA,CAGA,IADA,IAAAoF,EAAA7Y,OAAAmE,KAAAoQ,GACAuE,EAAA,EAAoBA,EAAAD,EAAA7d,OAAmB8d,IAAA,CACvC,IAAAC,EAAAF,EAAAC,GACA,aAAAC,IACAzT,EAAAyT,GAAAxE,EAAAwE,IAUA,OANAtD,EAAAnQ,EAAAmO,WACAnO,EAAAwO,WAAAxO,EAAA4O,WACA5O,EAAA7L,KAAA6L,EAAA4O,SAAA,KAGA5O,EAAA6O,KAAA7O,EAAAmP,SACAnP,EAGA,GAAAiP,EAAAd,UAAAc,EAAAd,WAAAnO,EAAAmO,SAAA,CASA,IAAAgC,EAAAlB,EAAAd,UAAA,CAEA,IADA,IAAAtP,EAAAnE,OAAAmE,KAAAoQ,GACAyE,EAAA,EAAqBA,EAAA7U,EAAAnJ,OAAiBge,IAAA,CACtC,IAAA1L,EAAAnJ,EAAA6U,GACA1T,EAAAgI,GAAAiH,EAAAjH,GAGA,OADAhI,EAAA6O,KAAA7O,EAAAmP,SACAnP,EAIA,GADAA,EAAAmO,SAAAc,EAAAd,SACAc,EAAAX,MAAA4B,EAAAjB,EAAAd,UASAnO,EAAA4O,SAAAK,EAAAL,aATA,CAEA,IADA,IAAA+E,GAAA1E,EAAAL,UAAA,IAAAlL,MAAA,KACAiQ,EAAAje,UAAAuZ,EAAAX,KAAAqF,EAAAC,WACA3E,EAAAX,OAAAW,EAAAX,KAAA,IACAW,EAAAT,WAAAS,EAAAT,SAAA,IACA,KAAAmF,EAAA,IAAAA,EAAAjB,QAAA,IACAiB,EAAAje,OAAA,GAAAie,EAAAjB,QAAA,IACA1S,EAAA4O,SAAA+E,EAAAhd,KAAA,KAWA,GAPAqJ,EAAA0O,OAAAO,EAAAP,OACA1O,EAAA2O,MAAAM,EAAAN,MACA3O,EAAAsO,KAAAW,EAAAX,MAAA,GACAtO,EAAAqO,KAAAY,EAAAZ,KACArO,EAAAwO,SAAAS,EAAAT,UAAAS,EAAAX,KACAtO,EAAAuO,KAAAU,EAAAV,KAEAvO,EAAA4O,UAAA5O,EAAA0O,OAAA,CACA,IAAAiE,EAAA3S,EAAA4O,UAAA,GACAsE,EAAAlT,EAAA0O,QAAA,GACA1O,EAAA7L,KAAAwe,EAAAO,EAIA,OAFAlT,EAAAoO,QAAApO,EAAAoO,SAAAa,EAAAb,QACApO,EAAA6O,KAAA7O,EAAAmP,SACAnP,EAGA,IAAA6T,EAAA7T,EAAA4O,UAAA,MAAA5O,EAAA4O,SAAA9K,OAAA,GACAgQ,EACA7E,EAAAX,MACAW,EAAAL,UAAA,MAAAK,EAAAL,SAAA9K,OAAA,GAEAiQ,EAAAD,GAAAD,GACA7T,EAAAsO,MAAAW,EAAAL,SACAoF,EAAAD,EACAE,EAAAjU,EAAA4O,UAAA5O,EAAA4O,SAAAlL,MAAA,SAEAwQ,GADAP,EAAA1E,EAAAL,UAAAK,EAAAL,SAAAlL,MAAA,SACA1D,EAAAmO,WAAAgC,EAAAnQ,EAAAmO,WA2BA,GApBA+F,IACAlU,EAAAwO,SAAA,GACAxO,EAAAuO,KAAA,KACAvO,EAAAsO,OACA,KAAA2F,EAAA,GAAAA,EAAA,GAAAjU,EAAAsO,KACA2F,EAAAvB,QAAA1S,EAAAsO,OAEAtO,EAAAsO,KAAA,GACAW,EAAAd,WACAc,EAAAT,SAAA,KACAS,EAAAV,KAAA,KACAU,EAAAX,OACA,KAAAqF,EAAA,GAAAA,EAAA,GAAA1E,EAAAX,KACAqF,EAAAjB,QAAAzD,EAAAX,OAEAW,EAAAX,KAAA,MAEAyF,MAAA,KAAAJ,EAAA,SAAAM,EAAA,KAGAH,EAEA9T,EAAAsO,KAAAW,EAAAX,MAAA,KAAAW,EAAAX,KACAW,EAAAX,KAAAtO,EAAAsO,KACAtO,EAAAwO,SAAAS,EAAAT,UAAA,KAAAS,EAAAT,SACAS,EAAAT,SAAAxO,EAAAwO,SACAxO,EAAA0O,OAAAO,EAAAP,OACA1O,EAAA2O,MAAAM,EAAAN,MACAsF,EAAAN,OAEG,GAAAA,EAAAje,OAGHue,UACAA,EAAAE,MACAF,IAAAxE,OAAAkE,GACA3T,EAAA0O,OAAAO,EAAAP,OACA1O,EAAA2O,MAAAM,EAAAN,WACG,IAAAV,EAAAmG,kBAAAnF,EAAAP,QAAA,CAIH,GAAAwF,EACAlU,EAAAwO,SAAAxO,EAAAsO,KAAA2F,EAAAL,SAIAS,KAAArU,EAAAsO,MAAAtO,EAAAsO,KAAA+C,QAAA,SACArR,EAAAsO,KAAA5K,MAAA,QAEA1D,EAAAqO,KAAAgG,EAAAT,QACA5T,EAAAsO,KAAAtO,EAAAwO,SAAA6F,EAAAT,SAWA,OARA5T,EAAA0O,OAAAO,EAAAP,OACA1O,EAAA2O,MAAAM,EAAAN,MAEAV,EAAAqG,OAAAtU,EAAA4O,WAAAX,EAAAqG,OAAAtU,EAAA0O,UACA1O,EAAA7L,MAAA6L,EAAA4O,SAAA5O,EAAA4O,SAAA,KACA5O,EAAA0O,OAAA1O,EAAA0O,OAAA,KAEA1O,EAAA6O,KAAA7O,EAAAmP,SACAnP,EAGA,IAAAiU,EAAAve,OAWA,OARAsK,EAAA4O,SAAA,KAEA5O,EAAA0O,OACA1O,EAAA7L,KAAA,IAAA6L,EAAA0O,OAEA1O,EAAA7L,KAAA,KAEA6L,EAAA6O,KAAA7O,EAAAmP,SACAnP,EAcA,IARA,IAAAuU,EAAAN,EAAArX,OAAA,MACA4X,GACAxU,EAAAsO,MAAAW,EAAAX,MAAA2F,EAAAve,OAAA,KACA,MAAA6e,GAAA,OAAAA,IAAA,KAAAA,EAIAE,EAAA,EACAhc,EAAAwb,EAAAve,OAA8B+C,GAAA,EAAQA,IAEtC,OADA8b,EAAAN,EAAAxb,IAEAwb,EAAAvd,OAAA+B,EAAA,GACK,OAAA8b,GACLN,EAAAvd,OAAA+B,EAAA,GACAgc,KACKA,IACLR,EAAAvd,OAAA+B,EAAA,GACAgc,KAKA,IAAAV,IAAAC,EACA,KAAUS,IAAMA,EAChBR,EAAAvB,QAAA,OAIAqB,GAAA,KAAAE,EAAA,IACAA,EAAA,UAAAA,EAAA,GAAAnQ,OAAA,IACAmQ,EAAAvB,QAAA,IAGA8B,GAAA,MAAAP,EAAAtd,KAAA,KAAAsN,QAAA,IACAgQ,EAAA3e,KAAA,IAGA,IAUA+e,EAVAK,EAAA,KAAAT,EAAA,IACAA,EAAA,UAAAA,EAAA,GAAAnQ,OAAA,GAGAoQ,IACAlU,EAAAwO,SAAAxO,EAAAsO,KAAAoG,EAAA,GACAT,EAAAve,OAAAue,EAAAL,QAAA,IAIAS,KAAArU,EAAAsO,MAAAtO,EAAAsO,KAAA+C,QAAA,SACArR,EAAAsO,KAAA5K,MAAA,QAEA1D,EAAAqO,KAAAgG,EAAAT,QACA5T,EAAAsO,KAAAtO,EAAAwO,SAAA6F,EAAAT,UAyBA,OArBAG,KAAA/T,EAAAsO,MAAA2F,EAAAve,UAEAgf,GACAT,EAAAvB,QAAA,IAGAuB,EAAAve,OAIAsK,EAAA4O,SAAAqF,EAAAtd,KAAA,MAHAqJ,EAAA4O,SAAA,KACA5O,EAAA7L,KAAA,MAMA8Z,EAAAqG,OAAAtU,EAAA4O,WAAAX,EAAAqG,OAAAtU,EAAA0O,UACA1O,EAAA7L,MAAA6L,EAAA4O,SAAA5O,EAAA4O,SAAA,KACA5O,EAAA0O,OAAA1O,EAAA0O,OAAA,KAEA1O,EAAAqO,KAAAY,EAAAZ,MAAArO,EAAAqO,KACArO,EAAAoO,QAAApO,EAAAoO,SAAAa,EAAAb,QACApO,EAAA6O,KAAA7O,EAAAmP,SACAnP,GAGAkO,EAAA1c,UAAA0gB,UAAA,WACA,IAAA5D,EAAAte,KAAAse,KACAC,EAAAe,EAAAqC,KAAArD,GACAC,IAEA,OADAA,IAAA,MAEAve,KAAAue,OAAAtK,OAAA,IAEAqK,IAAArK,OAAA,EAAAqK,EAAA5Y,OAAA6Y,EAAA7Y,SAEA4Y,IAAAte,KAAAwe,SAAAF,yCCxtBA,IAAAnc,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAZ,UAAA,gBAAAc,GAE5IuX,EAAApa,EAAA,QACAklB,EAAAllB,EAAA,QACAmlB,EAAAnlB,EAAA,QACAqR,EAAArR,EAAA,QACAolB,EAAAplB,EAAA,QACAD,EAAAC,EAAA,QACAC,EAAAD,EAAA,QACAoD,EAAApD,EAAA,QACAsR,EAAAtR,EAAA,QAUA0L,EAAA,SAAArL,EAAAkR,EAAAjR,GACAC,KAAAC,SAAAH,EACAE,KAAAyL,YAAAuF,EACAhR,KAAAG,QAAAJ,EACAC,KAAA8kB,YACA9kB,KAAA+kB,UACA/kB,KAAAkR,aACAlR,KAAAua,mBACAva,KAAAglB,qBAAA,IAAAjU,EAEA/Q,KAAAilB,aAAA,IAAAJ,EAAA9kB,EAAAiR,EAAAxR,EAAAiB,MAAAsL,OAAAvM,EAAAoB,QAAAskB,IAAAllB,KAAAC,SAAA8U,mBACA/U,KAAAmlB,kBAAA,IAAAN,EAAA9kB,EAAAiR,EAAAxR,EAAAiB,MAAAsL,OAAAvM,EAAAoB,QAAA2c,SAAAvd,KAAAC,SAAA8U,oBAaA5J,EAAA3J,UAAA4jB,UAAA,SAAAxlB,EAAAka,GAWA,OAVA9Z,KAAA8kB,SAAAllB,KACAI,KAAA8kB,SAAAllB,GAAA,IAAAia,EAAAja,EAAAka,MAA8D9Z,KAAAyL,YAAAzL,KAAAC,SAAAD,KAAAG,SAC9DH,KAAA8kB,SAAAllB,GAAAgO,GAAA,QAAA5N,KAAAqlB,eAAApkB,KAAAjB,KAAAJ,IACAI,KAAA8kB,SAAAllB,GAAAgO,GAAA,iBAAA5N,KAAAslB,kBAAArkB,KAAAjB,KAAAJ,IACAI,KAAA8kB,SAAAllB,GAAAgO,GAAA,SAAA5N,KAAAulB,cAAAtkB,KAAAjB,KAAAJ,IACAI,KAAA8kB,SAAAllB,GAAAgO,GAAA,UAAA5N,KAAAulB,cAAAtkB,KAAAjB,KAAAJ,KAGAI,KAAA8kB,SAAAllB,GAAAma,SAEA/Z,KAAA8kB,SAAAllB,IAcAuL,EAAA3J,UAAAgkB,QAAA,SAAA5lB,EAAAE,GAMA,OALAE,KAAA+kB,OAAAnlB,GAGAI,KAAA8kB,SAAAllB,GAAAma,SAFA/Z,KAAA+kB,OAAAnlB,GAAA,IAAAglB,EAAA5kB,KAAAJ,EAAAE,GAIAE,KAAA+kB,OAAAnlB,IAiBAuL,EAAA3J,UAAAikB,mBAAA,WACA,WAAAd,EAAA3kB,OAcAmL,EAAA3J,UAAAkQ,OAAA,SAAAC,EAAA9R,GACA,oBAAA8R,GAAA,IAAAA,EAAAjM,OACA,UAAAyH,MAAA,4BAEA,sBAAAtN,EACA,UAAAsN,MAAA,8BAGAnN,KAAAkR,UAAAS,IAAA3R,KAAAkR,UAAAS,GAAAC,gBAKA5R,KAAAkR,UAAAS,IACA3R,KAAAkR,UAAAS,GAAAE,UAGA7R,KAAAkR,UAAAS,GAAA,IAAAb,EAAAtR,EAAAiB,MAAAsL,OAAA4F,EAAA9R,EAAAG,KAAAC,SAAAD,KAAAG,QAAAH,KAAAyL,cARAzL,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAsL,OAAAvM,EAAA6B,MAAAyQ,gBAAAH,IAoBAxG,EAAA3J,UAAAuQ,SAAA,SAAAJ,GACA,oBAAAA,GAAA,IAAAA,EAAAjM,OACA,UAAAyH,MAAA,4BAGA,IAAA6E,EAAAhS,KAAAkR,UAAAS,GACAK,MAAAJ,eACAI,EAAAC,cACGjS,KAAAkR,UAAAS,IACH3R,KAAAkR,UAAAS,GAAAE,iBACA7R,KAAAkR,UAAAS,IAEA3R,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAsL,OAAAvM,EAAA6B,MAAA8Q,cAAAR,IAYAxG,EAAA3J,UAAAkkB,SAAA,SAAA9lB,EAAAC,GACA,oBAAAD,GAAA,IAAAA,EAAA8F,OACA,UAAAyH,MAAA,0BAGA,sBAAAtN,EACA,UAAAsN,MAAA,8BAGAnN,KAAA8kB,SAAAllB,IAAAI,KAAA8kB,SAAAllB,GAAAqa,QACApa,EAAA,KAAAG,KAAA8kB,SAAAllB,GAAAiL,OAEA7K,KAAAmlB,kBAAAQ,QAAA/lB,EAAAC,IAYAsL,EAAA3J,UAAAokB,IAAA,SAAAhmB,EAAAC,GACA,oBAAAD,GAAA,IAAAA,EAAA8F,OACA,UAAAyH,MAAA,0BAGA,sBAAAtN,EACA,UAAAsN,MAAA,8BAGAnN,KAAA8kB,SAAAllB,GACAC,EAAA,SAEAG,KAAAilB,aAAAU,QAAA/lB,EAAAC,IAmBAsL,EAAA3J,UAAAqkB,QAAA,SAAAC,EAAAjL,EAAAC,EAAAjb,GACA,IAAAsE,OAAA,EACAtC,OAAA,EACA0M,OAAA,EAuBA,GArBA,IAAAJ,UAAAzI,QAEAvB,EAAA0W,EACAhZ,EAAAiZ,EACAvM,EAAA1O,GACG,IAAAsO,UAAAzI,OACH,mBAAAoV,GAEA3W,EAAA0W,EACAhZ,EAAAiZ,IAGA3W,EAAA,KACAtC,EAAAgZ,EACAtM,EAAAuM,GAEG,IAAA3M,UAAAzI,SAEH7D,EAAAgZ,GAGA,iBAAAiL,GAAA,IAAAA,EAAApgB,OACA,UAAAyH,MAAA,gCAGA,GAAAtN,GAAA,mBAAAA,EACA,UAAAsN,MAAA,8BAGA,GAAAhJ,IAAA,iBAAAA,GAAA,IAAAA,EAAAuB,QACA,UAAAyH,MAAA,0BAGA,IAAAhJ,IAAA,OAAAtC,GAAA,qBAAAA,EAAA,YAAAM,EAAAN,KACA,UAAAsL,MAAA,qEAGA,IAAAxB,EAAA3L,KAAA8kB,SAAAgB,GACA,GAAAna,EACAxH,GAAAoK,EACA5C,EAAAoE,IAAA5L,EAAAtC,EAAA0M,GACKpK,EACLwH,EAAAoE,IAAA5L,EAAAtC,GACK0M,EACL5C,EAAAoE,IAAAlO,EAAA0M,GAEA5C,EAAAoE,IAAAlO,OAEG,CACH,IAAAkkB,EAAA5hB,GAAA2hB,GAAA,EAAA3hB,EAAAtB,EAAA4O,MAAA5P,KAAAikB,GAAA,EAAAjkB,GACAsZ,KACA5M,IACA4M,EAAAC,cAAA,EACApb,KAAAua,gBAAAuL,MACA9lB,KAAAua,gBAAAuL,IAAA,GAAAvX,GAEAwX,EAAAzgB,KAAA6V,GACAnb,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAsL,OAAAvM,EAAAoB,QAAAolB,gBAAAD,KAYA5a,EAAA3J,UAAAsK,SAAA,SAAAzG,GACA,IAAAzF,OAAA,EAEA,GAAAyF,EAAA1E,SAAAnB,EAAAoB,QAAAmE,OAAAM,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAsb,gBAAAtX,EAAAxD,KAAA,KAAArC,EAAAoB,QAAA2c,UAAAlY,EAAAxD,KAAA,KAAArC,EAAAoB,QAAAskB,KAAA7f,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAiR,eAGA,OAFAjN,EAAAqH,gBAAA,OACA1M,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAsL,OAAA1G,EAAAxD,KAAA,GAAAwD,EAAAxD,KAAA,IAIA,GAAAwD,EAAA1E,SAAAnB,EAAAoB,QAAAC,KAAAwE,EAAA1E,SAAAnB,EAAAoB,QAAAmE,MAAA,CAUA,GATAnF,EAAAyF,EAAAxD,KAAA,GASAwD,EAAAxD,KAAA,KAAArC,EAAAoB,QAAAsb,QAAA7W,EAAAxD,KAAA,KAAArC,EAAAoB,QAAA4Q,aAAAnM,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAiR,gBAAAjN,EAAAxD,KAAA,KAAArC,EAAAoB,QAAAsb,OAOA,OANAlc,KAAAglB,qBAAAvb,KAAA,eAAA7J,EAAAyF,QAEAA,EAAAxD,KAAA,KAAArC,EAAAoB,QAAAsb,QAAAlc,KAAA8kB,SAAAllB,IACAI,KAAA8kB,SAAAllB,GAAAgJ,YAAAvD,IAMA,GAAAA,EAAAxD,KAAA,KAAArC,EAAAoB,QAAA2c,SAGA,OAFAlY,EAAAqH,gBAAA,OACA1M,KAAAmlB,kBAAAc,QAAArmB,EAAAyF,EAAAxD,KAAA,IAIA,GAAAwD,EAAAxD,KAAA,KAAArC,EAAAoB,QAAAskB,IAGA,OAFA7f,EAAAqH,gBAAA,OACA1M,KAAAmlB,kBAAAc,QAAArmB,EAAAyF,EAAAxD,KAAA,SAIAjC,EAAAyF,EAAAxD,KAAA,GAGA,IAAAqkB,GAAA,EAEAva,EAAA3L,KAAA8kB,SAAAllB,GACA+L,IACAua,GAAA,EACAva,EAAA/C,YAAAvD,IAGAA,EAAA1E,SAAAnB,EAAAoB,QAAAga,MAAA5a,KAAAmlB,kBAAAgB,WAAAvmB,IACAsmB,GAAA,EACAlmB,KAAAmlB,kBAAAc,QAAArmB,EAAA,KAAAsI,KAAAM,MAAAnD,EAAAxD,KAAA,MACGwD,EAAA1E,SAAAnB,EAAAoB,QAAAskB,KAAAllB,KAAAilB,aAAAkB,WAAAvmB,IACHsmB,GAAA,EACAlmB,KAAAilB,aAAAgB,QAAArmB,EAAA,KAAAF,EAAAqC,aAAAsD,EAAAxD,KAAA,MACGwD,EAAA1E,SAAAnB,EAAAoB,QAAA6b,uBAAA9Q,EAGAtG,EAAA1E,SAAAnB,EAAAoB,QAAAC,KAAAwE,EAAAxD,KAAA,KAAArC,EAAAoB,QAAAsR,UAAAlS,KAAAkR,UAAAtR,IAAAI,KAAAkR,UAAAtR,GAAAgS,gBACHsU,GAAA,EACAlmB,KAAAkR,UAAAtR,GAAAiS,iBACA7R,KAAAkR,UAAAtR,IACGI,KAAAkR,UAAAtR,IACHsmB,GAAA,EACAlmB,KAAAkR,UAAAtR,GAAAgJ,YAAAvD,IACGA,EAAA1E,SAAAnB,EAAAoB,QAAAwR,iCAEH8T,GAAA,EACG7gB,EAAA1E,SAAAnB,EAAAoB,QAAAyR,4BAEH6T,GAAA,IAdAA,GAAA,EACArM,EAAA6C,6BAAArX,EAAArF,KAAAua,gBAAA3a,GAAAI,KAAAG,UAgBA+lB,IACA7gB,EAAAqH,gBAAA,EACA1M,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAsL,OAAAvM,EAAA6B,MAAAmR,oBAAA5S,KAaAuL,EAAA3J,UAAA6jB,eAAA,SAAAS,EAAA9kB,GACAhB,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAsL,OAAA/K,EAAA8kB,IAcA3a,EAAA3J,UAAA8jB,kBAAA,SAAAQ,GACA,GAAA9lB,KAAA8kB,SAAAgB,GAAA,CAIA,IAAAM,EAAApmB,KAAA8kB,SAAAgB,GAAAld,YAAA3H,KAAAjB,KAAA8kB,SAAAgB,IACA9lB,KAAAglB,qBAAAhX,KAAA,eAAA8X,EAAAM,GACApmB,KAAAulB,cAAAO,QALA9lB,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAsL,OAAA,uDAAA+Z,IAgBA3a,EAAA3J,UAAA+jB,cAAA,SAAAO,UACA9lB,KAAA8kB,SAAAgB,UACA9lB,KAAA+kB,OAAAe,IAGA7jB,EAAAC,QAAAiJ,qCClaA,IAAA3L,EAAAC,EAAA,QACAoR,EAAApR,EAAA,QACAkT,EAAAlT,EAAA,QACAE,EAAAF,EAAA,QACAC,EAAAD,EAAA,QACAoD,EAAApD,EAAA,QAeAyL,EAAA,SAAApL,EAAAkR,EAAAjR,GACAC,KAAAC,SAAAH,EACAE,KAAAyL,YAAAuF,EACAhR,KAAAG,QAAAJ,EACAC,KAAAqmB,SACArmB,KAAAsmB,cACAtmB,KAAAI,oBAAAL,EAAAM,0BACAL,KAAAmR,qBAAA,IAAAN,EAAA7Q,KAAAG,QAAAH,KAAAumB,WAAAtlB,KAAAjB,QAsBAkL,EAAA1J,UAAAglB,QAAA,SAAA5mB,EAAAC,GACA,oBAAAD,GAAA,IAAAA,EAAA8F,OACA,UAAAyH,MAAA,yBAEA,GAAAnN,KAAAsmB,WAAA1mB,GACA,UAAAuN,MAAA,OAAAvN,EAAA,uBAEA,sBAAAC,EACA,UAAAsN,MAAA,6BAGAnN,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAC,IACAd,OACAe,OAAAnB,EAAAoB,QAAA0Q,YAEAtR,KAAAsmB,WAAA1mB,GAAAC,EACAG,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAC,IAAAlB,EAAAoB,QAAA0Q,WAAA1R,KAWAsL,EAAA1J,UAAAilB,UAAA,SAAA7mB,GACA,oBAAAA,GAAA,IAAAA,EAAA8F,OACA,UAAAyH,MAAA,yBAGAnN,KAAAsmB,WAAA1mB,YACAI,KAAAsmB,WAAA1mB,GACAI,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAC,IACAd,OACAe,OAAAnB,EAAAoB,QAAA4Q,cAEAxR,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAC,IAAAlB,EAAAoB,QAAA4Q,aAAA5R,MAeAsL,EAAA1J,UAAAklB,KAAA,SAAA9mB,EAAAiC,EAAAhC,GACA,oBAAAD,GAAA,IAAAA,EAAA8F,OACA,UAAAyH,MAAA,yBAEA,sBAAAtN,EACA,UAAAsN,MAAA,6BAGA,IAAAwZ,EAAA3mB,KAAAG,QAAAmM,SACA8G,EAAAvQ,EAAA4O,MAAA5P,GAEA7B,KAAAqmB,MAAAM,GAAA,IAAAhnB,EAAAC,EAAAC,EAAAG,KAAAC,SAAAD,KAAAG,SACAH,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAC,IAAAlB,EAAAoB,QAAAO,SAAAvB,EAAA+mB,EAAAvT,KAaAlI,EAAA1J,UAAAolB,QAAA,SAAAhU,EAAAiU,EAAAC,GACA,IAAApb,EAAA1L,KAAAqmB,MAAAzT,GAEA,OAAAlH,IACA1L,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAC,IAAAlB,EAAA6B,MAAAmR,oBAAAsU,GACA,OAiBA5b,EAAA1J,UAAAulB,cAAA,SAAA1hB,GACA,IAAAzF,EAAAyF,EAAAxD,KAAA,GACA+Q,EAAAvN,EAAAxD,KAAA,GACAA,EAAA,KACAmlB,OAAA,EAEA3hB,EAAAxD,KAAA,KACAA,EAAAnC,EAAAqC,aAAAsD,EAAAxD,KAAA,GAAA7B,KAAAG,UAGAH,KAAAsmB,WAAA1mB,IACAonB,EAAA,IAAArU,EAAA3S,KAAAyL,YAAA7L,EAAAgT,GACA5S,KAAAsmB,WAAA1mB,GAAAiC,EAAAmlB,IAEAhnB,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAC,IAAAlB,EAAAoB,QAAAsI,WAAAtJ,EAAAgT,KAaA1H,EAAA1J,UAAAsK,SAAA,SAAAzG,GACA,IAAAwhB,OAAA,EACAjU,OAAA,EAGA,GAAAvN,EAAA1E,SAAAnB,EAAAoB,QAAAO,QAMA,GAAAkE,EAAA1E,SAAAnB,EAAAoB,QAAAC,KAAAwE,EAAAxD,KAAA,KAAArC,EAAAoB,QAAA0Q,WAAAjM,EAAAxD,KAAA,KAAArC,EAAAoB,QAAA4Q,YAAA,CAMA,GAAAnM,EAAA1E,SAAAnB,EAAAoB,QAAAmE,MAAA,CACA,GAAAM,EAAAxD,KAAA,KAAArC,EAAA6B,MAAA4lB,yBACA,OAEA,GAAA5hB,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAiR,gBAAAjN,EAAAxD,KAAA,KAAArC,EAAAoB,QAAA0Q,UAMA,YALAtR,KAAAI,oBAAAsB,QACAlB,MAAAhB,EAAAiB,MAAAC,IACAC,OAAAnB,EAAAoB,QAAA0Q,UACA1R,KAAAyF,EAAAxD,KAAA,KAUAwD,EAAA1E,SAAAnB,EAAAoB,QAAAmE,OAAAM,EAAA1E,SAAAnB,EAAAoB,QAAAC,KAEA+R,EADAvN,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAiR,gBAAAjN,EAAAxD,KAAA,KAAArC,EAAAoB,QAAAO,QACAkE,EAAAxD,KAAA,GAEAwD,EAAAxD,KAAA,GAEAglB,EAAAxhB,EAAAxD,KAAA,KAEAglB,EAAAxhB,EAAAxD,KAAA,GACA+Q,EAAAvN,EAAAxD,KAAA,IAMA,IAAA6J,EAAA1L,KAAA4mB,QAAAhU,EAAAiU,EAAAxhB,EAAAuP,KACA,OAAAlJ,IAKArG,EAAA1E,SAAAnB,EAAAoB,QAAAC,IACA6K,EAAAjK,MACG4D,EAAA1E,SAAAnB,EAAAoB,QAAAyS,UACH3H,EAAA9J,QAAAyD,EAAAxD,KAAA,WACA7B,KAAAqmB,MAAAzT,IACGvN,EAAA1E,SAAAnB,EAAAoB,QAAAmE,QACHM,EAAAqH,gBAAA,EACAhB,EAAA1K,MAAAqE,EAAAxD,KAAA,WACA7B,KAAAqmB,MAAAzT,UApDA5S,KAAAI,oBAAAqS,MAAApN,QANArF,KAAA+mB,cAAA1hB,IAoEA6F,EAAA1J,UAAA+kB,WAAA,WACA,QAAAM,KAAA7mB,KAAAsmB,WACAtmB,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAC,IAAAlB,EAAAoB,QAAA0Q,WAAAuV,KAIA5kB,EAAAC,QAAAgJ,0BCpQAjJ,EAAAC,SAAkBqO,QAAA9Q,EAAA,QAAA2Q,YAAA,sCCGlB,IAAAyJ,EAAApa,EAAA,QAmBAklB,EAAA,SAAAuC,GACAlnB,KAAAJ,KAAA,KACAI,KAAAmnB,eAAAD,EACAlnB,KAAAonB,QAAA,KACApnB,KAAAqnB,kBACArnB,KAAAsnB,aAAA,UACAtnB,KAAAsnB,aAAA,OACAtnB,KAAAsnB,aAAA,YAzBA7nB,EAAA,OA4BAsR,CAAA4T,EAAAnjB,WAaAmjB,EAAAnjB,UAAAqJ,IAAA,SAAA1G,GACA,UAAAnE,KAAAonB,QAIA,OAAApnB,KAAAonB,QAAAvc,IAAA1G,IAiBAwgB,EAAAnjB,UAAA6P,UAAA,WACA,IAAAkW,EAAA1N,EAAArY,UAAAia,oBAAAtN,WACAoZ,EAAA/L,YAAA,EACAxb,KAAAqnB,eAAA/hB,KAAAiiB,GAEA,OAAAvnB,KAAAonB,SACApnB,KAAAonB,QAAA/V,UAAAkW,IAiBA5C,EAAAnjB,UAAA+P,YAAA,WACA,IAAAgW,EAAA1N,EAAArY,UAAAia,oBAAAtN,WACAqZ,KACA/e,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAAzI,KAAAqnB,eAAA3hB,OAAgC+C,IAC7CzI,KAAAqnB,eAAA5e,GAAAtE,OAAAojB,EAAApjB,MAAAnE,KAAAqnB,eAAA5e,GAAA5I,WAAA0nB,EAAA1nB,UACA2nB,EAAAliB,KAAAtF,KAAAqnB,eAAA5e,IAIAzI,KAAAqnB,eAAAG,EAEA,OAAAxnB,KAAAonB,SACApnB,KAAAonB,QAAA7V,YAAAgW,IAaA5C,EAAAnjB,UAAAimB,QAAA,SAAA3B,GACA,GAAA9lB,KAAAJ,OAAAkmB,EAAA,CAIA9lB,KAAAJ,KAAAkmB,EAEA,IAAArd,OAAA,EAEA,UAAAzI,KAAAonB,UAAApnB,KAAAonB,QAAAlN,YAAA,CACA,IAAAzR,EAAA,EAAeA,EAAAzI,KAAAqnB,eAAA3hB,OAAgC+C,IAC/CzI,KAAAonB,QAAA7V,YAAAvR,KAAAqnB,eAAA5e,IAEAzI,KAAAonB,QAAAxL,UAKA,IAFA5b,KAAAonB,QAAApnB,KAAAmnB,eAAA/B,UAAAU,GAEArd,EAAA,EAAaA,EAAAzI,KAAAqnB,eAAA3hB,OAAgC+C,IAC7CzI,KAAAonB,QAAA/V,UAAArR,KAAAqnB,eAAA5e,IAGAzI,KAAAonB,QAAA1L,UAAA1b,KAAAyJ,KAAAxI,KAAAjB,KAAA,UACAA,KAAAyJ,KAAA,cAAAqc,KAYAnB,EAAAnjB,UAAA8lB,aAAA,SAAAtJ,GACAhe,KAAAge,GAAAhe,KAAA0nB,oBAAAzmB,KAAAjB,KAAAge,IAaA2G,EAAAnjB,UAAAkmB,oBAAA,SAAA1J,GACA,UAAAhe,KAAAonB,QACA,UAAAja,MAAA,gBAAA6Q,EAAA,yDAGA,sBAAAhe,KAAAonB,QAAApJ,GACA,UAAA7Q,MAAA6Q,EAAA,kCAGA,IAAAvP,EAAAhB,MAAAjM,UAAAoL,MAAA+M,KAAAxL,UAAA,GAEA,OAAAnO,KAAAonB,QAAApJ,GAAA9P,MAAAlO,KAAAonB,QAAA3Y,IAGAxM,EAAAC,QAAAyiB,qCClLA,IAAAnlB,EAAAC,EAAA,QACAoR,EAAApR,EAAA,QAgBAolB,EAAA,SAAA9kB,EAAAiR,EAAAxQ,EAAAG,EAAAgnB,GACA3nB,KAAAG,QAAAJ,EACAC,KAAAyL,YAAAuF,EACAhR,KAAA4nB,OAAApnB,EACAR,KAAA6nB,QAAAlnB,EACAX,KAAA8nB,iBAAAH,EACA3nB,KAAA+nB,aACA/nB,KAAAI,oBAAAL,EAAAM,0BACAL,KAAAmR,qBAAA,IAAAN,EAAA7Q,KAAAG,QAAAH,KAAAgoB,gBAAA/mB,KAAAjB,OACAA,KAAAioB,mBAAAjoB,KAAAioB,mBAAAhnB,KAAAjB,OAWA6kB,EAAArjB,UAAA2kB,WAAA,SAAAvmB,GACA,QAAAI,KAAA+nB,UAAAnoB,IAaAilB,EAAArjB,UAAAmkB,QAAA,SAAA/lB,EAAAC,GACAG,KAAA+nB,UAAAnoB,KACAI,KAAA+nB,UAAAnoB,MACAI,KAAAyL,YAAAvG,QAAAlF,KAAA4nB,OAAA5nB,KAAA6nB,SAAAjoB,KAGA,IAAA+B,EAAA3B,KAAAI,oBAAAG,KACAC,MAAAR,KAAA4nB,OACAxmB,MAAA5B,EAAA6B,MAAAC,iBACA1B,OACAe,OAAAX,KAAA6nB,QACA/mB,QAAAd,KAAA8nB,iBACAjoB,SAAAG,KAAAioB,qBAEAjoB,KAAA+nB,UAAAnoB,GAAA0F,MAA6BzF,WAAA8B,WAc7BkjB,EAAArjB,UAAAykB,QAAA,SAAArmB,EAAAoB,EAAAa,GACA,IAAAqmB,EAAAloB,KAAA+nB,UAAAnoB,GAEA,GAAAsoB,EAAA,CAKA,QAAAzf,EAAA,EAAiBA,EAAAyf,EAAAxiB,OAAoB+C,IAAA,CACrC,IAAA0f,EAAAD,EAAAzf,GACAzI,KAAAI,oBAAAsB,QACAC,MAAAwmB,EAAAxmB,QAEAwmB,EAAAtoB,SAAAmB,EAAAa,UAEA7B,KAAA+nB,UAAAnoB,QAXAI,KAAAG,QAAA2E,UAAA9E,KAAA4nB,OAAApoB,EAAA6B,MAAAmR,oBAAA,gBAAA5S,IAsBAilB,EAAArjB,UAAAymB,mBAAA,SAAAnnB,GACA,IAAAkH,EAAA,oCAAAhI,KAAA4nB,OAAA,IAAA5nB,KAAA6nB,QAAA,IAAA/mB,EAAAlB,KACAI,KAAAG,QAAA2E,UAAA9E,KAAA4nB,OAAApoB,EAAA6B,MAAAC,iBAAA0G,IASA6c,EAAArjB,UAAAwmB,gBAAA,WACA,QAAArC,KAAA3lB,KAAA+nB,UACA/nB,KAAAyL,YAAAvG,QAAAlF,KAAA4nB,OAAA5nB,KAAA6nB,SAAAlC,KAIA1jB,EAAAC,QAAA2iB,qCC3HA,IAAAuD,EAAA3oB,EAAA,QACA4oB,EAAA5oB,EAAA,QAEAwC,EAAAC,QAAA,SAAAomB,EAAAlQ,EAAA7I,GACA6I,KAAAkQ,EAAAF,EAAAG,EAAAD,EAAAlQ,EAAAiQ,EAAA,EAAA9Y,IACA+Y,EAAAlQ,GAAA7I,2DCJA,IAAA/P,EAAAC,EAAA,QACAoR,EAAApR,EAAA,QAeAqR,EAAA,SAAAtQ,EAAAmR,EAAA9R,EAAAC,EAAAC,EAAAiR,GACAhR,KAAA4nB,OAAApnB,EACAR,KAAAE,UAAAL,EACAG,KAAAwoB,SAAA7W,EACA3R,KAAAC,SAAAH,EACAE,KAAAG,QAAAJ,EACAC,KAAAyL,YAAAuF,EACAhR,KAAAI,oBAAAL,EAAAM,0BACAL,KAAAI,oBAAAG,KACAC,MAAAR,KAAA4nB,OACAhoB,KAAA+R,EACAhR,OAAAnB,EAAAoB,QAAA6nB,SAGAzoB,KAAAmR,qBAAA,IAAAN,EAAA9Q,EAAAC,KAAA0oB,YAAAznB,KAAAjB,OACAA,KAAA0oB,cACA1oB,KAAA4R,gBAAA,GAGAd,EAAAtP,UAAAyQ,YAAA,WACAjS,KAAA4R,gBAAA,EACA5R,KAAAyL,YAAAvG,QAAAlF,KAAA4nB,OAAApoB,EAAAoB,QAAAsR,UAAAlS,KAAAwoB,WACAxoB,KAAAmR,qBAAAU,WAQAf,EAAAtP,UAAAqQ,QAAA,WACA7R,KAAAE,UAAA,KACAF,KAAAwoB,SAAA,KACAxoB,KAAAG,QAAA,KACAH,KAAAyL,YAAA,MAYAqF,EAAAtP,UAAAmnB,OAAA,SAAA/oB,GACAI,KAAAyL,YAAAvG,QAAAlF,KAAA4nB,OAAApoB,EAAAoB,QAAAgoB,eAAA5oB,KAAAwoB,SAAA5oB,KAaAkR,EAAAtP,UAAA2R,OAAA,SAAAvT,GACAI,KAAAyL,YAAAvG,QAAAlF,KAAA4nB,OAAApoB,EAAAoB,QAAAioB,eAAA7oB,KAAAwoB,SAAA5oB,KASAkR,EAAAtP,UAAAsnB,wBAAA,SAAAzjB,GACA,OACAsjB,OAAA3oB,KAAA2oB,OAAA1nB,KAAAjB,KAAAqF,EAAAxD,KAAA,IACAsR,OAAAnT,KAAAmT,OAAAlS,KAAAjB,KAAAqF,EAAAxD,KAAA,MAUAiP,EAAAtP,UAAAoH,YAAA,SAAAvD,GACAA,EAAA1E,SAAAnB,EAAAoB,QAAAC,IACAb,KAAAI,oBAAAqS,MAAApN,GACGA,EAAA1E,SAAAnB,EAAAoB,QAAAmoB,+BACH/oB,KAAAE,UAAAmF,EAAAxD,KAAA,MAAA7B,KAAA8oB,wBAAAzjB,IACGA,EAAA1E,SAAAnB,EAAAoB,QAAAwR,iCACHpS,KAAAE,UAAAmF,EAAAxD,KAAA,OAEA7B,KAAAG,QAAA2E,UAAA9E,KAAA4nB,OAAApoB,EAAA6B,MAAAmR,oBAAAnN,EAAAxD,KAAA,OAAAwD,EAAAxD,KAAA,KAUAiP,EAAAtP,UAAAknB,YAAA,WACA1oB,KAAAyL,YAAAvG,QAAAlF,KAAA4nB,OAAApoB,EAAAoB,QAAA6nB,QAAAzoB,KAAAwoB,YAGAvmB,EAAAC,QAAA4O,qCCjGA,SAAAkY,EAAA1mB,EAAA2mB,GACA,OAAAve,OAAAlJ,UAAAwnB,eAAArP,KAAArX,EAAA2mB,GAGAhnB,EAAAC,QAAA,SAAAgnB,EAAAC,EAAAC,EAAAtpB,GACAqpB,KAAA,IACAC,KAAA,IACA,IAAA9mB,KAEA,oBAAA4mB,GAAA,IAAAA,EAAAxjB,OACA,OAAApD,EAGA,IAAA+mB,EAAA,MACAH,IAAAxV,MAAAyV,GAEA,IAAAG,EAAA,IACAxpB,GAAA,iBAAAA,EAAAwpB,UACAA,EAAAxpB,EAAAwpB,SAGA,IAAA5a,EAAAwa,EAAAxjB,OAEA4jB,EAAA,GAAA5a,EAAA4a,IACA5a,EAAA4a,GAGA,QAAA7gB,EAAA,EAAiBA,EAAAiG,IAASjG,EAAA,CAC1B,IAEA8gB,EAAAC,EAAAxR,EAAA0L,EAFA+F,EAAAP,EAAAzgB,GAAAgE,QAAA4c,EAAA,OACAK,EAAAD,EAAApI,QAAA+H,GAGAM,GAAA,GACAH,EAAAE,EAAAxV,OAAA,EAAAyV,GACAF,EAAAC,EAAAxV,OAAAyV,EAAA,KAEAH,EAAAE,EACAD,EAAA,IAGAxR,EAAAiK,mBAAAsH,GACA7F,EAAAzB,mBAAAuH,GAEAR,EAAA1mB,EAAA0V,GAEK3I,EAAA/M,EAAA0V,IACL1V,EAAA0V,GAAA1S,KAAAoe,GAEAphB,EAAA0V,IAAA1V,EAAA0V,GAAA0L,GAJAphB,EAAA0V,GAAA0L,EAQA,OAAAphB,GAGA,IAAA+M,EAAA5B,MAAA4B,SAAA,SAAAsa,GACA,yBAAAjf,OAAAlJ,UAAA6G,SAAAsR,KAAAgQ,uCChFAznB,EAAAoC,oBAEApC,EAAAoC,iBAAAC,OAAA,SACArC,EAAAoC,iBAAAwD,oBAAA,sBACA5F,EAAAoC,iBAAA0E,YAAA,cACA9G,EAAAoC,iBAAAM,wBAAA,0BACA1C,EAAAoC,iBAAA4C,eAAA,iBACAhF,EAAAoC,iBAAAmB,KAAA,OACAvD,EAAAoC,iBAAAS,MAAA,QACA7C,EAAAoC,iBAAAsF,aAAA,eAEA1H,EAAAyR,kBAAA/D,OAAAiH,aAAA,IACA3U,EAAAwS,uBAAA9E,OAAAiH,aAAA,IAEA3U,EAAA6R,SACA7R,EAAA6R,MAAAC,OAAA,IACA9R,EAAA6R,MAAAG,OAAA,IACAhS,EAAA6R,MAAAI,OAAA,IACAjS,EAAA6R,MAAAM,KAAA,IACAnS,EAAA6R,MAAAO,KAAA,IACApS,EAAA6R,MAAAQ,MAAA,IACArS,EAAA6R,MAAAS,UAAA,IAEAtS,EAAAzB,SACAyB,EAAAzB,MAAAiH,WAAA,IACAxF,EAAAzB,MAAA2G,KAAA,IACAlF,EAAAzB,MAAAsE,MAAA,IACA7C,EAAAzB,MAAAY,MAAA,IACAa,EAAAzB,MAAAsL,OAAA,IACA7J,EAAAzB,MAAAC,IAAA,IACAwB,EAAAzB,MAAAuL,SAAA,IACA9J,EAAAzB,MAAAmpB,QAAA,WAEA1nB,EAAAb,SACAa,EAAAb,MAAAsG,iBAAA,kBACAzF,EAAAb,MAAAqI,yBAAA,yBACAxH,EAAAb,MAAA6I,kCAAA,oCACAhI,EAAAb,MAAA+H,kCAAA,oCACAlH,EAAAb,MAAAyL,YAAA,cACA5K,EAAAb,MAAAwoB,gBAAA,kBACA3nB,EAAAb,MAAAC,iBAAA,mBACAY,EAAAb,MAAA8a,eAAA,iBACAja,EAAAb,MAAAmR,oBAAA,sBACAtQ,EAAAb,MAAAiR,eAAA,iBACApQ,EAAAb,MAAAsL,oBAAA,sBACAzK,EAAAb,MAAAsb,eAAA,iBACAza,EAAAb,MAAA0L,kBAAA,oBACA7K,EAAAb,MAAA4lB,yBAAA,2BACA/kB,EAAAb,MAAAyQ,gBAAA,kBACA5P,EAAAb,MAAA8Q,cAAA,gBACAjQ,EAAAb,MAAAgI,uBAAA,yBACAnH,EAAAb,MAAA4D,iBAAA,mBACA/C,EAAAb,MAAA2D,UAAA,YACA9C,EAAAb,MAAAyoB,iBAAA,mBACA5nB,EAAAb,MAAAkR,eAAA,iBAEArQ,EAAAtB,WACAsB,EAAAtB,QAAAiI,KAAA,KACA3G,EAAAtB,QAAAkI,KAAA,KACA5G,EAAAtB,QAAAC,IAAA,IACAqB,EAAAtB,QAAAuI,SAAA,MACAjH,EAAAtB,QAAAmI,UAAA,KACA7G,EAAAtB,QAAAqI,mBAAA,MACA/G,EAAAtB,QAAAga,KAAA,IACA1Y,EAAAtB,QAAAmpB,OAAA,IACA7nB,EAAAtB,QAAA2b,OAAA,IACAra,EAAAtB,QAAA4b,MAAA,IACAta,EAAAtB,QAAAsb,OAAA,IACAha,EAAAtB,QAAA0Q,UAAA,IACApP,EAAAtB,QAAA4Q,YAAA,KACAtP,EAAAtB,QAAAskB,IAAA,IACAhjB,EAAAtB,QAAA2c,SAAA,KACArb,EAAAtB,QAAAopB,OAAA,IACA9nB,EAAAtB,QAAAmoB,+BAAA,KACA7mB,EAAAtB,QAAAwR,iCAAA,KACAlQ,EAAAtB,QAAAyR,0BAAA,KACAnQ,EAAAtB,QAAA6nB,OAAA,IACAvmB,EAAAtB,QAAAsR,SAAA,KACAhQ,EAAAtB,QAAAgoB,cAAA,KACA1mB,EAAAtB,QAAAioB,cAAA,KACA3mB,EAAAtB,QAAAqpB,gBAAA,KACA/nB,EAAAtB,QAAAspB,MAAA,IACAhoB,EAAAtB,QAAAgd,aAAA,KACA1b,EAAAtB,QAAAolB,gBAAA,KACA9jB,EAAAtB,QAAAS,MAAA,MACAa,EAAAtB,QAAAmE,MAAA,IACA7C,EAAAtB,QAAAO,QAAA,MACAe,EAAAtB,QAAAyS,SAAA,MACAnR,EAAAtB,QAAAsI,UAAA,MACAhH,EAAAtB,QAAAupB,cAAA,MACAjoB,EAAAtB,QAAAwpB,eAAA,MACAloB,EAAAtB,QAAA6b,sBAAA,KAEAva,EAAAmoB,cACAnoB,EAAAmoB,WAAAC,QAAA,UACApoB,EAAAmoB,WAAAE,WAAA,aACAroB,EAAAmoB,WAAAG,YAAA,cACAtoB,EAAAmoB,WAAAI,SAAA,WACAvoB,EAAAmoB,WAAAK,SAAA,WACAxoB,EAAAmoB,WAAAM,MAAA,QACAzoB,EAAAmoB,WAAAtlB,MAAA,oIC7DA6lB,GACAhrB,KAAA,YACAiC,KAFA,WAGA,OACAgpB,UAEAC,MAAA,MACAxd,IAAA,YACAyd,UAAA,EACAC,OAAA,SAAApI,EAAAqI,GACA,OAAArI,EACA,KAEAsI,OACArM,KAAA,yBAAAoM,EAAAE,IAAAC,UACAC,OAAA,WAGAJ,EAAAE,IAAAC,cAKAN,MAAA,MACAxd,IAAA,cACAyd,UAAA,IAGAD,MAAA,SACAxd,IAAA,UACAyd,UAAA,EACAC,OAAA,SAAApI,EAAAqI,GAmBA,OAAArI,EAAA,OAjBA,SAAA0I,GACA,IAAAC,EAAA,IAAA/jB,KAAA8jB,GACAE,EAAAD,EAAAE,cACAzS,EAAAuS,EAAAG,WAAA,EACA1S,IAAA,OAAAA,IACA,IAAA2S,EAAAJ,EAAAK,UACAD,IAAA,OAAAA,IACA,IAAA/I,EAAA2I,EAAAM,WACAjJ,IAAA,OAAAA,IACA,IAAAkJ,EAAAP,EAAAQ,aACAC,EAAAT,EAAAU,aAGA,OACAT,EAAA,IAAAxS,EAAA,IAAA2S,EAAA,IAAA/I,EAAA,KAHAkJ,IAAA,OAAAA,KAGA,KAFAE,IAAA,OAAAA,KAKAE,CAAAjB,EAAAE,IAAAgB,aAIAC,cACAC,SAAA,EACAC,UAAA,EACAC,SAAA,EACAC,YAAA,EACAC,YAAA,EACArB,UAAA,GACAsB,YAAA,GACAP,WACAQ,QAAA,EACAC,YAAA,KACAC,WAAA,aAGArd,OAAA,qCAEAsd,OACAC,QACAC,QAAA,SAAAzd,EAAAN,GACAjP,KAAAitB,kBAGAC,MAAA,SAAA3d,EAAAN,GACAjP,KAAAysB,WAAAld,IAIA4d,SAIAC,kBAJA,SAIAZ,GACAxsB,KAAAwsB,cACAxsB,KAAAitB,iBAGAI,mBATA,SASA7jB,GACAA,IACAxJ,KAAAstB,MAAA,aAAAJ,OAAA,EAAAH,OAAA,KACA/sB,KAAAorB,UAAA,GACAprB,KAAA0sB,YAAA,GACA1sB,KAAAmsB,QAAA,GACAnsB,KAAAwsB,YAAA,IAKAe,gBAAA,WACAvtB,KAAAorB,UAAA,GACAprB,KAAA0sB,YAAA,GACA1sB,KAAAmsB,QAAA,GACAnsB,KAAAitB,iBAIAA,cAAA,SAAA7kB,GAAA,IAAAL,EAAA/H,KACAmsB,EAAA,GACAnsB,KAAAmsB,QAAAzmB,OAAA,GAAA1F,KAAAmsB,QAAA,KACAA,EACAzhB,OAAA5H,EAAA,EAAA4H,CAAA1K,KAAAmsB,QAAA,iBACA,IACAzhB,OAAA5H,EAAA,EAAA4H,CAAA1K,KAAAmsB,QAAA,kBAEA,IAAAlB,GACApX,KAAA7T,KAAA6T,KACA2Z,KAAAxtB,KAAAwsB,YACAO,OAAA/sB,KAAA+sB,OACAU,MAAAztB,KAAAusB,SACAmB,QACAtC,UAAAprB,KAAAorB,UACAsB,YAAA1sB,KAAA0sB,YACAP,YAGAA,GAAAnsB,KAAAorB,WAAAprB,KAAA0sB,oBACAzB,EAAAyC,OAEA1tB,KAAAqsB,SAAA,EACA3hB,OAAAijB,EAAA,EAAAjjB,CAAAugB,GAAA2C,KAAA,SAAAC,GACA9lB,EAAAukB,UAAAuB,EAAAC,MAEA/lB,EAAAqkB,WAAAyB,EAAAE,aACAhmB,EAAAskB,SAAA,KAKA2B,cAAA,WACAhuB,KAAA2sB,QAKA3sB,KAAA2sB,QAAA,EACA3sB,KAAA4sB,YAAA,KACA5sB,KAAA6sB,WAAA,aANA7sB,KAAA2sB,QAAA,EACA3sB,KAAA4sB,YAAA,KACA5sB,KAAA6sB,WAAA,eCvLAoB,GADiBjD,OAFjB,WAA0B,IAAAkD,EAAAluB,KAAamuB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,SAAmBnD,OAAOJ,MAAA,UAAAoD,EAAAK,UAAAC,MAAA,MAAAC,SAAA,IAA4D7gB,IAAK8gB,oBAAAR,EAAAb,oBAA2CsB,OAAQpf,MAAA2e,EAAA,WAAAruB,SAAA,SAAA+uB,GAAgDV,EAAAzB,WAAAmC,GAAmBC,WAAA,gBAA0BR,EAAA,OAAAA,EAAA,OAAsBS,YAAA,qBAA+BT,EAAA,SAAAH,EAAAa,GAAA,UAAAb,EAAAa,GAAA,KAAAV,EAAA,SAAuDS,YAAA,kBAAAE,aAA2CR,MAAA,QAAAS,cAAA,QAAqC/D,OAAQgE,YAAA,UAAuBP,OAAQpf,MAAA2e,EAAA,UAAAruB,SAAA,SAAA+uB,GAA+CV,EAAA9C,UAAAwD,GAAkBC,WAAA,gBAAyB,GAAAX,EAAAa,GAAA,KAAAV,EAAA,OAA4BS,YAAA,qBAA+BT,EAAA,SAAAH,EAAAa,GAAA,UAAAb,EAAAa,GAAA,KAAAV,EAAA,SAAuDW,aAAaR,MAAA,QAAAS,cAAA,QAAqC/D,OAAQgE,YAAA,UAAuBP,OAAQpf,MAAA2e,EAAA,YAAAruB,SAAA,SAAA+uB,GAAiDV,EAAAxB,YAAAkC,GAAoBC,WAAA,kBAA2B,GAAAX,EAAAa,GAAA,KAAAV,EAAA,OAA4BS,YAAA,eAAyBT,EAAA,UAAenD,OAAOrX,KAAA,UAAAsb,KAAA,SAAgCvhB,IAAKwhB,MAAAlB,EAAAjB,iBAA2BiB,EAAAa,GAAA,QAAAb,EAAAa,GAAA,KAAAV,EAAA,UAA0CnD,OAAOiE,KAAA,SAAevhB,IAAKwhB,MAAAlB,EAAAX,mBAA6BW,EAAAa,GAAA,QAAAb,EAAAa,GAAA,KAAAV,EAAA,QAAwCS,YAAA,SAAAlhB,IAAyBwhB,MAAAlB,EAAAF,iBAA2BE,EAAAa,GAAA,aAAAb,EAAAmB,GAAAnB,EAAAtB,aAAA,cAAAyB,EAAA,KAAoES,YAAA,WAAAQ,UAAiCC,UAAArB,EAAAmB,GAAAnB,EAAArB,kBAAoC,KAAAqB,EAAAa,GAAA,KAAAV,EAAA,OAAgCmB,aAAa5vB,KAAA,OAAA6vB,QAAA,SAAAlgB,MAAA2e,EAAA,OAAAW,WAAA,WAAoEC,YAAA,kBAA8BT,EAAA,SAAAH,EAAAa,GAAA,WAAAb,EAAAa,GAAA,KAAAV,EAAA,cAA6DW,aAAaR,MAAA,SAAgBtD,OAAQ/L,OAAA,aAAAtL,KAAA,YAAA6b,UAAA,aAAAR,YAAA,WAA0FP,OAAQpf,MAAA2e,EAAA,QAAAruB,SAAA,SAAA+uB,GAA6CV,EAAA/B,QAAAyC,GAAgBC,WAAA,cAAuB,GAAAX,EAAAa,GAAA,KAAAV,EAAA,SAA8BnD,OAAOmB,QAAA6B,EAAA7B,QAAAxqB,KAAAqsB,EAAA9B,WAAAvB,QAAAqD,EAAArD,QAAAsE,KAAA,QAAAQ,OAAA,MAA8FzB,EAAAa,GAAA,KAAAV,EAAA,OAAwBW,aAAaY,OAAA,OAAArZ,SAAA,YAAqC8X,EAAA,OAAYW,aAAaa,MAAA,WAAiBxB,EAAA,QAAanD,OAAO4C,MAAAI,EAAA5B,UAAAwD,QAAA5B,EAAA1B,YAAAuD,YAAA7B,EAAA3B,SAAA4C,KAAA,QAAAa,aAAA,GAAAC,gBAAA,IAA2HriB,IAAKsiB,YAAAhC,EAAAd,sBAAmC,KAAAc,EAAAa,GAAA,KAAAV,EAAA,OAA8BnD,OAAOiF,KAAA,UAAgBA,KAAA,YAAe,IAEtwEC,oBCCjB,IAuBAC,EAvBA5wB,EAAA,OAcA6wB,CACA1F,EACAqD,GATA,EAVA,SAAAsC,GACA9wB,EAAA,SAaA,kBAEA,MAUA,6BCjBA+wB,EAAA/wB,EAAA,QAEAgxB,GACAjhB,OAAA,UACA3N,KAFA,WAGA,OACA6uB,SACAC,SACAC,YAAA,EACAC,YACA/F,MAAA,KAIAqC,SACA2D,YADA,WAGA,IAAAC,EAAAP,EAAAQ,KAAAC,SAAAC,eAAA,kBAIA,QAAAvY,KAFAoY,EAAAnjB,GAAA,QAAA5N,KAAAmxB,YAEAnxB,KAAA0wB,aAGA1wB,KAAA0wB,MAAA/X,GAAAyY,OAIA,IAAAC,EAAArxB,KAAA6wB,SAAA9Z,IAAA,SAAAua,EAAAlZ,GACA,OACAxY,KAAA0xB,EAAA1xB,QAIAI,KAAA0wB,MAAAa,QAAA,SAAArhB,GACAA,EAAAshB,SAAAthB,EAAAkI,MACAlI,EAAAuhB,WAAA,EACAvhB,EAAAkhB,OAAA,kCAAAlhB,EAAAwhB,KAAA,SAKA,IAAAC,GACAC,WACAC,WAAA,EACAC,SAEAjwB,KAAAwvB,EAAAta,IAAA,SAAAgb,GACA,OAAAA,EAAAnyB,SAIAoyB,kBAAA,IACAC,wBAAA,IACAC,sBAAA,eACAC,SAEAvyB,KAAAI,KAAA8qB,MACAjX,KAAA,QACA2a,MAAA,QACA4D,OAAA,QACAC,IAAA,OACAC,OAAA,WACAC,UACAC,aAAA,GAEA3wB,KAAA7B,KAAA0wB,MACAC,MAAA3wB,KAAA2wB,MACAU,aACAI,WAAA,EACAgB,YAAA,gBAGAC,OACAC,QACAC,UAAA,aACAC,UAAA,QAGAC,WACAH,QACAI,MAAA,SACAC,UAAA,KAGAC,OACAC,UAAA,OAKAnC,EAAAoC,UAAAxB,IAGAR,WAhFA,SAgFAiC,GACA,YAAAA,EAAAC,aAGA,SAAAD,EAAAvf,KAAA,CACA,YAAAuf,EAAAvxB,KAAAgS,KASA,OARA,GAAAuf,EAAAvxB,KAAAmB,IAAA,CACA,IAAAA,EAAA,aAAAowB,EAAAvxB,KAAAmB,IACAuS,OAAA8c,IAAAiB,aACAzf,KAAA,WACA7Q,OACA,SASAuwB,QAhHA,WAgHA,IAAAxrB,EAAA/H,KACAwzB,EAAAxzB,KACA0K,OAAAijB,EAAA,EAAAjjB,CAAA1K,KAAAyzB,QAAA7F,KAAA,SAAAC,GACA,IAAA6C,KACA3oB,EAAA6oB,YAAA/C,EAAAgD,SAAAnrB,OACAqC,EAAA8oB,SAAAhD,EAAAgD,SACA9oB,EAAA+iB,MAAA+C,EAAA/C,MACA+C,GACAA,EAAAgD,SAAA9Z,IAAA,SAAAua,EAAAlZ,GACA,QAAAO,EAAA,EAAAA,EAAA2Y,EAAAoC,MAAAhuB,OAAAiT,IACA2Y,EAAAoC,MAAA/a,GAAAP,QACAkZ,EAAAoC,MAAA/a,GAAA+Y,KAAAtZ,EAAA,IAAAO,EAEA+X,KAAAjR,OAAAkU,IAAAjD,GAAAiD,IAAArC,EAAAoC,UAGAzmB,QAAAC,IAAAwjB,GACAA,EAAA3Z,IAAA,SAAAua,GACAvpB,EAAA2oB,MAAAprB,MACA1F,KAAA0xB,EAAA/hB,MACAqkB,GAAAtC,EAAAsC,GACAxb,MAAAkZ,EAAAlZ,MACAsZ,KAAAJ,EAAAI,KACAniB,MAAA,GACAvM,IAAAsuB,EAAAtuB,IACA6Q,KAAAyd,EAAAzd,KAEAud,OAAA,OACAsB,OACAmB,MAAA,GAEAC,WACAC,YAAA,OACAC,WAAA,GACAC,cAAA,EACAC,cAAA,KAKA5C,EAAA6C,QAAApd,IAAA,SAAAsU,GACAtjB,EAAA4oB,MAAArrB,MACA0Z,OAAAsS,EAAAsC,GACAvI,SAAAuI,SAIAJ,EAAA1C,iBAIAsD,QAnKA,cCRAC,GADiBrJ,OAFjB,WAA0BhrB,KAAaouB,eAAbpuB,KAAuCsuB,MAAAD,GAAwB,OAA/DruB,KAA+Ds0B,GAAA,IAExElE,iBADjB,WAAoC,IAAajC,EAAbnuB,KAAaouB,eAA0BC,EAAvCruB,KAAuCsuB,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBS,YAAA,cAAwBT,EAAA,OAAYS,YAAA,QAAA5D,OAA2B0I,GAAA,wBCEnL,ICwHAW,GACA1yB,KADA,WAEA,OACA2yB,UAAA,EACAC,WAAA,GACAC,WAAA,GACAC,gBAAA,UACAC,kBAAA,UACAC,gBAAA,UACAC,kBAAA,UACAC,UAAA,EACAzlB,OACAwb,MAAA,GACA+F,YACAmE,aACAC,sBACAC,aACAC,UAAA,EACAC,kBAAA,OACAC,GAAAt1B,EAAA,uCACAu1B,QAAA,KAEAC,gBAAA,SACAC,kBAAA,OACAC,WAAA,OACAC,SAAA,SAEAC,sBACAC,YACAC,YACAC,UACAC,UAEA7I,OAAA,EACAqB,UAAA,GACAyH,WAAA,GACAniB,KAAA,WAIAoiB,YACArL,UAAAyF,EACA6F,cDlKAz2B,EAAA,OAcA02B,CACA1F,EACA4D,GATA,EAVA,SAAA9D,GACA9wB,EAAA,SAaA,kBAEA,MAUA,SC8IA+P,OAAA,UAEA2d,SACAiJ,KADA,WAkBA,IAhBA,IAAA3B,EAAAz0B,KAAAy0B,WACAC,EAAA10B,KAAA00B,WACA7yB,EAAA7B,KAAA6wB,SACAwF,KASAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAEA/tB,EAAA,EAAAA,EAAA5G,EAAA6D,OAAA+C,IAAA,CACA,IAAA+iB,EAAA,QAAA/iB,EAEA,GADA5G,EAAA4G,GAAAguB,MAAA,KAAAjL,EAAA,SAAAA,EACA3pB,EAAA4G,GAAAirB,MAAAhuB,OAAA,EACA,QAAAgxB,EAAA,EAAAA,EAAA70B,EAAA4G,GAAAirB,MAAAhuB,OAAAgxB,IAAA,CACA12B,KAAA6wB,SAAApoB,GAAAirB,MAAAgD,GAAAC,OACA,IAAAlC,EAAAC,GAAA7yB,EAAA4G,GAAAirB,MAAAgD,GAAAE,KACA52B,KAAA6wB,SAAApoB,GAAAirB,MAAAgD,GAAAG,OAAA,GAAApC,EAAA,MAAAhsB,EAEA4tB,EAAAr2B,KAAA6wB,SAAApoB,GAAAirB,MAAAgD,GAAA9C,IACA5zB,KAAA6wB,SAAApoB,GAAAirB,MAAAgD,GAAAC,OACA,IACA32B,KAAA6wB,SAAApoB,GAAAirB,MAAAgD,GAAAG,OAEA,IAAAC,EAAAj1B,EAAA4G,GAAAirB,MAAAgD,GACAI,EAAAlB,SAAA,IACA51B,KAAA41B,SAAAkB,EAAA/J,QAAA+J,EAAAlB,UAEAkB,EAAAjB,SAAA,IACA71B,KAAA61B,SAAAiB,EAAA/J,QAAA+J,EAAAjB,UAEAiB,EAAAhB,OAAA,IACA91B,KAAA81B,OAAAgB,EAAA/J,QAAA+J,EAAAhB,QAEAgB,EAAAf,OAAA,IACA/1B,KAAA+1B,OAAAe,EAAA/J,QAAA+J,EAAAf,SAMA,IAAAvC,EAAAxzB,KACA6B,EAAA0vB,QAAA,SAAAD,EAAAyF,GACAzF,EAAAoC,MAAAnC,QAAA,SAAAmC,EAAAsD,GACAtD,EAAAuD,cAAAvD,EAAAuD,aAAAvxB,OAAA,GAEAguB,EAAAuD,aAAA1F,QAAA,SAAA0F,EAAAC,GACAD,EAAArD,MAAAyC,IACAC,EAAAD,EAAAY,EAAArD,IAAAlgB,MAAA,KACA6iB,EAAA5Y,OAAA2Y,EAAA,IACAE,EAAA7Y,OAAA2Y,EAAA,IACA9C,EAAAyB,mBAAA3vB,MACAsuB,GAAAF,EAAAE,GAAA,IAAAqD,EAAArD,GACArkB,MAAAmkB,EAAAiD,OAAAlC,EAAA,IAAAf,EAAAmD,OAAA,KAAAN,EAAA,SAAAC,OAMA9C,EAAAS,SAAAT,EAAAS,QAAAzuB,OAAA,GACAguB,EAAAS,QAAA5C,QAAA,SAAA4C,EAAAgD,GACA,GAAAhD,EAAAP,MAAAyC,EAKA,GAJAC,EAAAD,EAAAlC,EAAAP,IAAAlgB,MAAA,KACA6iB,EAAA5Y,OAAA2Y,EAAA,IACAE,EAAA7Y,OAAA2Y,EAAA,IAEAnC,EAAAiD,WAAA9F,EAAAlZ,MAAA,CACA,IAAAif,GAAAd,EAAA7C,EAAAiD,SAAAlC,EAAAC,GAAA,IACAlB,EAAAwB,UAAA1vB,MACAsuB,GAAAF,EAAAE,GAAA,IAAAO,EAAAP,GACArkB,MAAAmkB,EAAAiD,OAAAlC,EAAA,OAAAf,EAAAmD,OAAApC,EAAA,QAAA8B,EAAA9B,EAAA,EAAA4C,GAAA,KAAAb,EAAA/B,EAAA,aAIA,GAAAN,EAAAiD,WAAA9F,EAAAlZ,MAAA,CACA,IAAAkf,GAAAf,EAAA7C,EAAAiD,SAAAlC,EAAAC,GAAA,IACAlB,EAAAwB,UAAA1vB,MACAsuB,GAAAF,EAAAE,GAAA,IAAAO,EAAAP,GACArkB,MAAAmkB,EAAAiD,OAAAlC,EAAA,OAAAf,EAAAmD,OAAApC,EAAA,WAAA8B,EAAA9B,EAAA,EAAA6C,GAAA,KAAAd,EAAA/B,EAAA,iBAYA8C,aAAA,SAAA1G,GACA,IAAA2G,EAAA,EACA,GAAA3G,EAAAnrB,OAAA,GACA8xB,EAAA3G,EAAA,GAAA6C,MAAAhuB,OAEA,QAAA+C,EAAA,EAAAA,EAAAooB,EAAAnrB,OAAA+C,IACA+uB,EAAA3G,EAAApoB,GAAAirB,MAAAhuB,SACA8xB,EAAA3G,EAAApoB,GAAAirB,MAAAhuB,QAIA,IAAA+xB,EACAD,GAAA,GAAAx3B,KAAAy0B,WAAAz0B,KAAA00B,YAAA,GACA,OAAAzD,SAAAyG,KAAAC,YAAAF,EACAxG,SAAAyG,KAAAC,YAEAF,GAMAG,cAAA,SAAA/G,GACA,IAAAjO,EAAAiO,EAAAnrB,OAAA,MAAAmrB,EAAAnrB,OAAA,OACA,OAAAurB,SAAAyG,KAAAG,aAAAjV,EACAqO,SAAAyG,KAAAG,aAEAjV,GAIAkV,SAAA,SAAAxG,EAAAlwB,GAGA,GAFApB,KAAAk1B,aAEA5D,EAAA6C,SAAA7C,EAAA6C,QAAAzuB,OAAA,EACA,QAAA+C,EAAA,EAAAA,EAAA6oB,EAAA6C,QAAAzuB,OAAA+C,IACAzI,KAAAk1B,UAAA5D,EAAAsC,GAAA,IAAAtC,EAAA6C,QAAA1rB,GAAAmrB,IAAAtC,EAAA6C,QAAA1rB,GAIA,GAAA6oB,EAAAyG,UAAAzG,EAAAyG,SAAAryB,OAAA,EACA,QAAA0J,EAAA,EAAAA,EAAAkiB,EAAAyG,SAAAryB,OAAA0J,IACApP,KAAAk1B,UAAA5D,EAAAyG,SAAA3oB,GAAAwkB,GAAA,IAAAtC,EAAAsC,IACAtC,EAAAyG,SAAA3oB,IAKA4oB,QAAA,SAAA5vB,GACApI,KAAAk1B,cAMA/D,WAAA,SAAAG,EAAAlwB,GACA,IAAA4B,EAAAsuB,EAAAtuB,IACA,YAAAsuB,EAAAzd,OAEA,WAAAyd,EAAAjG,OACA9V,OAAA0iB,KAAA3G,EAAAtuB,IAAA,WAGAA,GADAA,EAAAqe,QAAA,WACAiQ,EAAAtuB,KACAA,EAAAqe,QAAA,OACA,aAAAre,EAEA,UAAAA,EAEAuS,OAAA8c,IAAAiB,aAEAzf,KAAA,WACA7Q,OAEA,QAMAk1B,iBAAA,WACA,IAAAC,EAAAztB,OAAA5H,EAAA,EAAA4H,GACA1K,KAAAq1B,GAAAj0B,MAAAiQ,UAAA,cAAA8mB,EAAA,SAAAnwB,OAGAowB,iBAAA,SAAAhwB,GACApI,KAAA01B,SAAAttB,EACA,aAAApI,KAAA01B,UAAA,SAAA11B,KAAAy1B,YACAz1B,KAAA6T,KAAA,WACA7T,KAAA21B,mBAAA31B,KAAA41B,UACA,aAAA51B,KAAA01B,UAAA,SAAA11B,KAAAy1B,YACAz1B,KAAA6T,KAAA,WACA7T,KAAA21B,mBAAA31B,KAAA61B,UACA,WAAA71B,KAAA01B,UAAA,SAAA11B,KAAAy1B,YACAz1B,KAAA6T,KAAA,SACA7T,KAAA21B,mBAAA31B,KAAA81B,QACA,WAAA91B,KAAA01B,UAAA,SAAA11B,KAAAy1B,aACAz1B,KAAA6T,KAAA,SACA7T,KAAA21B,mBAAA31B,KAAA+1B,SAIAsC,2BAAA,SAAAjwB,GACApI,KAAAy1B,WAAArtB,EACA,aAAApI,KAAA01B,UAAA,SAAA11B,KAAAy1B,YACAz1B,KAAA6T,KAAA,WACA7T,KAAA21B,mBAAA31B,KAAA41B,UACA,aAAA51B,KAAA01B,UAAA,SAAA11B,KAAAy1B,YACAz1B,KAAA6T,KAAA,WACA7T,KAAA21B,mBAAA31B,KAAA61B,UACA,WAAA71B,KAAA01B,UAAA,SAAA11B,KAAAy1B,YACAz1B,KAAA6T,KAAA,SACA7T,KAAA21B,mBAAA31B,KAAA81B,QACA,WAAA91B,KAAA01B,UAAA,SAAA11B,KAAAy1B,aACAz1B,KAAA6T,KAAA,SACA7T,KAAA21B,mBAAA31B,KAAA+1B,SAOAuC,SA5NA,SA4NAlwB,GACApI,KAAAktB,OAAA,EACAltB,KAAAg2B,WAAA5tB,EAAAijB,OAAAkN,aAAA,UACAv4B,KAAAuuB,UAAAnmB,EAAAijB,OAAAkN,aAAA,cAIAC,UAnOA,SAmOAC,EAAArwB,GACApI,KAAAg2B,WAAAyC,EAAA1L,OACA/sB,KAAAktB,OAAA,GAMAE,kBA3OA,SA2OAZ,GAAA,IAAAzkB,EAAA/H,KACAirB,GACApX,KAAA7T,KAAA6T,KACA2Z,KAAAhB,EACAO,OAAA/sB,KAAAg2B,WACAvI,MAAAztB,KAAAusB,UAEAvsB,KAAAqsB,SAAA,EACA3hB,OAAAijB,EAAA,EAAAjjB,CAAAugB,GAAA2C,KAAA,SAAAC,GACAA,EAAAE,aAAAroB,OAAA,IACAqC,EAAAqkB,WAAAyB,EAAAE,aACAhmB,EAAAskB,SAAA,OAMAkH,QA3SA,WA4SA,IACAmF,EAAA14B,KAAA24B,aACAC,GAAAF,EAAAG,SAAAH,EAAAI,QAAAnyB,KAAA,KACAwxB,EAAAztB,OAAA5H,EAAA,EAAA4H,GAHA1K,KAIAq1B,GAAAlpB,OAEAgsB,QACAS,YAEA,SAAA/2B,GACAoL,QAAAC,IAAA,sBAIAlN,KAAAk4B,oBAEA9D,QA5TA,WA4TA,IAAAvY,EAAA7b,KACAwzB,EAAAxzB,KACA0K,OAAAijB,EAAA,EAAAjjB,CAAA1K,KAAAyzB,QACA7F,KAAA,SAAAC,GA6BAA,EAAAgD,SAAA9Z,IAAA,SAAA4U,GACAA,EAAA+H,OACA/H,EAAA+H,MAAA3c,IAAA,SAAAgiB,GACA,IA/BAC,EACAtH,EA+BA,YAAAqH,EAAAllB,MAAAklB,EAAAxpB,QACAwpB,EAAArH,KAAA,0BAjCAsH,EAiCAD,EAAAxpB,MAhCAmiB,EAAA,KAEA9xB,KAAA,KAAA8xB,KAAA,aACA9xB,KAAA,KAAA8xB,KAAA,oBACA9xB,KAAA,KAAA8xB,KAAA,wBACA9xB,KAAA,KAAA8xB,KAAA,cACA9xB,KAAA,KAAA8xB,KAAA,cACA9xB,KAAA,KAAA8xB,KAAA,YACA9xB,KAAA,KAAA8xB,KAAA,cACA9xB,KAAA,KAAA8xB,KAAA,qBACA9xB,KAAA,KAAA8xB,KAAA,oBACA9xB,KAAA,KAAA8xB,KAAA,mBACA9xB,KAAA,KAAA8xB,KAAA,aACA9xB,KAAA,KAAA8xB,KAAA,iBACA9xB,KAAA,KAAA8xB,KAAA,mBACA9xB,KAAA,KAAA8xB,KAAA,iBACA9xB,KAAA,KAAA8xB,KAAA,uBAGA3a,IAAA,SAAAmM,GACAA,EAAAtjB,OAAAo5B,IACAtH,EAAAxO,EAAAwO,QAIAA,QAaA8B,EAAA1I,MAAA+C,EAAA/C,MACA0I,EAAA3C,SAAAhD,EAAAgD,SAEA,IAAA0G,EACA/D,EAAA+D,aAAA1J,EAAAgD,UAAA,KACA2C,EAAA+D,aAAA1J,EAAAgD,UACA,KACA+G,EAAApE,EAAAoE,cAAA/J,EAAAgD,UACAtb,OAAA0b,SAAAC,eAAA,cACA3b,OAAA0b,SAAAC,eAAA,YAAA+H,MAAAzK,MACA+I,EAAA,KACAhiB,OAAA0b,SAAAC,eAAA,YAAA+H,MAAA7G,OACAwF,EAAA,KAEApE,EAAA4C,OAEAva,EAAA8Z,mBAAA9Z,EAAAka,OAEAvC,EAAAgB,UAAA,KAGA0E,MAAA,SAAAl4B,GACA,IAEAm4B,EAAA,MAAAn4B,EAAA,OAFA6a,EAGAud,OAAAp4B,OACA8pB,MAHA,KAIAqO,UACA1K,UAAA,QC3fA4K,GADiBrO,OAFjB,WAA0B,IAAAkD,EAAAluB,KAAamuB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBS,YAAA,mCAA6CZ,EAAA,SAAAG,EAAA,QAA4BnD,OAAOiE,KAAA,QAAAmK,IAAA,MAAyBpL,EAAAqL,KAAArL,EAAAa,GAAA,KAAAV,EAAA,OAAiCnD,OAAO0I,GAAA,cAAiBvF,EAAA,cAAmBS,YAAA,UAAA5D,OAA6BiE,KAAA,SAAevhB,IAAKsiB,YAAAhC,EAAAkK,kBAAiCzJ,OAAQpf,MAAA2e,EAAA,gBAAAruB,SAAA,SAAA+uB,GAAqDV,EAAAqH,gBAAA3G,GAAwBC,WAAA,qBAA+BR,EAAA,SAAcnD,OAAOwH,MAAA,YAAkBrE,EAAA,KAAUS,YAAA,aAAuBZ,EAAAa,GAAA,OAAAb,EAAAa,GAAA,KAAAV,EAAA,QAAAH,EAAAa,GAAA,YAAAb,EAAAa,GAAA,KAAAV,EAAA,KAA8ES,YAAA,oBAA8BZ,EAAAa,GAAA,KAAAV,EAAA,SAA0BnD,OAAOwH,MAAA,cAAoBrE,EAAA,KAAUS,YAAA,aAAuBZ,EAAAa,GAAA,OAAAb,EAAAa,GAAA,KAAAV,EAAA,QAAAH,EAAAa,GAAA,gBAAAb,EAAAa,GAAA,KAAAV,EAAA,cAA2FS,YAAA,YAAA5D,OAA+BiE,KAAA,SAAevhB,IAAKsiB,YAAAhC,EAAAmK,4BAA2C1J,OAAQpf,MAAA2e,EAAA,kBAAAruB,SAAA,SAAA+uB,GAAuDV,EAAAsH,kBAAA5G,GAA0BC,WAAA,uBAAiCR,EAAA,KAAUS,YAAA,oBAA8BZ,EAAAa,GAAA,KAAAV,EAAA,SAA0BnD,OAAOwH,MAAA,UAAgBrE,EAAA,KAAUS,YAAA,aAAuBZ,EAAAa,GAAA,OAAAb,EAAAa,GAAA,KAAAV,EAAA,QAAAH,EAAAa,GAAA,WAAAb,EAAAa,GAAA,KAAAV,EAAA,KAA6ES,YAAA,oBAA8BZ,EAAAa,GAAA,KAAAV,EAAA,SAA0BnD,OAAOwH,MAAA,UAAgBrE,EAAA,KAAUS,YAAA,aAAuBZ,EAAAa,GAAA,OAAAb,EAAAa,GAAA,KAAAV,EAAA,QAAAH,EAAAa,GAAA,eAAAb,EAAAa,GAAA,KAAAV,EAAA,OAAmFS,YAAA,WAAqBZ,EAAAa,GAAA,KAAAV,EAAA,OAAwBS,YAAA,gBAAAE,aAAyCR,MAAA,SAAgBN,EAAAsL,GAAAtL,EAAA,kBAAAoD,EAAAlZ,GAA4C,OAAAiW,EAAA,OAAiB/gB,IAAA8K,EAAA0W,YAAA,cAAkCT,EAAA,aAAeH,EAAAa,GAAA,KAAAV,EAAA,OAAyBS,YAAA,UAAAlhB,IAA0BwhB,MAAAlB,EAAA8J,WAAqB3J,EAAA,OAAYnD,OAAOuO,MAAA,6BAAApgB,QAAA,SAAsDgV,EAAA,QAAAA,EAAA,UAA0BnD,OAAO0I,GAAA,KAAAnK,EAAA,IAAA+B,EAAA,IAAAgD,MAAA,OAAA4D,OAAA,UAA0D/D,EAAA,YAAiBnD,OAAOlb,OAAA,SAAA0pB,GAAA,gBAAAC,GAAA,IAAAC,GAAA,OAA0D1L,EAAAa,GAAA,KAAAV,EAAA,iBAAkCnD,OAAOlb,OAAA,YAAA0pB,GAAA,SAAA7lB,KAAA,SAAAgmB,OAAA,mDAA6G3L,EAAAa,GAAA,KAAAV,EAAA,kBAAmCnD,OAAOlb,OAAA,UAAA0pB,GAAA,YAAAI,aAAA,OAAwD5L,EAAAa,GAAA,KAAAV,EAAA,WAA4BnD,OAAOwO,GAAA,gBAAAK,IAAA,UAAAC,KAAA,aAAsD,KAAA9L,EAAAa,GAAA,KAAAV,EAAA,QAAAA,EAAA,UAA4CnD,OAAO0I,GAAA,QAAAqG,YAAA,iBAAAC,YAAA,KAAAC,aAAA,KAAAC,QAAA,YAAAC,KAAA,IAAAC,KAAA,IAAAC,OAAA,UAAgJlM,EAAA,QAAaW,aAAawL,KAAA,WAAiBtP,OAAQS,EAAA,oCAAkCuC,EAAAa,GAAA,KAAAV,EAAA,QAAAA,EAAA,UAA0CnD,OAAO0I,GAAA,SAAAqG,YAAA,iBAAAC,YAAA,KAAAC,aAAA,KAAAC,QAAA,YAAAC,KAAA,IAAAC,KAAA,IAAAC,OAAA,UAAiJlM,EAAA,QAAaW,aAAawL,KAAA,WAAiBtP,OAAQS,EAAA,oCAAkCuC,EAAAa,GAAA,KAAAV,EAAA,QAAAA,EAAA,UAA0CnD,OAAO0I,GAAA,oBAAAqG,YAAA,iBAAAC,YAAA,KAAAC,aAAA,KAAAC,QAAA,YAAAC,KAAA,IAAAC,KAAA,IAAAC,OAAA,UAA4JlM,EAAA,QAAaW,aAAawL,KAAA,OAAatP,OAAQS,EAAA,oCAAkCuC,EAAAa,GAAA,KAAAV,EAAA,QAAAA,EAAA,kBAAkDnD,OAAO0I,GAAA,aAAA6G,GAAA,KAAAC,GAAA,KAAAC,GAAA,KAAAC,GAAA,UAA6DvM,EAAA,QAAaW,aAAa6L,aAAA,UAAAC,eAAA,KAA0C5P,OAAQ6P,OAAA,QAAe7M,EAAAa,GAAA,KAAAV,EAAA,QAAyBW,aAAa6L,aAAA,0BAAsC3P,OAAQ6P,OAAA,WAAiB,OAAA7M,EAAAa,GAAA,KAAAb,EAAAsL,GAAAtL,EAAA,kBAAA8M,EAAAvyB,GAAiE,OAAA4lB,EAAA,KAAe/gB,IAAA7E,GAAMylB,EAAAsL,GAAAwB,EAAA,eAAA1J,EAAAliB,GAA0C,OAAAif,EAAA,KAAe/gB,IAAA8B,IAAMif,EAAA,SAAc4M,OAAOC,2BAAA5J,EAAA6J,YAAAC,mBAAA,GAAwElQ,OAAQzB,EAAA,IAAAyE,EAAAuG,WAAAvG,EAAAwG,YAAApD,EAAAsF,KAAApL,EAAA,OAAA/iB,EAAA+lB,MAAAN,EAAAuG,WAAArC,OAAAlE,EAAAuG,WAAA4G,aAAA/J,EAAAI,KAAA4J,GAAA,MAA8I1tB,IAAKwhB,MAAA,SAAAmM,GAAyBA,EAAAC,kBAAyBtN,EAAA4J,SAAAxG,OAAqBpD,EAAAa,GAAA,KAAAV,EAAA,KAAsB4M,MAAA,SAAA3J,EAAAzd,KAAA,4CAAAjG,IAAyEwhB,MAAA,SAAAmM,GAAyBrN,EAAAiD,WAAAG,OAAuBjD,EAAA,QAAanD,OAAOzB,EAAA,GAAAyE,EAAAuG,WAAA,GAAAvG,EAAAuG,WAAAvG,EAAAwG,YAAApD,EAAAsF,KAAApL,EAAA,GAAA0C,EAAAuG,WAAA,IAAAhsB,KAA+FylB,EAAAa,GAAA,qBAAAb,EAAAmB,GAAAiC,EAAA/hB,OAAA,wBAAA2e,EAAAa,GAAA,cAAAuC,EAAAzd,MAAAyd,EAAAvE,UAAAmB,EAAAyH,mBAAAtH,EAAA,UAAgKnD,OAAOuQ,GAAA,IAAAvN,EAAAuG,WAAAvG,EAAAwG,YAAApD,EAAAsF,KAAA8E,GAAA,SAAApK,EAAAzd,KAAA,OAAApL,EAAA,OAAAA,EAAAkzB,EAAA,KAAAC,eAAA,IAAApB,KAAA,SAAsItM,EAAAqL,KAAArL,EAAAa,GAAA,cAAAuC,EAAAzd,KAAAwa,EAAA,QAAuDS,YAAA,wBAAAE,aAAiD6M,YAAA,QAAmB3Q,OAAQzB,EAAA,IAAAyE,EAAAuG,WAAAvG,EAAAwG,YAAApD,EAAAsF,KAAApL,GAAA8F,EAAAzd,KAAA,OAAApL,GAAA+xB,KAAA,OAAAzN,OAAAuE,EAAAvE,OAAAwB,UAAA+C,EAAA/hB,OAAoJ3B,IAAKwhB,MAAAlB,EAAAoK,YAAsBpK,EAAAa,GAAA,mBAAAb,EAAAmB,GAAAnB,EAAAyH,mBAAArE,EAAAvE,SAAA,oBAAAmB,EAAAqL,YAA0GrL,EAAAa,GAAA,KAAAb,EAAAsL,GAAAtL,EAAA,mBAAAuI,GAAqD,OAAApI,EAAA,KAAe/gB,IAAAmpB,EAAA7C,KAAavF,EAAA,YAAiB4M,WAAA1xB,IAAA2kB,EAAAgH,UAAAuB,EAAA7C,IAAA,UAAA5E,aAAiEwL,KAAA,OAAAsB,OAAA,UAAAF,eAAA,OAAsD1Q,OAAQ6Q,OAAAtF,EAAAlnB,MAAAysB,kBAAAzyB,IAAA2kB,EAAAgH,UAAAuB,EAAA7C,IAAA,gDAAoH1F,EAAAa,GAAA,KAAAb,EAAAsL,GAAAtL,EAAA,4BAAAuI,GAA8D,OAAApI,EAAA,KAAe/gB,IAAAmpB,EAAA7C,KAAavF,EAAA,YAAiBS,YAAA,qBAAA5D,OAAwC6Q,OAAAtF,EAAAlnB,MAAAysB,aAAA,sBAAqD,SAAA9N,EAAAa,GAAA,KAAAV,EAAA,cAAyCnD,OAAOgC,MAAAgB,EAAAhB,MAAAH,OAAAmB,EAAA8H,WAAAzH,UAAAL,EAAAK,UAAA1a,KAAAqa,EAAAra,MAAoFjG,IAAK4qB,UAAAtK,EAAAsK,cAA2B,IAEj+KpI,oBCCjB,IAcA6L,EAdAx8B,EAAA,OAcAy8B,CACA3H,EACA8E,GATA,EAVA,SAAA9I,GACA9wB,EAAA,SAaA,KAEA,MAUA08B,EAAA,QAAAF,EAAA,2CCxBA,IAAAz8B,EAAAC,EAAA,QAeAoR,EAAA,SAAA9Q,EAAAq8B,GACAp8B,KAAAG,QAAAJ,EACAC,KAAAoR,aAAAgrB,EAEAp8B,KAAAq8B,iBAAA,EACAr8B,KAAAs8B,8BAAAt8B,KAAAu8B,8BAAAt7B,KAAAjB,MACAA,KAAAG,QAAAyN,GAAA,yBAAA5N,KAAAs8B,gCAQAzrB,EAAArP,UAAAqQ,QAAA,WACA7R,KAAAG,QAAAiO,eAAA,yBAAApO,KAAAs8B,+BACAt8B,KAAAs8B,8BAAA,KACAt8B,KAAAG,QAAA,MAQA0Q,EAAArP,UAAA+6B,8BAAA,WACA,IAAA/yB,EAAAxJ,KAAAG,QAAAkM,qBAEA7C,IAAAhK,EAAA8E,iBAAAsF,eAAA,IAAA5J,KAAAq8B,kBACAr8B,KAAAq8B,iBAAA,GAEA7yB,IAAAhK,EAAA8E,iBAAAmB,OAAA,IAAAzF,KAAAq8B,kBACAr8B,KAAAq8B,iBAAA,EACAr8B,KAAAoR,iBAIAnP,EAAAC,QAAA2O,qCCpDA,IAAA1O,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAZ,UAAA,gBAAAc,GAE5I9C,EAAAC,EAAA,QAEA+8B,EAAAh9B,EAAAkV,uBAYAxS,EAAAkD,OAAA,SAAA5E,EAAAG,EAAAkB,GACA,GAAAA,kBAAA4L,OACA,UAAAN,MAAA,yBAEA,IAAAsvB,GAAAj8B,EAAAG,GAEA,GAAAkB,EACA,QAAA4G,EAAA,EAAmBA,EAAA5G,EAAA6D,OAAiB+C,IACpC,WAAAtG,EAAAN,EAAA4G,IACAg0B,EAAAn3B,KAAA4C,KAAAC,UAAAtG,EAAA4G,KAEAg0B,EAAAn3B,KAAAzD,EAAA4G,IAKA,OAAAg0B,EAAA91B,KAAA61B,GAAAh9B,EAAAmU,mBAcAzR,EAAAuP,MAAA,SAAAlC,GACA,IAAAsE,OAAA,IAAAtE,EAAA,YAAApN,EAAAoN,GAEA,cAAAsE,EACA,OAAArU,EAAAuU,MAAAC,OAAAzE,EAGA,UAAAA,EACA,OAAA/P,EAAAuU,MAAAM,KAGA,cAAAR,EACA,OAAArU,EAAAuU,MAAAG,OAAAhM,KAAAC,UAAAoH,GAGA,cAAAsE,EACA,OAAArU,EAAAuU,MAAAI,OAAA5E,EAAAlH,WAGA,QAAAkH,EACA,OAAA/P,EAAAuU,MAAAO,KAGA,QAAA/E,EACA,OAAA/P,EAAAuU,MAAAQ,MAGA,QAAAhL,IAAAgG,EACA,OAAA/P,EAAAuU,MAAAS,UAGA,UAAArH,MAAA,wBAAAoC,uCC7EAtN,EAAAC,SACAkd,SAAA,SAAAsd,GACA,0BAEAzb,SAAA,SAAAyb,GACA,iCAAAA,GAEApY,OAAA,SAAAoY,GACA,cAAAA,GAEAtY,kBAAA,SAAAsY,GACA,aAAAA,uCCZA,IAAAC,EAAAl9B,EAAA,QACAm9B,EAAAn9B,EAAA,QACAo9B,EAAAp9B,EAAA,QACAka,EAAAla,EAAA,QACAq9B,EAAAr9B,EAAA,QACAs9B,EAAAt9B,EAAA,QACAu9B,EAAAv9B,EAAA,QACAw9B,EAAAx9B,EAAA,QAEAm9B,IAAAM,EAAAN,EAAAO,GAAA19B,EAAA,OAAAA,CAAA,SAAA29B,GAA4E3vB,MAAAC,KAAA0vB,KAAoB,SAEhG1vB,KAAA,SAAA2vB,GACA,IAOA33B,EAAAsK,EAAAstB,EAAAj7B,EAPAk7B,EAAAV,EAAAQ,GACA79B,EAAA,mBAAAQ,UAAAyN,MACA+vB,EAAArvB,UAAAzI,OACA+3B,EAAAD,EAAA,EAAArvB,UAAA,QAAA5E,EACAm0B,OAAAn0B,IAAAk0B,EACArlB,EAAA,EACAulB,EAAAV,EAAAM,GAIA,GAFAG,IAAAD,EAAAd,EAAAc,EAAAD,EAAA,EAAArvB,UAAA,QAAA5E,EAAA,SAEAA,GAAAo0B,GAAAn+B,GAAAiO,OAAAqvB,EAAAa,GAMA,IAAA3tB,EAAA,IAAAxQ,EADAkG,EAAAq3B,EAAAQ,EAAA73B,SACkCA,EAAA0S,EAAgBA,IAClD4kB,EAAAhtB,EAAAoI,EAAAslB,EAAAD,EAAAF,EAAAnlB,MAAAmlB,EAAAnlB,SANA,IAAA/V,EAAAs7B,EAAAhkB,KAAA4jB,GAAAvtB,EAAA,IAAAxQ,IAAuD89B,EAAAj7B,EAAAu7B,QAAAC,KAAgCzlB,IACvF4kB,EAAAhtB,EAAAoI,EAAAslB,EAAA/jB,EAAAtX,EAAAo7B,GAAAH,EAAA/tB,MAAA6I,IAAA,GAAAklB,EAAA/tB,OASA,OADAS,EAAAtK,OAAA0S,EACApI,wCChCA,IAAAxQ,EAAAC,EAAA,QAgBA6L,EAAA,SAAAvL,EAAAD,GACAE,KAAAC,SAAAH,EACAE,KAAAG,QAAAJ,EACAC,KAAA89B,aACA99B,KAAA+9B,SAAA,EACAh+B,EAAA6N,GAAA,yBAAA5N,KAAAg+B,0BAAA/8B,KAAAjB,QApBAP,EAAA,OAuBAsR,CAAAzF,EAAA9J,WAUA8J,EAAA9J,UAAAjB,IAAA,SAAAO,GACA,IAAA6mB,EAAA7mB,WAAAd,KAAAC,SAAA4U,oBAEA,OAAA7U,KAAAG,QAAAkM,uBAAA7M,EAAA8E,iBAAAmB,MAAAkiB,EAAA,GACA,GAGA3nB,KAAA0B,OAAAZ,GACAA,EAAAa,MAAA3B,KAAA+9B,WACAj9B,EAAAM,MAAAN,EAAAM,OAAA5B,EAAA6B,MAAAyL,YACAhM,EAAAm9B,UAAAj3B,WAAAhH,KAAAk+B,WAAAj9B,KAAAjB,KAAAc,GAAA6mB,GACA3nB,KAAA89B,UAAA99B,KAAAm+B,eAAAr9B,MACAA,EAAAa,QAWA2J,EAAA9J,UAAAE,OAAA,SAAAZ,GACA,GAAAA,EAAAa,MACA,QAAAy8B,KAAAp+B,KAAA89B,UACAh9B,EAAAa,QAAA3B,KAAA89B,UAAAM,GAAAz8B,OACA3B,KAAAyS,OACAjS,MAAAR,KAAA89B,UAAAM,GAAA59B,MACAG,OAAAX,KAAA89B,UAAAM,GAAAz9B,OACAkB,MAAA7B,KAAA89B,UAAAM,GAAAx+B,QAMAI,KAAA89B,UAAA99B,KAAAm+B,eAAAr9B,KACAd,KAAAyS,OACAjS,MAAAM,EAAAN,MACAG,OAAAG,EAAAH,OACAkB,MAAAf,EAAAlB,SAaA0L,EAAA9J,UAAAiR,MAAA,SAAApN,GACA,IAAA+4B,OAAA,EAEAA,EADA/4B,EAAA1E,SAAAnB,EAAAoB,QAAAC,KAAAwE,EAAAxD,KAAA6D,OAAA,EACAL,EAAA7E,MAAA6E,EAAAxD,KAAA,IAAAwD,EAAAxD,KAAA,GAAAwD,EAAAxD,KAAA,OAEAwD,EAAA7E,MAAA6E,EAAA1E,OAAA0E,EAAAxD,KAAA,GAGA7B,KAAA89B,UAAAM,IACAj0B,aAAAnK,KAAA89B,UAAAM,GAAAH,kBAGAj+B,KAAA89B,UAAAM,IAWA9yB,EAAA9J,UAAA08B,WAAA,SAAAp9B,GAGA,UAFAd,KAAA89B,UAAA99B,KAAAm+B,eAAAr9B,IAEAA,EAAAjB,gBACAiB,EAAAm9B,iBACAn9B,UACAA,EAAAjB,SAAAiB,OACG,CACH,IAAAkH,EAAA,mCAAAlH,EAAAlB,KAAA,QAAAkB,EAAAlB,KAAA,IACAI,KAAAG,QAAA2E,UAAAhE,EAAAN,MAAAM,EAAAM,MAAA4G,KAUAsD,EAAA9J,UAAA28B,eAAA,SAAAr9B,GACA,OAAAA,EAAAN,MAAAM,EAAAH,QAAAG,EAAAlB,KAAAkB,EAAAlB,KAAA,KASA0L,EAAA9J,UAAAw8B,0BAAA,SAAAK,GACA,GAAAA,IAAA7+B,EAAA8E,iBAAAmB,KACA,QAAA24B,KAAAp+B,KAAA89B,UACA3zB,aAAAnK,KAAA89B,UAAAM,GAAAH,YAKAh8B,EAAAC,QAAAoJ,uIC3HAgzB,GACA9uB,OAAA,0BACA3N,KAFA,WAGA,OACA08B,UAAA,EACA1T,UAEAC,MAAA,MACAxd,IAAA,YACAyd,UAAA,EACAC,OAAA,SAAApI,EAAAqI,GACA,OAAArI,EACA,KAEAsI,OACArM,KAAA,yBAAAoM,EAAAE,IAAAC,UACAC,OAAA,WAGAJ,EAAAE,IAAAC,cAKAN,MAAA,MACAxd,IAAA,cACAyd,UAAA,IAGAD,MAAA,SACAxd,IAAA,UACAyd,UAAA,EACAC,OAAA,SAAApI,EAAAqI,GAmBA,OAAArI,EAAA,OAjBA,SAAA0I,GACA,IAAAC,EAAA,IAAA/jB,KAAA8jB,GACAE,EAAAD,EAAAE,cACAzS,EAAAuS,EAAAG,WAAA,EACA1S,IAAA,OAAAA,IACA,IAAA2S,EAAAJ,EAAAK,UACAD,IAAA,OAAAA,IACA,IAAA/I,EAAA2I,EAAAM,WACAjJ,IAAA,OAAAA,IACA,IAAAkJ,EAAAP,EAAAQ,aACAC,EAAAT,EAAAU,aAGA,OACAT,EAAA,IAAAxS,EAAA,IAAA2S,EAAA,IAAA/I,EAAA,KAHAkJ,IAAA,OAAAA,KAGA,KAFAE,IAAA,OAAAA,KAKAE,CAAAjB,EAAAE,IAAAgB,aAIAC,cACAC,SAAA,EACAC,UAAA,EACAC,SAAA,EACAC,YAAA,EACAwJ,WAAA,GACA9I,OAAA,IAGAqG,QAhEA,YAiEAvzB,KAAAw+B,QAAA9M,KAAArQ,QAAA,YACArhB,KAAAw+B,QAAA9M,KAAA,SAAA1xB,KAAAw+B,QAAA9M,MAEA,IAAA3E,EAAA/sB,KAAAw+B,QAAAx7B,IAAA0Q,MAAA,QACA6U,EAAAvoB,KAAAy+B,aAAA/Q,OAAA,SAAAnF,GACA,OAAAA,EAAAwE,aAEAxE,EAAA7iB,OAAA,IACA1F,KAAAu+B,UAAAhW,EAAA,GAAAuF,QAIAhB,OACA2R,cACAzR,QAAA,SAAAyL,EAAAxpB,GACA,IAAA8d,EAAA/sB,KAAAw+B,QAAAx7B,IAAA0Q,MAAA,QACA6U,EAAAkQ,EAAA/K,OAAA,SAAAnF,GACA,OAAAA,EAAAwE,aAEAxE,EAAA7iB,OAAA,IACA1F,KAAAu+B,UAAAhW,EAAA,GAAAuF,QAGA4Q,MAAA,IAGAvR,SAIAgE,WAAA,SAAAwN,GACA,IAAA37B,EAAA27B,EAAA37B,IACA,WAAA27B,EAAAtT,OACA9V,OAAA0iB,KAAAj1B,EAAA,WAGAA,GADA27B,EAAA37B,IAAAqe,QAAA,WACAsd,EAAA37B,KACA27B,EAAA37B,IAAAqe,QAAA,OACA,aAAAre,EAEA,UAAAA,EAEAuS,OAAA8c,IAAAiB,aAEAzf,KAAA,WACA7Q,OAEA,OAKA47B,WA1BA,SA0BAx2B,GAAA,IAAAL,EAAA/H,KACAA,KAAAg2B,WAAAh2B,KAAAw+B,QAAAx7B,IAAA0Q,MAAA,QACA,IAAAuX,GACApX,KAAA,SACA2Z,KAAAxtB,KAAAwsB,YACAO,OAAA/sB,KAAAg2B,WACAvI,MAAAztB,KAAAusB,UAEAvsB,KAAAktB,OAAA,EACAxiB,OAAAijB,EAAA,EAAAjjB,CAAAugB,GAAA2C,KAAA,SAAAC,GACA9lB,EAAAukB,UAAAuB,EAAAC,MACAD,EAAAE,aAAAroB,OAAA,IACAqC,EAAAqkB,WAAAyB,EAAAE,aACAhmB,EAAAskB,SAAA,MAQAe,kBA/CA,SA+CAZ,GAAA,IAAA3Q,EAAA7b,KACAirB,GACApX,KAAA,SACA2Z,KAAAhB,EACAO,OAAA/sB,KAAAg2B,WACAvI,MAAAztB,KAAAusB,UAEAvsB,KAAAqsB,SAAA,EACA3hB,OAAAijB,EAAA,EAAAjjB,CAAAugB,GAAA2C,KAAA,SAAAC,GACAA,EAAAE,aAAAroB,OAAA,IACAmW,EAAAuQ,WAAAyB,EAAAE,aACAlS,EAAAwQ,SAAA,QC5KAwS,GADiB7T,OAFjB,WAA0B,IAAAkD,EAAAluB,KAAamuB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBS,YAAA,oCAA8CT,EAAA,UAAeS,YAAA,eAAA5D,OAAkCsD,MAAA,MAAAkB,UAAA,aAAsC9hB,IAAKkxB,iBAAA5Q,EAAA0Q,cAAiCvQ,EAAA,SAAcnD,OAAO6T,MAAA7Q,EAAAqQ,aAAuBrQ,EAAAa,GAAA,KAAAV,EAAA,OAAwBnD,OAAOiF,KAAA,SAAeA,KAAA,UAAc9B,EAAA,MAAAH,EAAAa,GAAAb,EAAAmB,GAAAnB,EAAAsQ,QAAAQ,KAAA,gBAAA9Q,EAAAa,GAAA,KAAAV,EAAA,OAAgFS,YAAA,MAAA5D,OAAyBiF,KAAA,WAAiBA,KAAA,YAAgB9B,EAAA,SAAcnD,OAAOL,QAAAqD,EAAArD,QAAAhpB,KAAAqsB,EAAA9B,cAA6C8B,EAAAa,GAAA,KAAAV,EAAA,OAAwBW,aAAaY,OAAA,OAAArZ,SAAA,YAAqC8X,EAAA,OAAYW,aAAaa,MAAA,WAAiBxB,EAAA,QAAanD,OAAO4C,MAAAI,EAAA5B,UAAAwD,QAAA5B,EAAA1B,YAAA2C,KAAA,QAAAY,YAAA7B,EAAA3B,SAAAyD,aAAA,IAAwGpiB,IAAKsiB,YAAAhC,EAAAd,sBAAmC,aAAAc,EAAAa,GAAA,KAAAV,EAAA,OAAsCnD,OAAO+T,IAAA/Q,EAAAsQ,QAAA9M,QAAwBxD,EAAAa,GAAA,KAAAV,EAAA,OAAwBS,YAAA,UAAAlhB,IAA0BwhB,MAAA,SAAAmM,GAAyBrN,EAAAiD,WAAAjD,EAAAsQ,aAA8BnQ,EAAA,MAAAH,EAAAa,GAAAb,EAAAmB,GAAAnB,EAAAsQ,QAAAQ,SAAA9Q,EAAAa,GAAA,KAAAV,EAAA,QAAAH,EAAAa,GAAAb,EAAAmB,GAAAnB,EAAAsQ,QAAAU,iBAAA,IAE9/B9O,oBCCjB,IAuBA+O,EAvBA1/B,EAAA,OAcA6wB,CACAgO,EACAO,GATA,EAVA,SAAAtO,GACA9wB,EAAA,SAaA,kBAEA,MAUA,QCXA2/B,GACA5vB,OAAA,2BAEAymB,YACAqI,SAAAa,GAEA5L,QANA,cCZA8L,GADiBrU,OAFjB,WAA0B,IAAAkD,EAAAluB,KAAamuB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBS,YAAA,iBAAA5D,OAAoCoU,OAAA,MAAajR,EAAA,SAAAH,EAAAa,GAAAb,EAAAmB,GAAAnB,EAAAqR,SAAAP,SAAA9Q,EAAAa,GAAA,KAAAb,EAAAsL,GAAAtL,EAAAqR,SAAA,kBAAAjO,EAAAliB,GAA8G,OAAAif,EAAA,OAAiB/gB,IAAA8B,EAAA8b,OAAasU,KAAA,OAAYnR,EAAA,aAAkBnD,OAAOsT,QAAAlN,EAAAmN,aAAAvQ,EAAAuQ,iBAAgD,MAAM,IAEjXrO,oBCCjB,IAuBAqP,EAvBAhgC,EAAA,OAcAigC,CACAN,EACAC,GATA,EAVA,SAAA9O,GACA9wB,EAAA,SAaA,kBAEA,MAUA,oBCqCAkgC,GACA1J,YACAmJ,SAAAK,EACAnB,SAAAa,EACAS,qBAAA,SAEA/9B,KANA,WAOA,OACA2yB,UAAA,EACAqL,SAAA,EACAC,YACAC,cACAC,MAAA,EACAhB,KAAA,OACAv0B,aAEAw1B,IAAA,EACAxM,OAAA,GACAyM,oBACAzB,gBACApJ,GAAAt1B,EAAA,kDACAu1B,QAAA,KACA6K,WAAAngC,KAAA24B,aAAAyH,gBAAA3yB,MAAA4B,QAAArP,KAAA24B,aAAAyH,iBACApgC,KAAA24B,aAAAyH,cAAA1S,OAAA,SAAA2S,GACA,UAAAA,EAAAzM,KACAluB,SAIA0uB,QA7BA,WA6BA,IAAArsB,EAAA/H,KACAA,KAAAk4B,mBAEAxtB,OAAAijB,EAAA,EAAAjjB,GAAAkjB,KAAA,SAAAC,GACAA,EAAAE,aAAAroB,OAAA,IACAqC,EAAAg4B,aAAAt1B,SAAAojB,EAAAE,gBAKArjB,OAAAijB,EAAA,EAAAjjB,GAAAkjB,KAAA,SAAAC,GACA9lB,EAAA02B,aAAA5Q,EAAAE,aAEArjB,OAAAijB,EAAA,EAAAjjB,GAAAkjB,KAAA,SAAAC,GAEA9lB,EAAAu4B,OAAAzS,GAEA9lB,EAAAg4B,aAAAt1B,SAAA/E,OAAA,EACAqC,EAAA+3B,UAAA/3B,EAAAg4B,cAAAtgB,OAAAkU,IAAA9F,IAEA9lB,EAAA+3B,SAAAjS,EAEA9lB,EAAAysB,UAAA,MAIA9pB,OAAAijB,EAAA,EAAAjjB,GAAAkjB,KAAA,SAAAC,GACA9lB,EAAAm4B,iBAAArS,EAAAE,gBAIAZ,SACAoT,WADA,SACAn/B,GACA,IAAAqyB,EAAAryB,EAAAo/B,cAAAjI,aAAA,UAEA,SAAA9E,EACAzzB,KAAA6/B,SAAA,GAEA7/B,KAAA6/B,SAAA,EACA7/B,KAAAyzB,OAAA9V,OAAA8V,KAIAgN,YAZA,WAaAlrB,OAAA8c,IAAAqO,SAAAjiB,KAAA,oBAIAyZ,iBAAA,eAAArc,EAAA7b,KACA04B,EAAA14B,KAAA24B,aACA,GAAAD,EAAAG,UAAAH,EAAAiI,GAAA,CACA,IAAA/H,GAAAF,EAAAG,SAAAH,EAAAI,QAAAnyB,KAAA,KACAwxB,EAAAztB,OAAA5H,EAAA,EAAA4H,GAEA1K,KAAAq1B,GAAAlpB,OAEAgsB,QACAS,YAEA,SAAA/2B,GACAoL,QAAAC,IAAA,sBAIAlN,KAAAq1B,GAAAj0B,MAAAiQ,UAAA,cAAA8mB,EAAA,SAAAnwB,GACA6T,EAAA4iB,aAAAz2B,EAAA+lB,iBAMAuS,OAAA,SAAAzS,IACA,SAAA+S,EAAA/S,GAIA,IAHA,IAAA/iB,EAAA+iB,EAAAnoB,OACA4rB,OAAA,EAEAxmB,KAAA,CAEA,IADAwmB,EAAAzD,EAAA/iB,IACA9H,KAAA,WAAAsuB,EAAAjG,OAAA,CACA,IAAAroB,EAAAsuB,EAAAtuB,IAGA69B,EAAA,WADAtrB,OAAA8c,IAAAyO,IAAA99B,GAEAsuB,EAAAtuB,IAAA69B,EAEAvP,EAAA7mB,UAAAm2B,EAAAtP,EAAA7mB,WAIAm2B,CAAA/S,MClLAkT,GADiB/V,OAFjB,WAA0B,IAAAkD,EAAAluB,KAAamuB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBS,YAAA,SAAmBZ,EAAA,SAAAG,EAAA,QAA4BnD,OAAOiE,KAAA,QAAAmK,IAAA,MAAyBpL,EAAAqL,KAAArL,EAAAa,GAAA,KAAAV,EAAA,OAAiCS,YAAA,gBAA0BT,EAAA,OAAYS,YAAA,oBAA8BT,EAAA,OAAAA,EAAA,OAAsBnD,OAAOsU,KAAA,QAAanR,EAAA,eAAoBS,YAAA,OAAiBT,EAAA,UAAenD,OAAOiE,KAAA,QAAAtb,KAAA,QAAA4f,OAAA,QAA8C7lB,IAAKwhB,MAAAlB,EAAAqS,cAAwBlS,EAAA,KAAUS,YAAA,aAAuBZ,EAAAa,GAAA,OAAAb,EAAAa,GAAA,oCAAAb,EAAAa,GAAA,KAAAb,EAAAsL,GAAAtL,EAAA,0BAAA8S,EAAAv4B,GAAuH,OAAA4lB,EAAA,UAAoB/gB,IAAA7E,EAAAyiB,OAAaiE,KAAA,QAAAtb,KAAA,QAAA4f,OAAAuN,EAAApN,IAAgDhmB,IAAKwhB,MAAAlB,EAAAqS,cAAwBlS,EAAA,KAAUS,YAAA,aAAuBZ,EAAAa,GAAA,OAAAb,EAAAa,GAAA,iBAAAb,EAAAmB,GAAA2R,EAAAphC,MAAA,qBAA6E,iBAAAsuB,EAAAa,GAAA,KAAAb,EAAA,QAAAG,EAAA,MAAAH,EAAAsL,GAAAtL,EAAA,kBAAA4R,EAAAr3B,GAAkG,OAAA4lB,EAAA,WAAqB/gB,IAAA7E,EAAAqmB,YAAA,oBAAoCT,EAAA,OAAYS,YAAA,eAAyBT,EAAA,OAAAA,EAAA,MAAqBS,YAAA,qBAA+BZ,EAAAa,GAAAb,EAAAmB,GAAAyQ,EAAAd,WAAA9Q,EAAAa,GAAA,KAAAV,EAAA,OAA0DnD,OAAOoU,OAAA,KAAapR,EAAAsL,GAAAsG,EAAA,kBAAAxO,EAAAliB,GAA6C,OAAAkiB,EAAA,KAAAjD,EAAA,OAA6B/gB,IAAA8B,EAAA8b,OAAasU,KAAA,OAAYlO,EAAA,KAAAjD,EAAA,aAA8BnD,OAAOsT,QAAAlN,EAAAmN,aAAAvQ,EAAAuQ,gBAAgDvQ,EAAAqL,MAAA,GAAAlL,EAAA,aAA+BnD,OAAOqU,SAAAjO,EAAAlZ,MAAAhJ,EAAAqvB,aAAAvQ,EAAAuQ,oBAA6D,UAAWvQ,EAAAqL,KAAArL,EAAAa,GAAA,KAAAb,EAAAsL,GAAAtL,EAAA,0BAAAqG,EAAAnc,GAAiF,OAAA8V,EAAA2R,SAAAtL,EAAAX,KAAA1F,EAAAuF,OAA6HvF,EAAAqL,KAA7HlL,EAAA,OAAgE/gB,IAAA8K,IAAUiW,EAAA,eAAoBnD,OAAOuI,OAAAc,EAAAX,OAAwB,MAAe,IAEtnDxD,oBCCjB,IAcA6Q,EAdAxhC,EAAA,OAcAyhC,CACAvB,EACAoB,GATA,EAVA,SAAAxQ,GACA9wB,EAAA,SAaA,kBAEA,MAUA08B,EAAA,QAAA8E,EAAA,2CCHA,IAAAE,EAAA,SAAAzd,GACA,cAAAA,GACA,aACA,OAAAA,EAEA,cACA,OAAAA,EAAA,eAEA,aACA,OAAA0d,SAAA1d,KAAA,GAEA,QACA,WAIAzhB,EAAAC,QAAA,SAAAI,EAAA6mB,EAAAC,EAAAxpB,GAOA,OANAupB,KAAA,IACAC,KAAA,IACA,OAAA9mB,IACAA,OAAAiH,GAGA,iBAAAjH,EACAyU,EAAAsqB,EAAA/+B,GAAA,SAAA0V,GACA,IAAAspB,EAAAve,mBAAAoe,EAAAnpB,IAAAoR,EACA,OAAA/Z,EAAA/M,EAAA0V,IACAjB,EAAAzU,EAAA0V,GAAA,SAAA0L,GACA,OAAA4d,EAAAve,mBAAAoe,EAAAzd,MACS/c,KAAAwiB,GAETmY,EAAAve,mBAAAoe,EAAA7+B,EAAA0V,OAEKrR,KAAAwiB,GAILvpB,EACAmjB,mBAAAoe,EAAAvhC,IAAAwpB,EACArG,mBAAAoe,EAAA7+B,IAFA,IAKA,IAAA+M,EAAA5B,MAAA4B,SAAA,SAAAsa,GACA,yBAAAjf,OAAAlJ,UAAA6G,SAAAsR,KAAAgQ,IAGA,SAAA5S,EAAA4S,EAAApB,GACA,GAAAoB,EAAA5S,IAAA,OAAA4S,EAAA5S,IAAAwR,GAEA,IADA,IAAAsF,KACAplB,EAAA,EAAiBA,EAAAkhB,EAAAjkB,OAAe+C,IAChColB,EAAAvoB,KAAAijB,EAAAoB,EAAAlhB,OAEA,OAAAolB,EAGA,IAAAwT,EAAA32B,OAAAmE,MAAA,SAAAvM,GACA,IAAAurB,KACA,QAAAvgB,KAAAhL,EACAoI,OAAAlJ,UAAAwnB,eAAArP,KAAArX,EAAAgL,IAAAugB,EAAAvoB,KAAAgI,GAEA,OAAAugB,sCCjFA,IAAA1rB,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAZ,UAAA,gBAAAc,GAE5Ii/B,EAAA,WAAgC,SAAAC,EAAAnW,EAAA7b,GAA2C,QAAA/G,EAAA,EAAgBA,EAAA+G,EAAA9J,OAAkB+C,IAAA,CAAO,IAAAg5B,EAAAjyB,EAAA/G,GAA2Bg5B,EAAA72B,WAAA62B,EAAA72B,aAAA,EAAwD62B,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuDj3B,OAAAC,eAAA0gB,EAAAoW,EAAAn0B,IAAAm0B,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAL,EAAAI,EAAApgC,UAAAqgC,GAAqEC,GAAAN,EAAAI,EAAAE,GAA6DF,GAAxhB,GAIA,IAAA7wB,EAAAtR,EAAA,QACAD,EAAAC,EAAA,QACAoR,EAAApR,EAAA,QAEA,SAAAsiC,EAAAjJ,EAAAj5B,EAAAmiC,GAQA,GAPA,mBAAAlJ,QAAAvvB,IAAA1J,GACAA,EAAAi5B,EACAA,EAAAkJ,GAEAlJ,WAGAvvB,IAAA1J,GAAA,mBAAAA,EACA,UAAAsN,MAAA,6BAGA,OAAU2rB,SAAAj5B,YAgBVoC,EAAAC,QAAA,WACA,SAAAkJ,EAAAtL,EAAAkR,EAAAjR,IAnCA,SAAAkiC,EAAAL,GAAiD,KAAAK,aAAAL,GAA0C,UAAAzgB,UAAA,qCAoC3F+gB,CAAAliC,KAAAoL,GAEApL,KAAAC,SAAAH,EACAE,KAAAyL,YAAAuF,EACAhR,KAAAG,QAAAJ,EACAC,KAAAmiC,cAAA,IAAApxB,EACA/Q,KAAAoiC,kBAAA,IAAArxB,EACA/Q,KAAAI,oBAAAL,EAAAM,0BACAL,KAAAmR,qBAAA,IAAAN,EAAA7Q,KAAAG,QAAAH,KAAAoR,aAAAnQ,KAAAjB,OACAA,KAAA+9B,SAAA,EAEA/9B,KAAAqiC,OAAAriC,KAAAqiC,OAAAphC,KAAAjB,MACAA,KAAAsiC,cAAA,KACAtiC,KAAAuiC,sBACAviC,KAAAwiC,wBAwLA,OA5KAjB,EAAAn2B,IACAkC,IAAA,SACAiC,MAAA,SAAAkzB,EAAA5iC,GACA,sBAAA4iC,EACAziC,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAuL,SAAAxM,EAAAoB,QAAAspB,OAAA1qB,EAAAoB,QAAAspB,QACAlqB,KAAAmiC,cAAAn0B,KAAAxO,EAAAoB,QAAAspB,MAAAuY,OACO,CACP,IAAAC,EAAA1iC,KAAA+9B,WACA/9B,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAuL,SAAAxM,EAAAoB,QAAAspB,OAAAwY,EAAAD,IACAziC,KAAAmiC,cAAAn0B,KAAA00B,EAAA7iC,OAeAyN,IAAA,YACAiC,MAAA,SAAAupB,EAAAj5B,GACA,IAAA4O,EAAAszB,EAAAjJ,EAAAj5B,EAAAL,EAAAoB,QAAA0Q,WACAtR,KAAAoiC,kBAAAp1B,aAAAyB,EAAAqqB,UACArqB,EAAAqqB,SAAAt5B,EAAAoB,QAAA0Q,WACAtR,KAAA2iC,wBAAAnjC,EAAAoB,QAAA0Q,WACAtR,KAAAoiC,kBAAAx0B,GAAApO,EAAAoB,QAAA0Q,UAAA7C,EAAA5O,mBAEAG,KAAAwiC,qBAAA/zB,EAAAqqB,QACA94B,KAAAuiC,mBAAA9zB,EAAAqqB,SAAA,EACA94B,KAAAsiC,gBACAtiC,KAAAsiC,cAAAt7B,WAAAhH,KAAAqiC,OAAA,IAEAriC,KAAAoiC,kBAAAx0B,GAAAa,EAAAqqB,OAAArqB,EAAA5O,eAeAyN,IAAA,cACAiC,MAAA,SAAAupB,EAAAj5B,GACA,IAAA4O,EAAAszB,EAAAjJ,EAAAj5B,EAAAL,EAAAoB,QAAA4Q,aAEA/C,EAAAqqB,SAAAt5B,EAAAoB,QAAA4Q,YACAxR,KAAAoiC,kBAAAn0B,IAAAzO,EAAAoB,QAAA0Q,UAAA7C,EAAA5O,UAEAG,KAAAoiC,kBAAAn0B,IAAAQ,EAAAqqB,OAAArqB,EAAA5O,UAGAG,KAAAoiC,kBAAAp1B,aAAAyB,EAAAqqB,UACArqB,EAAAqqB,SAAAt5B,EAAAoB,QAAA4Q,YACAxR,KAAA2iC,wBAAAnjC,EAAAoB,QAAA4Q,qBAEAxR,KAAAuiC,mBAAA9zB,EAAAqqB,QACA94B,KAAAwiC,qBAAA/zB,EAAAqqB,SAAA,EACA94B,KAAAsiC,gBACAtiC,KAAAsiC,cAAAt7B,WAAAhH,KAAAqiC,OAAA,SAgBA/0B,IAAA,WACAiC,MAAA,SAAAlK,GACA,GAAAA,EAAA1E,SAAAnB,EAAAoB,QAAAmE,OAAAM,EAAAxD,KAAA,KAAArC,EAAA6B,MAAAiR,eACAtS,KAAAI,oBAAAsB,OAAAlC,EAAAiB,MAAAuL,SAAA3G,EAAAxD,KAAA,IACAwD,EAAAqH,gBAAA,EACA1M,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAuL,SAAAxM,EAAA6B,MAAAiR,eAAAjN,EAAAxD,KAAA,SACO,GAAAwD,EAAA1E,SAAAnB,EAAAoB,QAAAC,IACPb,KAAAI,oBAAAqS,MAAApN,QACO,GAAAA,EAAA1E,SAAAnB,EAAAoB,QAAAupB,cACPnqB,KAAAoiC,kBAAA34B,KAAAjK,EAAAoB,QAAA0Q,UAAAjM,EAAAxD,KAAA,OACA7B,KAAAoiC,kBAAA34B,KAAApE,EAAAxD,KAAA,MAAAwD,EAAAxD,KAAA,SACO,GAAAwD,EAAA1E,SAAAnB,EAAAoB,QAAAwpB,eACPpqB,KAAAoiC,kBAAA34B,KAAAjK,EAAAoB,QAAA0Q,UAAAjM,EAAAxD,KAAA,OACA7B,KAAAoiC,kBAAA34B,KAAApE,EAAAxD,KAAA,MAAAwD,EAAAxD,KAAA,SACO,GAAAwD,EAAA1E,SAAAnB,EAAAoB,QAAAspB,MAAA,CACP,IACA,IAAAroB,EAAAqG,KAAAM,MAAAnD,EAAAxD,KAAA,IACA,wBAAAA,EAAA,YAAAM,EAAAN,IAEA,YADA7B,KAAAmiC,cAAA14B,KAAApE,EAAAxD,KAAA,GAAAA,GAGS,MAAAuG,IAGTpI,KAAAmiC,cAAA14B,KAAAjK,EAAAoB,QAAAspB,MAAA7kB,EAAAxD,WAEA7B,KAAAG,QAAA2E,UAAAtF,EAAAiB,MAAAuL,SAAAxM,EAAA6B,MAAAmR,oBAAAnN,EAAA1E,WAYA2M,IAAA,eACAiC,MAAA,WACA,IAAAf,EAAA9D,OAAAmE,KAAA7O,KAAAoiC,kBAAAt0B,gBACAU,EAAA6S,QAAA7hB,EAAAoB,QAAA0Q,YAAA,IACA9C,EAAA9H,OAAA8H,EAAA6S,QAAA7hB,EAAAoB,QAAA0Q,WAAA,GACAtR,KAAA2iC,wBAAAnjC,EAAAoB,QAAA0Q,YAEA9C,EAAA9I,OAAA,GACA1F,KAAA4iC,sBAAApjC,EAAAoB,QAAA0Q,UAAA9C,MAIAlB,IAAA,SACAiC,MAAA,WACA,IAAAszB,EAAAn4B,OAAAmE,KAAA7O,KAAAuiC,oBACAM,EAAAn9B,OAAA,IACA1F,KAAA4iC,sBAAApjC,EAAAoB,QAAA0Q,UAAAuxB,GACA7iC,KAAAuiC,uBAEA,IAAAO,EAAAp4B,OAAAmE,KAAA7O,KAAAwiC,sBACAM,EAAAp9B,OAAA,IACA1F,KAAA4iC,sBAAApjC,EAAAoB,QAAA4Q,YAAAsxB,GACA9iC,KAAAwiC,yBAEAxiC,KAAAsiC,cAAA,QAGAh1B,IAAA,wBACAiC,MAAA,SAAA5O,EAAAoiC,GACA,IAAAnwB,EAAA5S,KAAA+9B,WACA/9B,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAuL,SACArL,SACAf,KAAAgT,IAEA5S,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAuL,SAAArL,GAAAiS,EAAAmwB,OAGAz1B,IAAA,0BACAiC,MAAA,SAAA5O,GACAX,KAAAI,oBAAAG,KACAC,MAAAhB,EAAAiB,MAAAuL,SACArL,SACAf,KAAAe,IAEAX,KAAAyL,YAAAvG,QAAA1F,EAAAiB,MAAAuL,SAAArL,WAIAyK,EAxMA,sCCrCA,IAAA2F,EAAAtR,EAAA,QACAoa,EAAApa,EAAA,QACAD,EAAAC,EAAA,QAgBAmlB,EAAA,SAAAsC,EAAAtnB,EAAAE,GACA,oBAAAF,GAAA,IAAAA,EAAA8F,OACA,UAAAyH,MAAA,yBAGAnN,KAAAmnB,eAAAD,EACAlnB,KAAAonB,QAAApnB,KAAAmnB,eAAA/B,UAAAxlB,EAAAE,GACAE,KAAAonB,QAAA/K,aAAArc,KAAAqc,aAAApb,KAAAjB,MAEAA,KAAAonB,QAAAxZ,GAAA,SAAA5N,KAAAyJ,KAAAxI,KAAAjB,KAAA,WACAA,KAAAonB,QAAAxZ,GAAA,UAAA5N,KAAAgjC,WAAA/hC,KAAAjB,OACAA,KAAAonB,QAAAxZ,GAAA,QAAA5N,KAAAijC,SAAAhiC,KAAAjB,OAEAA,KAAAka,YAAAla,KAAAonB,QAAAlN,YACAla,KAAAia,QAAAja,KAAAonB,QAAAnN,QACAja,KAAAJ,OACAI,KAAAkjC,kBACAljC,KAAAmjC,iBAAA,KACAnjC,KAAAojC,gBAAA,KACApjC,KAAAqjC,mBAAA,KACArjC,KAAAsjC,iBAAA,KAEAtjC,KAAA+b,OAAA/b,KAAAonB,QAAArL,OAAA9a,KAAAjB,KAAAonB,SACApnB,KAAA4b,QAAA5b,KAAAonB,QAAAxL,QAAA3a,KAAAjB,KAAAonB,SACApnB,KAAA0b,UAAA1b,KAAAonB,QAAA1L,UAAAza,KAAAjB,OAGA+Q,EAAA6T,EAAApjB,WASAojB,EAAApjB,UAAA+hC,WAAA,WACA,IAAArb,EAAAloB,KAAAonB,QAAAvc,MAEA,OAAAqd,aAAAza,MAIAya,MASAtD,EAAApjB,UAAAgiC,QAAA,WACA,WAAAxjC,KAAAujC,aAAA79B,QASAkf,EAAApjB,UAAAiiC,WAAA,SAAAvb,GACA,IAAArb,EAAA,2CACApE,OAAA,EAEA,KAAAyf,aAAAza,OACA,UAAAN,MAAAN,GAGA,IAAApE,EAAA,EAAaA,EAAAyf,EAAAxiB,OAAoB+C,IACjC,oBAAAyf,EAAAzf,GACA,UAAA0E,MAAAN,IAIA,IAAA7M,KAAAonB,QAAAnN,QACAja,KAAAkjC,eAAA59B,KAAAtF,KAAAyjC,WAAAxiC,KAAAjB,KAAAkoB,KAEAloB,KAAA0jC,gBACA1jC,KAAAonB,QAAArX,IAAAmY,GACAloB,KAAA2jC,iBAaA/e,EAAApjB,UAAAoiC,YAAA,SAAAzb,EAAA/P,GACA,QAAApY,KAAAonB,QAAAnN,QAAA,CAKA,IAAA4pB,EAAA7jC,KAAAonB,QAAAvc,MACAi5B,EAAA9jC,KAAA+jC,UAAA3rB,GACA8P,KACAzf,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAAo7B,EAAAn+B,OAA2B+C,KACxCo7B,EAAAp7B,KAAA0f,GAAA2b,GAAA1rB,IAAA3P,IACAyf,EAAA5iB,KAAAu+B,EAAAp7B,IAGAzI,KAAA0jC,gBACA1jC,KAAAonB,QAAArX,IAAAmY,GACAloB,KAAA2jC,oBAhBA3jC,KAAAkjC,eAAA59B,KAAAtF,KAAA4jC,YAAA3iC,KAAAjB,KAAAmoB,EAAA/P,KA4BAwM,EAAApjB,UAAAwiC,SAAA,SAAA7b,EAAA/P,GACA,oBAAA+P,EACA,UAAAhb,MAAA,8BAGA,QAAAnN,KAAAonB,QAAAnN,QAAA,CAKA,IAAA6pB,EAAA9jC,KAAA+jC,UAAA3rB,GACA8P,EAAAloB,KAAAujC,aACAO,EACA5b,EAAAxhB,OAAA0R,EAAA,EAAA+P,GAEAD,EAAA5iB,KAAA6iB,GAEAnoB,KAAA0jC,gBACA1jC,KAAAonB,QAAArX,IAAAmY,GACAloB,KAAA2jC,oBAbA3jC,KAAAkjC,eAAA59B,KAAAtF,KAAAgkC,SAAA/iC,KAAAjB,KAAAmoB,EAAA/P,KAuBAwM,EAAApjB,UAAA6P,UAAA,WACA,IAAAkW,EAAA1N,EAAArY,UAAAia,oBAAAtN,WAEA,GAAAoZ,EAAApjB,KACA,UAAAgJ,MAAA,4CAIA,IAAA82B,EAAA,SAAApkC,GACAA,EAAAG,KAAAujC,eACGtiC,KAAAjB,KAAAunB,EAAA1nB,UAWH0nB,EAAA1nB,SAAAqkC,gBAAAD,EACA1c,EAAA1nB,SAAAokC,EAEAjkC,KAAAonB,QAAA/V,UAAAkW,IAUA3C,EAAApjB,UAAA+P,YAAA,WACA,IAAAgW,EAAA1N,EAAArY,UAAAia,oBAAAtN,WAEA,GAAAoZ,EAAApjB,KACA,UAAAgJ,MAAA,8CAGAoa,EAAA1nB,SAAA0nB,EAAA1nB,SAAAqkC,gBACAlkC,KAAAonB,QAAA7V,YAAAgW,IAUA3C,EAAApjB,UAAAyhC,SAAA,WACAjjC,KAAAia,SAAA,EAEA,QAAAxR,EAAA,EAAiBA,EAAAzI,KAAAkjC,eAAAx9B,OAAgC+C,IACjDzI,KAAAkjC,eAAAz6B,KAGAzI,KAAAkjC,kBACAljC,KAAAyJ,KAAA,UAUAmb,EAAApjB,UAAAwhC,WAAA,WACAhjC,KAAAka,aAAA,EACAla,KAAAyJ,KAAA,YAaAmb,EAAApjB,UAAA6a,aAAA,SAAAhX,GACA,GAAAA,EAAA1E,SAAAnB,EAAAoB,QAAA4b,MACA,UAAArP,MAAA,oCAGA,MAAA9H,EAAAxD,KAAA,GAAAiS,OAAA,KACAzO,EAAAxD,KAAA,SAGA7B,KAAA0jC,gBACA7pB,EAAArY,UAAA6a,aAAA1C,KAAA3Z,KAAAonB,QAAA/hB,GACArF,KAAA2jC,gBAWA/e,EAAApjB,UAAAuiC,UAAA,SAAA3rB,GACA,IAAA0rB,GAAA,EACA5b,EAAAloB,KAAAujC,aACA,QAAAh6B,IAAA6O,EAAA,CACA,GAAAjI,MAAAiI,GACA,UAAAjL,MAAA,0BAEA,GAAAiL,IAAA8P,EAAAxiB,SAAA0S,GAAA8P,EAAAxiB,QAAA0S,EAAA,GACA,UAAAjL,MAAA,wCAEA22B,GAAA,EAEA,OAAAA,GAaAlf,EAAApjB,UAAAkiC,cAAA,WACA1jC,KAAAojC,gBAAApjC,KAAA2O,UA5SA,eA4SAjJ,OAAA,EACA1F,KAAAqjC,mBAAArjC,KAAA2O,UA5SA,iBA4SAjJ,OAAA,EACA1F,KAAAsjC,iBAAAtjC,KAAA2O,UA5SA,eA4SAjJ,OAAA,EAEA1F,KAAAojC,iBAAApjC,KAAAqjC,oBAAArjC,KAAAsjC,iBACAtjC,KAAAmjC,iBAAAnjC,KAAAmkC,gBAEAnkC,KAAAmjC,iBAAA,MAWAve,EAAApjB,UAAAmiC,aAAA,WACA,UAAA3jC,KAAAmjC,iBAAA,CAIA,IAAAiB,EAAApkC,KAAAmkC,gBACAE,EAAArkC,KAAAmjC,iBACAhb,OAAA,EACA1f,OAAA,EAEA,GAAAzI,KAAAqjC,mBACA,IAAAlb,KAAAkc,EACA,IAAA57B,EAAA,EAAiBA,EAAA47B,EAAAlc,GAAAziB,OAA0B+C,SAC3Cc,IAAA66B,EAAAjc,SAAA5e,IAAA66B,EAAAjc,GAAA1f,IACAzI,KAAAyJ,KA3UA,gBA2UA0e,EAAAkc,EAAAlc,GAAA1f,IAMA,GAAAzI,KAAAojC,iBAAApjC,KAAAsjC,iBACA,IAAAnb,KAAAic,EACA,QAAA76B,IAAA86B,EAAAlc,GACA,IAAA1f,EAAA,EAAmBA,EAAA27B,EAAAjc,GAAAziB,OAAyB+C,IAC5CzI,KAAAyJ,KAtVA,cAsVA0e,EAAAic,EAAAjc,GAAA1f,SAGA,IAAAA,EAAA,EAAmBA,EAAA27B,EAAAjc,GAAAziB,OAAyB+C,IAC5C47B,EAAAlc,GAAA1f,KAAA27B,EAAAjc,GAAA1f,UACAc,IAAA86B,EAAAlc,GAAA1f,GACAzI,KAAAyJ,KA5VA,cA4VA0e,EAAAic,EAAAjc,GAAA1f,IAEAzI,KAAAyJ,KA5VA,cA4VA0e,EAAAic,EAAAjc,GAAA1f,OAsBAmc,EAAApjB,UAAA2iC,cAAA,WACA,IAAAG,KACA77B,OAAA,EACAyf,EAAAloB,KAAAonB,QAAAvc,MAEA,IAAApC,EAAA,EAAaA,EAAAyf,EAAAxiB,OAAoB+C,SACjCc,IAAA+6B,EAAApc,EAAAzf,IACA67B,EAAApc,EAAAzf,QAEA67B,EAAApc,EAAAzf,IAAAnD,KAAAmD,GAIA,OAAA67B,GAGAriC,EAAAC,QAAA0iB,kDCxYA,IAAAziB,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAZ,UAAA,gBAAAc,GAE5I9C,EAAAC,EAAA,QAQA8kC,EAAA,qCAiBAriC,EAAAsiC,YAAA,IAAAC,GAAA,qBAAAA,EAAAp8B,WAWAnG,EAAAqD,SAAA,SAAAsB,GACA3E,EAAAsiC,OACAC,EAAAl/B,SAAAsB,GAEAG,WAAAH,EAAA,IAYA3E,EAAAuf,KAAA,SAAAijB,GACA,OAAAA,EAAAjjB,KACAijB,EAAAjjB,OAEAijB,EAAAj4B,QAAA83B,EAAA,KAwBAriC,EAAAib,WAAA,SAAAwnB,EAAAC,GACA,OAAAD,IAAAC,GAlEA,iBAoEG,IAAAD,EAAA,YAAAxiC,EAAAwiC,KApEH,iBAoEG,IAAAC,EAAA,YAAAziC,EAAAyiC,KAIH18B,KAAAC,UAAAw8B,KAAAz8B,KAAAC,UAAAy8B,IAqBA1iC,EAAAiN,SAAA,SAAA7M,GACA,MA9FA,iBA8FA,IAAAA,EAAA,YAAAH,EAAAG,IACA4F,KAAAM,MAAAN,KAAAC,UAAA7F,IAEAA,GAaAJ,EAAA+N,YAAA,SAAA3N,GACA,GAAAmL,MAAA4B,QAAA/M,GACA,OAAAA,EAAAsK,MAAA,GACG,GAjHH,iBAiHG,IAAAtK,EAAA,YAAAH,EAAAG,IAAA,CAGH,IAFA,IAAAuiC,EAAAn6B,OAAAqD,OAAA,MACAyB,EAAA9E,OAAAmE,KAAAvM,GACAmG,EAAA,EAAmBA,EAAA+G,EAAA9J,OAAkB+C,IACrCo8B,EAAAr1B,EAAA/G,IAAAnG,EAAAkN,EAAA/G,IAEA,OAAAo8B,EAEA,OAAAviC,GAaAJ,EAAA8E,WAAA,SAAAnH,EAAA8nB,GACA,cAAAA,EACA3gB,WAAAnH,EAAA8nB,IAEA,GAaAzlB,EAAA2F,YAAA,SAAAhI,EAAAilC,GACA,cAAAA,EACAj9B,YAAAhI,EAAAilC,IAEA,GAaA5iC,EAAAgZ,qBAAAhZ,EAAAsiC,QAAAjvB,OAAA2F,qBAAA3F,OAAA2F,oBAAAja,KAAAsU,SAAA,SAAAhH,GACA,IAAAw2B,EAAAv9B,KAAAC,MACA,OAAAT,WAAA,WACAuH,GACAy2B,YAAA,EACAC,cAAA,WACA,OAAAn7B,KAAAo7B,IAAA,MAAA19B,KAAAC,MAAAs9B,QAGG,IAGH7iC,EAAAijC,oBAAAjjC,EAAAsiC,QAAAjvB,OAAA4vB,oBAAA5vB,OAAA4vB,mBAAAlkC,KAAAsU,SAAA,SAAAqe,GACAzpB,aAAAypB,IAOA,IAAAwR,EAAA,mBAMAC,EAAA,iBAEAC,EAAA7lC,EAAA,QAQAyC,EAAAgC,SAAA,SAAAqhC,EAAAC,GACA,IAAAxiC,EAAAuiC,EACA,GAAAF,EAAA7rB,KAAAxW,GACA,UAAAmK,MAAA,iCAEAi4B,EAAA5rB,KAAAxW,GAEG,IAAAA,EAAAqe,QAAA,QACHre,EAAA,MAAAA,GAFAA,EAAA,QAAAA,EAIA,IAAAyiC,EAAAH,EAAA98B,MAAAxF,GACA,IAAAyiC,EAAAnnB,KACA,UAAAnR,MAAA,6BAIA,OAFAs4B,EAAAtnB,SAAAsnB,EAAAtnB,SAAAsnB,EAAAtnB,SAAA,MACAsnB,EAAA7mB,SAAA6mB,EAAA7mB,SAAA6mB,EAAA7mB,SAAA4mB,EACAF,EAAAnmB,OAAAsmB,IAOAvjC,EAAA+Y,YAAA,SAAAlb,GAEA,OADAA,EAAAsM,uBACA7M,EAAA8E,iBAAAmB","file":"static/js/1.6ce08d878f719a33305c.js","sourcesContent":["'use strict';\n\nvar C = require('../constants/constants');\nvar messageParser = require('../message/message-parser');\n\n/**\n * This class represents a single remote procedure\n * call made from the client to the server. It's main function\n * is to encapsulate the logic around timeouts and to convert the\n * incoming response data\n *\n * @param {Object}   options           deepstream client config\n * @param {Function} callback          the function that will be called once the request\n *                                     is complete or failed\n * @param {Client} client\n *\n * @constructor\n */\nvar Rpc = function Rpc(name, callback, options, client) {\n  this._options = options;\n  this._callback = callback;\n  this._client = client;\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._ackTimeout = this._ackTimeoutRegistry.add({\n    topic: C.TOPIC.RPC,\n    action: C.ACTIONS.ACK,\n    name: name,\n    timeout: this._options.rpcAckTimeout,\n    callback: this.error.bind(this)\n  });\n  this._responseTimeout = this._ackTimeoutRegistry.add({\n    topic: C.TOPIC.RPC,\n    action: C.ACTIONS.REQUEST,\n    name: name,\n    event: C.EVENT.RESPONSE_TIMEOUT,\n    timeout: this._options.rpcResponseTimeout,\n    callback: this.error.bind(this)\n  });\n};\n\n/**\n * Called once an ack message is received from the server\n *\n * @public\n * @returns {void}\n */\nRpc.prototype.ack = function () {\n  this._ackTimeoutRegistry.remove({\n    ackId: this._ackTimeout\n  });\n};\n\n/**\n * Called once a response message is received from the server.\n * Converts the typed data and completes the request\n *\n * @param   {String} data typed value\n *\n * @public\n * @returns {void}\n */\nRpc.prototype.respond = function (data) {\n  var convertedData = messageParser.convertTyped(data, this._client);\n  this._callback(null, convertedData);\n  this._complete();\n};\n\n/**\n * Callback for error messages received from the server. Once\n * an error is received the request is considered completed. Even\n * if a response arrives later on it will be ignored / cause an\n * UNSOLICITED_MESSAGE error\n *\n * @param   {String} errorMsg @TODO should be CODE and message\n *\n * @public\n * @returns {void}\n */\nRpc.prototype.error = function (timeout) {\n  this._callback(timeout.event || timeout);\n  this._complete();\n};\n\n/**\n * Called after either an error or a response\n * was received\n *\n * @private\n * @returns {void}\n */\nRpc.prototype._complete = function () {\n  this._ackTimeoutRegistry.remove({\n    ackId: this._ackTimeout\n  });\n  this._ackTimeoutRegistry.remove({\n    ackId: this._responseTimeout\n  });\n};\n\nmodule.exports = Rpc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/rpc/rpc.js\n// module id = /RT9\n// module chunks = 1 2","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket = require('ws');\nvar messageParser = require('./message-parser');\nvar messageBuilder = require('./message-builder');\nvar utils = require('../utils/utils');\nvar C = require('../constants/constants');\n\n/**\n * Establishes a connection to a deepstream server using websockets\n *\n * @param {Client} client\n * @param {String} url     Short url, e.g. <host>:<port>. Deepstream works out the protocol\n * @param {Object} options connection options\n *\n * @constructor\n */\nvar Connection = function Connection(client, url, options) {\n  this._client = client;\n  this._options = options;\n  this._authParams = null;\n  this._authCallback = null;\n  this._deliberateClose = false;\n  this._redirecting = false;\n  this._tooManyAuthAttempts = false;\n  this._connectionAuthenticationTimeout = false;\n  this._challengeDenied = false;\n  this._queuedMessages = [];\n  this._reconnectTimeout = null;\n  this._reconnectionAttempt = 0;\n  this._currentPacketMessageCount = 0;\n  this._sendNextPacketTimeout = null;\n  this._currentMessageResetTimeout = null;\n  this._endpoint = null;\n  this._lastHeartBeat = null;\n  this._heartbeatInterval = null;\n\n  this._originalUrl = utils.parseUrl(url, this._options.path);\n  this._url = this._originalUrl;\n\n  this._state = C.CONNECTION_STATE.CLOSED;\n  this._createEndpoint();\n};\n\n/**\n * Returns the current connection state.\n * (One of constants.CONNECTION_STATE)\n *\n * @public\n * @returns {String} connectionState\n */\nConnection.prototype.getState = function () {\n  return this._state;\n};\n\n/**\n * Sends the specified authentication parameters\n * to the server. Can be called up to <maxAuthAttempts>\n * times for the same connection.\n *\n * @param   {Object}   authParams A map of user defined auth parameters.\n *                                E.g. { username:<String>, password:<String> }\n * @param   {Function} callback   A callback that will be invoked with the authenticationr result\n *\n * @public\n * @returns {void}\n */\nConnection.prototype.authenticate = function (authParams, callback) {\n  if ((typeof authParams === 'undefined' ? 'undefined' : _typeof(authParams)) !== 'object') {\n    this._client._$onError(C.TOPIC.ERROR, C.EVENT.INVALID_AUTH_MSG, 'authParams is not an object');\n    return;\n  }\n\n  this._authParams = authParams;\n  this._authCallback = callback;\n\n  if (this._tooManyAuthAttempts || this._challengeDenied || this._connectionAuthenticationTimeout) {\n    this._client._$onError(C.TOPIC.ERROR, C.EVENT.IS_CLOSED, 'this client\\'s connection was closed');\n    return;\n  } else if (this._deliberateClose === true && this._state === C.CONNECTION_STATE.CLOSED) {\n    this._createEndpoint();\n    this._deliberateClose = false;\n    return;\n  }\n\n  if (this._state === C.CONNECTION_STATE.AWAITING_AUTHENTICATION) {\n    this._sendAuthParams();\n  }\n};\n\n/**\n * High level send message method. Creates a deepstream message\n * string and invokes the actual send method.\n *\n * @param   {String} topic  One of C.TOPIC\n * @param   {String} action One of C.ACTIONS\n * @param   {[Mixed]} data   Date that will be added to the message. Primitive values will\n *                          be appended directly, objects and arrays will be serialized as JSON\n *\n * @private\n * @returns {void}\n */\nConnection.prototype.sendMsg = function (topic, action, data) {\n  this.send(messageBuilder.getMsg(topic, action, data));\n};\n\n/**\n * Main method for sending messages. Doesn't send messages instantly,\n * but instead achieves conflation by adding them to the message\n * buffer that will be drained on the next tick\n *\n * @param   {String} message deepstream message\n *\n * @public\n * @returns {void}\n */\nConnection.prototype.send = function (message) {\n  this._queuedMessages.push(message);\n  this._currentPacketMessageCount++;\n\n  if (this._currentMessageResetTimeout === null) {\n    this._currentMessageResetTimeout = utils.nextTick(this._resetCurrentMessageCount.bind(this));\n  }\n\n  if (this._state === C.CONNECTION_STATE.OPEN && this._queuedMessages.length < this._options.maxMessagesPerPacket && this._currentPacketMessageCount < this._options.maxMessagesPerPacket) {\n    this._sendQueuedMessages();\n  } else if (this._sendNextPacketTimeout === null) {\n    this._queueNextPacket();\n  }\n};\n\n/**\n * Closes the connection. Using this method\n * sets a _deliberateClose flag that will prevent the client from\n * reconnecting.\n *\n * @public\n * @returns {void}\n */\nConnection.prototype.close = function () {\n  clearInterval(this._heartbeatInterval);\n  this._deliberateClose = true;\n  this._endpoint.close();\n};\n\n/**\n * Creates the endpoint to connect to using the url deepstream\n * was initialised with.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._createEndpoint = function () {\n  this._endpoint = BrowserWebSocket ? new BrowserWebSocket(this._url) : new NodeWebSocket(this._url, this._options.nodeSocketOptions);\n\n  this._endpoint.onopen = this._onOpen.bind(this);\n  this._endpoint.onerror = this._onError.bind(this);\n  this._endpoint.onclose = this._onClose.bind(this);\n  this._endpoint.onmessage = this._onMessage.bind(this);\n};\n\n/**\n * When the implementation tries to send a large\n * number of messages in one execution thread, the first\n * <maxMessagesPerPacket> are send straight away.\n *\n * _currentPacketMessageCount keeps track of how many messages\n * went into that first packet. Once this number has been exceeded\n * the remaining messages are written to a queue and this message\n * is invoked on a timeout to reset the count.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._resetCurrentMessageCount = function () {\n  this._currentPacketMessageCount = 0;\n  this._currentMessageResetTimeout = null;\n};\n\n/**\n * Concatenates the messages in the current message queue\n * and sends them as a single package. This will also\n * empty the message queue and conclude the send process.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._sendQueuedMessages = function () {\n  if (this._state !== C.CONNECTION_STATE.OPEN || this._endpoint.readyState !== this._endpoint.OPEN) {\n    return;\n  }\n\n  if (this._queuedMessages.length === 0) {\n    this._sendNextPacketTimeout = null;\n    return;\n  }\n\n  var message = this._queuedMessages.splice(0, this._options.maxMessagesPerPacket).join('');\n\n  if (this._queuedMessages.length !== 0) {\n    this._queueNextPacket();\n  } else {\n    this._sendNextPacketTimeout = null;\n  }\n\n  this._submit(message);\n};\n\n/**\n * Sends a message to over the endpoint connection directly\n *\n * Will generate a connection error if the websocket was closed\n * prior to an onclose event.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._submit = function (message) {\n  if (this._endpoint.readyState === this._endpoint.OPEN) {\n    this._endpoint.send(message);\n  } else {\n    this._onError('Tried to send message on a closed websocket connection');\n  }\n};\n\n/**\n * Schedules the next packet whilst the connection is under\n * heavy load.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._queueNextPacket = function () {\n  var fn = this._sendQueuedMessages.bind(this);\n  var delay = this._options.timeBetweenSendingQueuedPackages;\n\n  this._sendNextPacketTimeout = setTimeout(fn, delay);\n};\n\n/**\n * Sends authentication params to the server. Please note, this\n * doesn't use the queued message mechanism, but rather sends the message directly\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._sendAuthParams = function () {\n  this._setState(C.CONNECTION_STATE.AUTHENTICATING);\n  var authMessage = messageBuilder.getMsg(C.TOPIC.AUTH, C.ACTIONS.REQUEST, [this._authParams]);\n  this._submit(authMessage);\n};\n\n/**\n * Ensures that a heartbeat was not missed more than once, otherwise it considers the connection\n * to have been lost and closes it for reconnection.\n * @return {void}\n */\nConnection.prototype._checkHeartBeat = function () {\n  var heartBeatTolerance = this._options.heartbeatInterval * 2;\n\n  if (Date.now() - this._lastHeartBeat > heartBeatTolerance) {\n    clearInterval(this._heartbeatInterval);\n    this._endpoint.close();\n    this._client._$onError(C.TOPIC.CONNECTION, C.EVENT.CONNECTION_ERROR, 'heartbeat not received in the last ' + heartBeatTolerance + ' milliseconds');\n  }\n};\n\n/**\n * Will be invoked once the connection is established. The client\n * can't send messages yet, and needs to get a connection ACK or REDIRECT\n * from the server before authenticating\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._onOpen = function () {\n  this._clearReconnect();\n  this._lastHeartBeat = Date.now();\n  this._heartbeatInterval = utils.setInterval(this._checkHeartBeat.bind(this), this._options.heartbeatInterval);\n  this._setState(C.CONNECTION_STATE.AWAITING_CONNECTION);\n};\n\n/**\n * Callback for generic connection errors. Forwards\n * the error to the client.\n *\n * The connection is considered broken once this method has been\n * invoked.\n *\n * @param   {String|Error} error connection error\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._onError = function (error) {\n  var _this = this;\n\n  clearInterval(this._heartbeatInterval);\n  this._setState(C.CONNECTION_STATE.ERROR);\n\n  /*\n   * If the implementation isn't listening on the error event this will throw\n   * an error. So let's defer it to allow the reconnection to kick in.\n   */\n  setTimeout(function () {\n    var msg = void 0;\n    if (error.code === 'ECONNRESET' || error.code === 'ECONNREFUSED') {\n      msg = 'Can\\'t connect! Deepstream server unreachable on ' + _this._originalUrl;\n    } else {\n      try {\n        msg = JSON.stringify(error);\n      } catch (e) {\n        msg = error.toString();\n      }\n    }\n    _this._client._$onError(C.TOPIC.CONNECTION, C.EVENT.CONNECTION_ERROR, msg);\n  }, 1);\n};\n\n/**\n * Callback when the connection closes. This might have been a deliberate\n * close triggered by the client or the result of the connection getting\n * lost.\n *\n * In the latter case the client will try to reconnect using the configured\n * strategy.\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._onClose = function () {\n  clearInterval(this._heartbeatInterval);\n\n  if (this._redirecting === true) {\n    this._redirecting = false;\n    this._createEndpoint();\n  } else if (this._deliberateClose === true) {\n    this._setState(C.CONNECTION_STATE.CLOSED);\n  } else {\n    this._tryReconnect();\n  }\n};\n\n/**\n * Callback for messages received on the connection.\n *\n * @param   {String} message deepstream message\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._onMessage = function (message) {\n  var parsedMessages = messageParser.parse(message.data, this._client);\n\n  for (var i = 0; i < parsedMessages.length; i++) {\n    if (parsedMessages[i] === null) {\n      continue;\n    } else if (parsedMessages[i].topic === C.TOPIC.CONNECTION) {\n      this._handleConnectionResponse(parsedMessages[i]);\n    } else if (parsedMessages[i].topic === C.TOPIC.AUTH) {\n      this._handleAuthResponse(parsedMessages[i]);\n    } else {\n      this._client._$onMessage(parsedMessages[i]);\n    }\n  }\n};\n\n/**\n * The connection response will indicate whether the deepstream connection\n * can be used or if it should be forwarded to another instance. This\n * allows us to introduce load-balancing if needed.\n *\n * If authentication parameters are already provided this will kick of\n * authentication immediately. The actual 'open' event won't be emitted\n * by the client until the authentication is successful.\n *\n * If a challenge is recieved, the user will send the url to the server\n * in response to get the appropriate redirect. If the URL is invalid the\n * server will respond with a REJECTION resulting in the client connection\n * being permanently closed.\n *\n * If a redirect is recieved, this connection is closed and updated with\n * a connection to the url supplied in the message.\n *\n * @param   {Object} message parsed connection message\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._handleConnectionResponse = function (message) {\n  if (message.action === C.ACTIONS.PING) {\n    this._lastHeartBeat = Date.now();\n    this._submit(messageBuilder.getMsg(C.TOPIC.CONNECTION, C.ACTIONS.PONG));\n  } else if (message.action === C.ACTIONS.ACK) {\n    this._setState(C.CONNECTION_STATE.AWAITING_AUTHENTICATION);\n    if (this._authParams) {\n      this._sendAuthParams();\n    }\n  } else if (message.action === C.ACTIONS.CHALLENGE) {\n    this._setState(C.CONNECTION_STATE.CHALLENGING);\n    this._submit(messageBuilder.getMsg(C.TOPIC.CONNECTION, C.ACTIONS.CHALLENGE_RESPONSE, [this._originalUrl]));\n  } else if (message.action === C.ACTIONS.REJECTION) {\n    this._challengeDenied = true;\n    this.close();\n  } else if (message.action === C.ACTIONS.REDIRECT) {\n    this._url = message.data[0];\n    this._redirecting = true;\n    this._endpoint.close();\n  } else if (message.action === C.ACTIONS.ERROR) {\n    if (message.data[0] === C.EVENT.CONNECTION_AUTHENTICATION_TIMEOUT) {\n      this._deliberateClose = true;\n      this._connectionAuthenticationTimeout = true;\n      this._client._$onError(C.TOPIC.CONNECTION, message.data[0], message.data[1]);\n    }\n  }\n};\n\n/**\n * Callback for messages received for the AUTH topic. If\n * the authentication was successful this method will\n * open the connection and send all messages that the client\n * tried to send so far.\n *\n * @param   {Object} message parsed auth message\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._handleAuthResponse = function (message) {\n  if (message.action === C.ACTIONS.ERROR) {\n\n    if (message.data[0] === C.EVENT.TOO_MANY_AUTH_ATTEMPTS) {\n      this._deliberateClose = true;\n      this._tooManyAuthAttempts = true;\n    } else if (message.data[0] === C.EVENT.INVALID_AUTH_MSG) {\n      this._deliberateClose = true;\n\n      if (this._authCallback) {\n        this._authCallback(false, 'invalid authentication message');\n      }\n\n      return;\n    } else {\n      this._setState(C.CONNECTION_STATE.AWAITING_AUTHENTICATION);\n    }\n\n    if (this._authCallback) {\n      this._authCallback(false, this._getAuthData(message.data[1]));\n    }\n  } else if (message.action === C.ACTIONS.ACK) {\n    this._setState(C.CONNECTION_STATE.OPEN);\n\n    if (this._authCallback) {\n      this._authCallback(true, this._getAuthData(message.data[0]));\n    }\n\n    this._sendQueuedMessages();\n  }\n};\n\n/**\n * Checks if data is present with login ack and converts it\n * to the correct type\n *\n * @param {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {object}\n */\nConnection.prototype._getAuthData = function (data) {\n  if (data === undefined) {\n    return null;\n  }\n  return messageParser.convertTyped(data, this._client);\n};\n\n/**\n * Updates the connection state and emits the\n * connectionStateChanged event on the client\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._setState = function (state) {\n  this._state = state;\n  this._client.emit(C.EVENT.CONNECTION_STATE_CHANGED, state);\n};\n\n/**\n * If the connection drops or is closed in error this\n * method schedules increasing reconnection intervals\n *\n * If the number of failed reconnection attempts exceeds\n * options.maxReconnectAttempts the connection is closed\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._tryReconnect = function () {\n  if (this._reconnectTimeout !== null) {\n    return;\n  }\n\n  if (this._reconnectionAttempt < this._options.maxReconnectAttempts) {\n    this._setState(C.CONNECTION_STATE.RECONNECTING);\n    this._reconnectTimeout = setTimeout(this._tryOpen.bind(this), Math.min(this._options.maxReconnectInterval, this._options.reconnectIntervalIncrement * this._reconnectionAttempt));\n    this._reconnectionAttempt++;\n  } else {\n    this._clearReconnect();\n    this.close();\n    this._client.emit(C.EVENT.MAX_RECONNECTION_ATTEMPTS_REACHED, this._reconnectionAttempt);\n  }\n};\n\n/**\n * Attempts to open a errourosly closed connection\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._tryOpen = function () {\n  if (this._originalUrl !== this._url) {\n    this._url = this._originalUrl;\n  }\n  this._createEndpoint();\n  this._reconnectTimeout = null;\n};\n\n/**\n * Stops all further reconnection attempts,\n * either because the connection is open again\n * or because the maximal number of reconnection\n * attempts has been exceeded\n *\n * @private\n * @returns {void}\n */\nConnection.prototype._clearReconnect = function () {\n  clearTimeout(this._reconnectTimeout);\n  this._reconnectTimeout = null;\n  this._reconnectionAttempt = 0;\n};\n\nmodule.exports = Connection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/message/connection.js\n// module id = 07GI\n// module chunks = 1 2","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/index.js\n// module id = 1nuA\n// module chunks = 1 2","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 3IRH\n// module chunks = 1 2","'use strict';\n\nvar C = require('./constants/constants');\nvar MS = require('./constants/merge-strategies');\nvar Emitter = require('component-emitter2');\nvar Connection = require('./message/connection');\nvar EventHandler = require('./event/event-handler');\nvar RpcHandler = require('./rpc/rpc-handler');\nvar RecordHandler = require('./record/record-handler');\nvar PresenceHandler = require('./presence/presence-handler');\nvar defaultOptions = require('./default-options');\nvar AckTimeoutRegistry = require('./utils/ack-timeout-registry');\n\n/**\n * deepstream.io javascript client\n *\n * @copyright 2016 deepstreamHub GmbH\n * @author deepstreamHub GmbH\n *\n *\n * @{@link http://deepstream.io}\n *\n *\n * @param {String} url     URL to connect to. The protocol can be ommited, e.g. <host>:<port>.\n * @param {Object} options A map of options that extend the ones specified in default-options.js\n *\n * @public\n * @constructor\n */\nvar Client = function Client(url, options) {\n  this._url = url;\n  this._options = this._getOptions(options || {});\n\n  this._connection = new Connection(this, this._url, this._options);\n  this._ackTimeoutRegistry = new AckTimeoutRegistry(this, this._options);\n\n  this.event = new EventHandler(this._options, this._connection, this);\n  this.rpc = new RpcHandler(this._options, this._connection, this);\n  this.record = new RecordHandler(this._options, this._connection, this);\n  this.presence = new PresenceHandler(this._options, this._connection, this);\n\n  this._messageCallbacks = {};\n  this._messageCallbacks[C.TOPIC.EVENT] = this.event._$handle.bind(this.event);\n  this._messageCallbacks[C.TOPIC.RPC] = this.rpc._$handle.bind(this.rpc);\n  this._messageCallbacks[C.TOPIC.RECORD] = this.record._$handle.bind(this.record);\n  this._messageCallbacks[C.TOPIC.PRESENCE] = this.presence._$handle.bind(this.presence);\n  this._messageCallbacks[C.TOPIC.ERROR] = this._onErrorMessage.bind(this);\n};\n\nEmitter(Client.prototype); // eslint-disable-line\n\n/**\n * Send authentication parameters to the client to fully open\n * the connection.\n *\n * Please note: Authentication parameters are send over an already established\n * connection, rather than appended to the server URL. This means the parameters\n * will be encrypted when used with a WSS / HTTPS connection. If the deepstream server\n * on the other side has message logging enabled it will however be written to the logs in\n * plain text. If additional security is a requirement it might therefor make sense to hash\n * the password on the client.\n *\n * If the connection is not yet established the authentication parameter will be\n * stored and send once it becomes available\n *\n * authParams can be any JSON serializable data structure and its up for the\n * permission handler on the server to make sense of them, although something\n * like { username: 'someName', password: 'somePass' } will probably make the most sense.\n *\n * login can be called multiple times until either the connection is authenticated or\n * forcefully closed by the server since its maxAuthAttempts threshold has been exceeded\n *\n * @param   {Object}   authParams JSON.serializable authentication data\n * @param   {Function} callback   Will be called with either (true) or (false, data)\n *\n * @public\n * @returns {Client}\n */\nClient.prototype.login = function (authParamsOrCallback, callback) {\n  if (typeof authParamsOrCallback === 'function') {\n    this._connection.authenticate({}, authParamsOrCallback);\n  } else {\n    this._connection.authenticate(authParamsOrCallback || {}, callback);\n  }\n  return this;\n};\n\n/**\n * Closes the connection to the server.\n *\n * @public\n * @returns {void}\n */\nClient.prototype.close = function () {\n  this._connection.close();\n};\n\n/**\n * Returns the current state of the connection.\n *\n * connectionState is one of CONSTANTS.CONNECTION_STATE\n *\n * @returns {[type]} [description]\n */\nClient.prototype.getConnectionState = function () {\n  return this._connection.getState();\n};\n\n/**\n * Returns a random string. The first block of characters\n * is a timestamp, in order to allow databases to optimize for semi-\n * sequentuel numberings\n *\n * @public\n * @returns {String} unique id\n */\nClient.prototype.getUid = function () {\n  var timestamp = new Date().getTime().toString(36);\n  var randomString = (Math.random() * 10000000000000000).toString(36).replace('.', '');\n\n  return timestamp + '-' + randomString;\n};\n\n/**\n * Package private ack timeout registry. This is how all classes can get access to\n * register timeouts.\n * (Well... that's the intention anyways)\n *\n * @package private\n * @returns {AckTimeoutRegistry}\n */\nClient.prototype._$getAckTimeoutRegistry = function () {\n  return this._ackTimeoutRegistry;\n};\n\n/**\n * Package private callback for parsed incoming messages. Will be invoked\n * by the connection class\n *\n * @param   {Object} message parsed deepstream message\n *\n * @package private\n * @returns {void}\n */\nClient.prototype._$onMessage = function (message) {\n  if (this._messageCallbacks[message.topic]) {\n    this._messageCallbacks[message.topic](message);\n  } else {\n    message.processedError = true;\n    this._$onError(message.topic, C.EVENT.MESSAGE_PARSE_ERROR, 'Received message for unknown topic ' + message.topic);\n  }\n\n  if (message.action === C.ACTIONS.ERROR && !message.processedError) {\n    this._$onError(message.topic, message.data[0], message.data.slice(0));\n  }\n};\n\n/**\n * Package private error callback. This is the single point at which\n * errors are thrown in the client. (Well... that's the intention anyways)\n *\n * The expectations would be for implementations to subscribe\n * to the client's error event to prevent errors from being thrown\n * and then decide based on the event and topic parameters how\n * to handle the errors\n *\n * IMPORTANT: Errors that are specific to a request, e.g. a RPC\n * timing out or a record not being permissioned are passed directly\n * to the method that requested them\n *\n * @param   {String} topic One of CONSTANTS.TOPIC\n * @param   {String} event One of CONSTANTS.EVENT\n * @param   {String} msg   Error dependent message\n *\n * @package private\n * @returns {void}\n */\nClient.prototype._$onError = function (topic, event, msg) {\n  var errorMsg = void 0;\n\n  /*\n   * Help to diagnose the problem quicker by checking for\n   * some common problems\n   */\n  if (event === C.EVENT.ACK_TIMEOUT || event === C.EVENT.RESPONSE_TIMEOUT) {\n    if (this.getConnectionState() === C.CONNECTION_STATE.AWAITING_AUTHENTICATION) {\n      errorMsg = 'Your message timed out because you\\'re not authenticated. Have you called login()?';\n      setTimeout(this._$onError.bind(this, C.EVENT.NOT_AUTHENTICATED, C.TOPIC.ERROR, errorMsg), 1);\n    }\n  }\n\n  if (this.hasListeners('error')) {\n    this.emit('error', msg, event, topic);\n    this.emit(event, topic, msg);\n  } else {\n    console.log('--- You can catch all deepstream errors by subscribing to the error event ---');\n\n    errorMsg = event + ': ' + msg;\n\n    if (topic) {\n      errorMsg += ' (' + topic + ')';\n    }\n\n    throw new Error(errorMsg);\n  }\n};\n\n/**\n * Passes generic messages from the error topic\n * to the _$onError handler\n *\n * @param {Object} errorMessage parsed deepstream error message\n *\n * @private\n * @returns {void}\n */\nClient.prototype._onErrorMessage = function (errorMessage) {\n  this._$onError(errorMessage.topic, errorMessage.data[0], errorMessage.data[1]);\n};\n\n/**\n * Creates a new options map by extending default\n * options with the passed in options\n *\n * @param   {Object} options The user specified client configuration options\n *\n * @private\n * @returns {Object}  merged options\n */\nClient.prototype._getOptions = function (options) {\n  var mergedOptions = {};\n\n  for (var key in defaultOptions) {\n    if (typeof options[key] === 'undefined') {\n      mergedOptions[key] = defaultOptions[key];\n    } else {\n      mergedOptions[key] = options[key];\n    }\n  }\n\n  return mergedOptions;\n};\n\n/**\n * Exports factory function to adjust to the current JS style of\n * disliking 'new' :-)\n *\n * @param {String} url     URL to connect to. The protocol can be ommited, e.g. <host>:<port>.\n * @param {Object} options A map of options that extend the ones specified in default-options.js\n *\n * @public\n * @returns {void}\n */\nfunction createDeepstream(url, options) {\n  return new Client(url, options);\n}\n\n/**\n * Expose constants to allow consumers to access them\n*/\nClient.prototype.CONSTANTS = C;\ncreateDeepstream.CONSTANTS = C;\n\n/**\n * Expose merge strategies to allow consumers to access them\n*/\nClient.prototype.MERGE_STRATEGIES = MS;\ncreateDeepstream.MERGE_STRATEGIES = MS;\n\nmodule.exports = createDeepstream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/client.js\n// module id = 5LsM\n// module chunks = 1 2","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/array/from.js\n// module id = 5zde\n// module chunks = 1 2","\n/**\n * Expose `Emitter`.\n */\n\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || Object.create(null);\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || Object.create(null);\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = Object.create(null);\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks[event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || Object.create(null);\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks[event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || Object.create(null);\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n/**\n * Returns an array listing the events for which the emitter has registered listeners.\n *\n * @return {Array}\n * @api public\n */\nEmitter.prototype.eventNames = function(){\n  return this._callbacks ? Object.keys(this._callbacks) : [];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/component-emitter2/index.js\n// module id = 8tIl\n// module chunks = 1 2","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar utils = require('../utils/utils');\n\nvar PARTS_REG_EXP = /([^.[\\]\\s]+)/g;\nvar cache = Object.create(null);\n\n/**\n * Returns the value of the path or\n * undefined if the path can't be resolved\n *\n * @public\n * @returns {Mixed}\n */\nmodule.exports.get = function (data, path, deepCopy) {\n  var tokens = tokenize(path);\n  var value = data;\n  for (var i = 0; i < tokens.length; i++) {\n    if (value === undefined) {\n      return undefined;\n    }\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      throw new Error('invalid data or path');\n    }\n    value = value[tokens[i]];\n  }\n\n  return deepCopy !== false ? utils.deepCopy(value) : value;\n};\n\n/**\n * Sets the value of the path. If the path (or parts\n * of it) doesn't exist yet, it will be created\n *\n * @param {Mixed} value\n *\n * @public\n * @returns {Mixed} updated value\n */\nmodule.exports.set = function (data, path, value, deepCopy) {\n  var tokens = tokenize(path);\n\n  if (tokens.length === 0) {\n    return patch(data, value, deepCopy);\n  }\n\n  var oldValue = module.exports.get(data, path, false);\n  var newValue = patch(oldValue, value, deepCopy);\n\n  if (newValue === oldValue) {\n    return data;\n  }\n\n  var result = utils.shallowCopy(data);\n\n  var node = result;\n  for (var i = 0; i < tokens.length; i++) {\n    if (i === tokens.length - 1) {\n      node[tokens[i]] = newValue;\n    } else if (node[tokens[i]] !== undefined) {\n      node = node[tokens[i]] = utils.shallowCopy(node[tokens[i]]);\n    } else if (tokens[i + 1] && !isNaN(tokens[i + 1])) {\n      node = node[tokens[i]] = [];\n    } else {\n      node = node[tokens[i]] = Object.create(null);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Merge the new value into the old value\n * @param  {Mixed} oldValue\n * @param  {Mixed} newValue\n * @param  {boolean} deepCopy\n * @return {Mixed}\n */\nfunction patch(oldValue, newValue, deepCopy) {\n  var i = void 0;\n  var j = void 0;\n  if (oldValue === null || newValue === null) {\n    return newValue;\n  } else if (Array.isArray(oldValue) && Array.isArray(newValue)) {\n    var arr = void 0;\n    for (i = 0; i < newValue.length; i++) {\n      var value = patch(oldValue[i], newValue[i], false);\n      if (!arr) {\n        if (value === oldValue[i]) {\n          continue;\n        }\n        arr = [];\n        for (j = 0; j < i; ++j) {\n          arr[j] = oldValue[j];\n        }\n      }\n      arr[i] = value;\n    }\n    arr = arr && deepCopy !== false ? utils.deepCopy(arr) : arr;\n    arr = arr || (oldValue.length === newValue.length ? oldValue : newValue);\n    return arr;\n  } else if (!Array.isArray(newValue) && (typeof oldValue === 'undefined' ? 'undefined' : _typeof(oldValue)) === 'object' && (typeof newValue === 'undefined' ? 'undefined' : _typeof(newValue)) === 'object') {\n    var obj = void 0;\n    var props = Object.keys(newValue);\n    for (i = 0; i < props.length; i++) {\n      var _value = patch(oldValue[props[i]], newValue[props[i]], false);\n      if (!obj) {\n        if (_value === oldValue[props[i]]) {\n          continue;\n        }\n        obj = Object.create(null);\n        for (j = 0; j < i; ++j) {\n          obj[props[j]] = oldValue[props[j]];\n        }\n      }\n      obj[props[i]] = newValue[props[i]];\n    }\n    obj = obj && deepCopy !== false ? utils.deepCopy(obj) : obj;\n    obj = obj || (Object.keys(oldValue).length === props.length ? oldValue : newValue);\n    return obj;\n  } else if (newValue !== oldValue) {\n    return deepCopy !== false ? utils.deepCopy(newValue) : newValue;\n  }\n\n  return oldValue;\n}\n\n/**\n * Parses the path. Splits it into\n * keys for objects and indices for arrays.\n *\n * @returns Array of tokens\n */\nfunction tokenize(path) {\n  if (cache[path]) {\n    return cache[path];\n  }\n\n  var parts = String(path) !== 'undefined' ? String(path).match(PARTS_REG_EXP) : [];\n\n  if (!parts) {\n    throw new Error('invalid path ' + path);\n  }\n\n  cache[path] = parts;\n  return cache[path];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/record/json-path.js\n// module id = F5Hz\n// module chunks = 1 2","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/toConsumableArray.js\n// module id = Gu7T\n// module chunks = 1 2","'use strict';\n\nmodule.exports = {\n  /**\n  *  Choose the server's state over the client's\n  **/\n  REMOTE_WINS: function REMOTE_WINS(record, remoteValue, remoteVersion, callback) {\n    callback(null, remoteValue);\n  },\n\n  /**\n  *  Choose the local state over the server's\n  **/\n  LOCAL_WINS: function LOCAL_WINS(record, remoteValue, remoteVersion, callback) {\n    callback(null, record.get());\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/constants/merge-strategies.js\n// module id = HUfI\n// module chunks = 1 2","'use strict';\n\nvar messageBuilder = require('../message/message-builder');\nvar messageParser = require('../message/message-parser');\nvar ResubscribeNotifier = require('../utils/resubscribe-notifier');\nvar C = require('../constants/constants');\nvar Listener = require('../utils/listener');\nvar EventEmitter = require('component-emitter2');\n\n/**\n * This class handles incoming and outgoing messages in relation\n * to deepstream events. It basically acts like an event-hub that's\n * replicated across all connected clients.\n *\n * @param {Object} options    deepstream options\n * @param {Connection} connection\n * @param {Client} client\n * @public\n * @constructor\n */\nvar EventHandler = function EventHandler(options, connection, client) {\n  this._options = options;\n  this._connection = connection;\n  this._client = client;\n  this._emitter = new EventEmitter();\n  this._listener = {};\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._resubscribeNotifier = new ResubscribeNotifier(this._client, this._resubscribe.bind(this));\n};\n\n/**\n * Subscribe to an event. This will receive both locally emitted events\n * as well as events emitted by other connected clients.\n *\n * @param   {String}   name\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nEventHandler.prototype.subscribe = function (name, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  if (!this._emitter.hasListeners(name)) {\n    this._ackTimeoutRegistry.add({\n      topic: C.TOPIC.EVENT,\n      action: C.ACTIONS.SUBSCRIBE,\n      name: name\n    });\n    this._connection.sendMsg(C.TOPIC.EVENT, C.ACTIONS.SUBSCRIBE, [name]);\n  }\n\n  this._emitter.on(name, callback);\n};\n\n/**\n * Removes a callback for a specified event. If all callbacks\n * for an event have been removed, the server will be notified\n * that the client is unsubscribed as a listener\n *\n * @param   {String}   name\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nEventHandler.prototype.unsubscribe = function (name, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n  this._emitter.off(name, callback);\n\n  if (!this._emitter.hasListeners(name)) {\n    this._ackTimeoutRegistry.add({\n      topic: C.TOPIC.EVENT,\n      action: C.ACTIONS.UNSUBSCRIBE,\n      name: name\n    });\n    this._connection.sendMsg(C.TOPIC.EVENT, C.ACTIONS.UNSUBSCRIBE, [name]);\n  }\n};\n\n/**\n * Emits an event locally and sends a message to the server to\n * broadcast the event to the other connected clients\n *\n * @param   {String} name\n * @param   {Mixed} data will be serialized and deserialized to its original type.\n *\n * @public\n * @returns {void}\n */\nEventHandler.prototype.emit = function (name, data) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n\n  this._connection.sendMsg(C.TOPIC.EVENT, C.ACTIONS.EVENT, [name, messageBuilder.typed(data)]);\n  this._emitter.emit(name, data);\n};\n\n/**\n * Allows to listen for event subscriptions made by this or other clients. This\n * is useful to create \"active\" data providers, e.g. providers that only provide\n * data for a particular event if a user is actually interested in it\n *\n * @param   {String}   pattern  A combination of alpha numeric characters and wildcards( * )\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nEventHandler.prototype.listen = function (pattern, callback) {\n  if (typeof pattern !== 'string' || pattern.length === 0) {\n    throw new Error('invalid argument pattern');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  if (this._listener[pattern] && !this._listener[pattern].destroyPending) {\n    this._client._$onError(C.TOPIC.EVENT, C.EVENT.LISTENER_EXISTS, pattern);\n    return;\n  } else if (this._listener[pattern]) {\n    this._listener[pattern].destroy();\n  }\n\n  this._listener[pattern] = new Listener(C.TOPIC.EVENT, pattern, callback, this._options, this._client, this._connection);\n};\n\n/**\n * Removes a listener that was previously registered with listenForSubscriptions\n *\n * @param   {String}   pattern  A combination of alpha numeric characters and wildcards( * )\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nEventHandler.prototype.unlisten = function (pattern) {\n  if (typeof pattern !== 'string' || pattern.length === 0) {\n    throw new Error('invalid argument pattern');\n  }\n\n  var listener = this._listener[pattern];\n\n  if (listener && !listener.destroyPending) {\n    listener.sendDestroy();\n  } else if (this._listener[pattern]) {\n    this._ackTimeoutRegistry.add({\n      topic: C.TOPIC.EVENT,\n      action: C.EVENT.UNLISTEN,\n      name: pattern\n    });\n    this._listener[pattern].destroy();\n    delete this._listener[pattern];\n  } else {\n    this._client._$onError(C.TOPIC.RECORD, C.EVENT.NOT_LISTENING, pattern);\n  }\n};\n\n/**\n * Handles incoming messages from the server\n *\n * @param   {Object} message parsed deepstream message\n *\n * @package private\n * @returns {void}\n */\nEventHandler.prototype._$handle = function (message) {\n  var name = message.data[message.action === C.ACTIONS.ACK ? 1 : 0];\n\n  if (message.action === C.ACTIONS.EVENT) {\n    if (message.data && message.data.length === 2) {\n      this._emitter.emit(name, messageParser.convertTyped(message.data[1], this._client));\n    } else {\n      this._emitter.emit(name);\n    }\n    return;\n  }\n\n  if (message.action === C.ACTIONS.ACK && message.data[0] === C.ACTIONS.UNLISTEN && this._listener[name] && this._listener[name].destroyPending) {\n    this._listener[name].destroy();\n    delete this._listener[name];\n    return;\n  } else if (this._listener[name]) {\n    this._listener[name]._$onMessage(message);\n    return;\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_FOR_PATTERN_REMOVED) {\n    // An unlisten ACK was received before an PATTERN_REMOVED which is a valid case\n    return;\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_HAS_PROVIDER) {\n    // record can receive a HAS_PROVIDER after discarding the record\n    return;\n  }\n\n  if (message.action === C.ACTIONS.ACK) {\n    this._ackTimeoutRegistry.clear(message);\n    return;\n  }\n\n  if (message.action === C.ACTIONS.ERROR) {\n    if (message.data[0] === C.EVENT.MESSAGE_DENIED) {\n      this._ackTimeoutRegistry.remove({\n        topic: C.TOPIC.EVENT,\n        name: message.data[1],\n        action: message.data[2]\n      });\n    } else if (message.data[0] === C.EVENT.NOT_SUBSCRIBED) {\n      this._ackTimeoutRegistry.remove({\n        topic: C.TOPIC.EVENT,\n        name: message.data[1],\n        action: C.ACTIONS.UNSUBSCRIBE\n      });\n    }\n    message.processedError = true;\n    this._client._$onError(C.TOPIC.EVENT, message.data[0], message.data[1]);\n    return;\n  }\n\n  this._client._$onError(C.TOPIC.EVENT, C.EVENT.UNSOLICITED_MESSAGE, name);\n};\n\n/**\n * Resubscribes to events when connection is lost\n *\n * @package private\n * @returns {void}\n */\nEventHandler.prototype._resubscribe = function () {\n  var callbacks = this._emitter._callbacks;\n  for (var eventName in callbacks) {\n    this._connection.sendMsg(C.TOPIC.EVENT, C.ACTIONS.SUBSCRIBE, [eventName]);\n  }\n};\n\nmodule.exports = EventHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/event/event-handler.js\n// module id = IbPE\n// module chunks = 1 2","'use strict';\n\nvar C = require('../constants/constants');\nvar utils = require('../utils/utils');\nvar messageBuilder = require('../message/message-builder');\n\n/**\n * This object provides a number of methods that allow a rpc provider\n * to respond to a request\n *\n * @param {Connection} connection - the clients connection object\n * @param {String} name the name of the rpc\n * @param {String} correlationId the correlationId for the RPC\n */\nvar RpcResponse = function RpcResponse(connection, name, correlationId) {\n  this._connection = connection;\n  this._name = name;\n  this._correlationId = correlationId;\n  this._isAcknowledged = false;\n  this._isComplete = false;\n  this.autoAck = true;\n  utils.nextTick(this._performAutoAck.bind(this));\n};\n\n/**\n * Acknowledges the receipt of the request. This\n * will happen implicitly unless the request callback\n * explicitly sets autoAck to false\n *\n * @public\n * @returns   {void}\n */\nRpcResponse.prototype.ack = function () {\n  if (this._isAcknowledged === false) {\n    this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.ACK, [C.ACTIONS.REQUEST, this._name, this._correlationId]);\n    this._isAcknowledged = true;\n  }\n};\n\n/**\n * Reject the request. This might be necessary if the client\n * is already processing a large number of requests. If deepstream\n * receives a rejection message it will try to route the request to\n * another provider - or return a NO_RPC_PROVIDER error if there are no\n * providers left\n *\n * @public\n * @returns  {void}\n */\nRpcResponse.prototype.reject = function () {\n  this.autoAck = false;\n  this._isComplete = true;\n  this._isAcknowledged = true;\n  this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.REJECTION, [this._name, this._correlationId]);\n};\n\n/**\n * Notifies the server that an error has occured while trying to process the request.\n * This will complete the rpc.\n *\n * @param {String} errorMsg the message used to describe the error that occured\n * @public\n * @returns  {void}\n */\nRpcResponse.prototype.error = function (errorMsg) {\n  this.autoAck = false;\n  this._isComplete = true;\n  this._isAcknowledged = true;\n  this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.ERROR, [errorMsg, this._name, this._correlationId]);\n};\n\n/**\n * Completes the request by sending the response data\n * to the server. If data is an array or object it will\n * automatically be serialised.\n * If autoAck is disabled and the response is sent before\n * the ack message the request will still be completed and the\n * ack message ignored\n *\n * @param {String} data the data send by the provider. Might be JSON serialized\n *\n * @public\n * @returns {void}\n */\nRpcResponse.prototype.send = function (data) {\n  if (this._isComplete === true) {\n    throw new Error('Rpc ' + this._name + ' already completed');\n  }\n  this.ack();\n\n  var typedData = messageBuilder.typed(data);\n  this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.RESPONSE, [this._name, this._correlationId, typedData]);\n  this._isComplete = true;\n};\n\n/**\n * Callback for the autoAck timeout. Executes ack\n * if autoAck is not disabled\n *\n * @private\n * @returns {void}\n */\nRpcResponse.prototype._performAutoAck = function () {\n  if (this.autoAck === true) {\n    this.ack();\n  }\n};\n\nmodule.exports = RpcResponse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/rpc/rpc-response.js\n// module id = Kj+9\n// module chunks = 1 2","'use strict';\n\nvar C = require('../constants/constants');\n\n/**\n * Parses ASCII control character seperated\n * message strings into digestable maps\n *\n * @constructor\n */\nvar MessageParser = function MessageParser() {\n  this._actions = this._getActions();\n};\n\n/**\n * Main interface method. Receives a raw message\n * string, containing one or more messages\n * and returns an array of parsed message objects\n * or null for invalid messages\n *\n * @param   {String} message raw message\n *\n * @public\n *\n * @returns {Array} array of parsed message objects\n *                  following the format\n *                  {\n *                    raw: <original message string>\n *                    topic: <string>\n *                    action: <string - shortcode>\n *                    data: <array of strings>\n *                  }\n */\nMessageParser.prototype.parse = function (message, client) {\n  var parsedMessages = [];\n  var rawMessages = message.split(C.MESSAGE_SEPERATOR);\n\n  for (var i = 0; i < rawMessages.length; i++) {\n    if (rawMessages[i].length > 2) {\n      parsedMessages.push(this._parseMessage(rawMessages[i], client));\n    }\n  }\n\n  return parsedMessages;\n};\n\n/**\n * Deserializes values created by MessageBuilder.typed to\n * their original format\n *\n * @param {String} value\n *\n * @public\n * @returns {Mixed} original value\n */\nMessageParser.prototype.convertTyped = function (value, client) {\n  var type = value.charAt(0);\n\n  if (type === C.TYPES.STRING) {\n    return value.substr(1);\n  }\n\n  if (type === C.TYPES.OBJECT) {\n    try {\n      return JSON.parse(value.substr(1));\n    } catch (e) {\n      client._$onError(C.TOPIC.ERROR, C.EVENT.MESSAGE_PARSE_ERROR, e.toString() + '(' + value + ')');\n      return undefined;\n    }\n  }\n\n  if (type === C.TYPES.NUMBER) {\n    return parseFloat(value.substr(1));\n  }\n\n  if (type === C.TYPES.NULL) {\n    return null;\n  }\n\n  if (type === C.TYPES.TRUE) {\n    return true;\n  }\n\n  if (type === C.TYPES.FALSE) {\n    return false;\n  }\n\n  if (type === C.TYPES.UNDEFINED) {\n    return undefined;\n  }\n\n  client._$onError(C.TOPIC.ERROR, C.EVENT.MESSAGE_PARSE_ERROR, 'UNKNOWN_TYPE (' + value + ')');\n  return undefined;\n};\n\n/**\n * Turns the ACTION:SHORTCODE constants map\n * around to facilitate shortcode lookup\n *\n * @private\n *\n * @returns {Object} actions\n */\nMessageParser.prototype._getActions = function () {\n  var actions = {};\n\n  for (var key in C.ACTIONS) {\n    actions[C.ACTIONS[key]] = key;\n  }\n\n  return actions;\n};\n\n/**\n * Parses an individual message (as oppnosed to a\n * block of multiple messages as is processed by .parse())\n *\n * @param   {String} message\n *\n * @private\n *\n * @returns {Object} parsedMessage\n */\nMessageParser.prototype._parseMessage = function (message, client) {\n  var parts = message.split(C.MESSAGE_PART_SEPERATOR);\n  var messageObject = {};\n\n  if (parts.length < 2) {\n    client._$onError(C.TOPIC.ERROR, C.EVENT.MESSAGE_PARSE_ERROR, 'Insufficiant message parts');\n    return null;\n  }\n\n  if (this._actions[parts[1]] === undefined) {\n    client._$onError(C.TOPIC.ERROR, C.EVENT.MESSAGE_PARSE_ERROR, 'Unknown action ' + parts[1]);\n    return null;\n  }\n\n  messageObject.raw = message;\n  messageObject.topic = parts[0];\n  messageObject.action = parts[1];\n  messageObject.data = parts.splice(2);\n\n  return messageObject;\n};\n\nmodule.exports = new MessageParser();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/message/message-parser.js\n// module id = L8AQ\n// module chunks = 1 2","'use strict';\n\nvar MERGE_STRATEGIES = require('./constants/merge-strategies');\n\nmodule.exports = {\n  /**\n   * @param {Number} heartBeatInterval           How often you expect the heartbeat to be sent.\n   *                                             If two heatbeats are missed in a row the client\n   *                                             will consider the server to have disconnected\n   *                                             and will close the connection in order to\n   *                                             establish a new one.\n   */\n  heartbeatInterval: 30000,\n\n  /**\n   * @param {Number} reconnectIntervalIncrement  Specifies the number of milliseconds by\n   *                                             which the time until the next reconnection\n   *                                             attempt will be incremented after every\n   *                                             unsuccesful attempt.\n   *                                             E.g. for 1500: if the connection is lost,\n   *                                             the client will attempt to reconnect immediatly,\n   *                                             if that fails it will try again after 1.5 seconds,\n   *                                             if that fails it will try again after 3 seconds\n   *                                             and so on\n   */\n  reconnectIntervalIncrement: 4000,\n\n  /**\n   * @param {Number} maxReconnectInterval        Specifies the maximum number of milliseconds for\n   *                                             the reconnectIntervalIncrement\n   *                                             The amount of reconnections will reach this value\n   *                                             then reconnectIntervalIncrement will be ignored.\n   */\n  maxReconnectInterval: 180000,\n\n  /**\n   * @param {Number} maxReconnectAttempts        The number of reconnection attempts until the\n   *                                             client gives up and declares the connection closed\n   */\n  maxReconnectAttempts: 5,\n\n  /**\n   * @param {Number} rpcAckTimeout               The number of milliseconds after which a rpc will\n   *                                             create an error if no Ack-message has been received\n   */\n  rpcAckTimeout: 6000,\n\n  /**\n   * @param {Number} rpcResponseTimeout          The number of milliseconds after which a rpc will\n   *                                             create an error if no response-message has been\n   *                                             received\n   */\n  rpcResponseTimeout: 10000,\n\n  /**\n   * @param {Number} subscriptionTimeout         The number of milliseconds that can pass after\n   *                                             providing/unproviding a RPC or subscribing/\n   *                                             unsubscribing/listening to a record before an\n   *                                             error is thrown\n   */\n  subscriptionTimeout: 2000,\n\n  /**\n   * @param {Number} maxMessagesPerPacket        If the implementation tries to send a large\n   *                                             number of messages at the same time, the deepstream\n   *                                             client will try to split them into smaller packets\n   *                                             and send these every\n   *                                             <timeBetweenSendingQueuedPackages> ms.\n   *\n   *                                             This parameter specifies the number of messages\n   *                                             after which deepstream sends the packet and\n   *                                             queues the remaining messages.\n   *                                             Set to Infinity to turn the feature off.\n   *\n   */\n  maxMessagesPerPacket: 100,\n\n  /**\n   * @param {Number} timeBetweenSendingQueuedPackages\n   *                                             Please see description for\n   *                                             maxMessagesPerPacket. Sets the time in ms.\n   */\n  timeBetweenSendingQueuedPackages: 16,\n\n  /**\n   * @param {Number} recordReadAckTimeout       The number of milliseconds from the moment\n   *                                            client.record.getRecord() is called until an error\n   *                                            is thrown since no ack message has been received.\n   */\n  recordReadAckTimeout: 15000,\n\n  /**\n   * @param {Number} recordReadTimeout           The number of milliseconds from the moment\n   *                                             client.record.getRecord() is called until an error\n   *                                             is thrown since no data has been received.\n   */\n  recordReadTimeout: 15000,\n\n  /**\n   * @param {Number} recordDeleteTimeout         The number of milliseconds from the moment\n   *                                             record.delete() is called until an error is\n   *                                             thrown since no delete ack message had been\n   *                                             received.\n   *                                             Please take into account that the deletion is only\n   *                                             complete after the record has been deleted from\n   *                                             both cache and storage\n   */\n  recordDeleteTimeout: 15000,\n\n  /**\n   * @param {String} path path to connect to\n   */\n  path: '/deepstream',\n\n  /**\n   *  @param {Function} mergeStrategy            This provides the default strategy used to\n   *                                             deal with merge conflicts.\n   *                                             If the merge strategy is not succesfull it will\n   *                                             set an error, else set the returned data as the\n   *                                             latest revision. This can be overriden on a per\n   *                                             record basis by setting the `setMergeStrategy`.\n   */\n  mergeStrategy: MERGE_STRATEGIES.REMOTE_WINS,\n\n  /**\n   * @param {Boolean} recordDeepCopy             Setting to false disabled deepcopying of record\n   *                                             data when provided via `get()` in a `subscribe`\n   *                                             callback. This improves speed at the expense of\n   *                                             the user having to ensure object immutability.\n   */\n  recordDeepCopy: true,\n\n  /**\n   * https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketaddress-protocols-options\n   *\n   * @param {Object} nodeSocketOptions           Options to pass to the websocket constructor in\n   *                                             node.\n   * @default null\n   */\n  nodeSocketOptions: null\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/default-options.js\n// module id = MaXM\n// module chunks = 1 2","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/punycode/punycode.js\n// module id = MsCo\n// module chunks = 1 2","'use strict';\n/* eslint-disable prefer-spread, prefer-rest-params */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar jsonPath = require('./json-path');\nvar ResubscribeNotifier = require('../utils/resubscribe-notifier');\nvar EventEmitter = require('component-emitter2');\nvar C = require('../constants/constants');\nvar messageBuilder = require('../message/message-builder');\nvar messageParser = require('../message/message-parser');\nvar utils = require('../utils/utils');\n\n/**\n * This class represents a single record - an observable\n * dataset returned by client.record.getRecord()\n *\n * @extends {EventEmitter}\n *\n * @param {String} name              The unique name of the record\n * @param {Object} recordOptions     A map of options, e.g. { persist: true }\n * @param {Connection} Connection    The instance of the server connection\n * @param {Object} options        Deepstream options\n * @param {Client} client        deepstream.io client\n *\n * @constructor\n */\nvar Record = function Record(name, recordOptions, connection, options, client) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n\n  this.name = name;\n  this.usages = 0;\n  this._recordOptions = recordOptions;\n  this._connection = connection;\n  this._client = client;\n  this._options = options;\n  this.isReady = false;\n  this.isDestroyed = false;\n  this.hasProvider = false;\n  this._$data = Object.create(null);\n  this.version = null;\n  this._eventEmitter = new EventEmitter();\n  this._queuedMethodCalls = [];\n  this._writeCallbacks = {};\n\n  this._mergeStrategy = null;\n  if (options.mergeStrategy) {\n    this.setMergeStrategy(options.mergeStrategy);\n  }\n\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._resubscribeNotifier = new ResubscribeNotifier(this._client, this._sendRead.bind(this));\n\n  this._readAckTimeout = this._ackTimeoutRegistry.add({\n    topic: C.TOPIC.RECORD,\n    name: name,\n    action: C.ACTIONS.SUBSCRIBE,\n    timeout: this._options.recordReadAckTimeout\n  });\n  this._responseTimeout = this._ackTimeoutRegistry.add({\n    topic: C.TOPIC.RECORD,\n    name: name,\n    action: C.ACTIONS.READ,\n    event: C.EVENT.RESPONSE_TIMEOUT,\n    timeout: this._options.recordReadTimeout\n  });\n  this._sendRead();\n};\n\nEventEmitter(Record.prototype); // eslint-disable-line\n\n/**\n * Set a merge strategy to resolve any merge conflicts that may occur due\n * to offline work or write conflicts. The function will be called with the\n * local record, the remote version/data and a callback to call once the merge has\n * completed or if an error occurs ( which leaves it in an inconsistent state until\n * the next update merge attempt ).\n *\n * @param   {Function} mergeStrategy A Function that can resolve merge issues.\n *\n * @public\n * @returns {void}\n */\nRecord.prototype.setMergeStrategy = function (mergeStrategy) {\n  if (typeof mergeStrategy === 'function') {\n    this._mergeStrategy = mergeStrategy;\n  } else {\n    throw new Error('Invalid merge strategy: Must be a Function');\n  }\n};\n\n/**\n * Returns a copy of either the entire dataset of the record\n * or - if called with a path - the value of that path within\n * the record's dataset.\n *\n * Returning a copy rather than the actual value helps to prevent\n * the record getting out of sync due to unintentional changes to\n * its data\n *\n * @param   {[String]} path A JSON path, e.g. users[ 2 ].firstname\n *\n * @public\n * @returns {Mixed} value\n */\nRecord.prototype.get = function (path) {\n  return jsonPath.get(this._$data, path, this._options.recordDeepCopy);\n};\n\n/**\n * Sets the value of either the entire dataset\n * or of a specific path within the record\n * and submits the changes to the server\n *\n * If the new data is equal to the current data, nothing will happen\n *\n * @param {[String|Object]} pathOrData Either a JSON path when called with\n *                                     two arguments or the data itself\n * @param {Object} data     The data that should be stored in the record\n *\n * @public\n * @returns {void}\n */\nRecord.prototype.set = function (pathOrData, dataOrCallback, callback) {\n  var path = void 0;\n  var data = void 0;\n  if (arguments.length === 1) {\n    // set( object )\n    if ((typeof pathOrData === 'undefined' ? 'undefined' : _typeof(pathOrData)) !== 'object') {\n      throw new Error('invalid argument data');\n    }\n    data = pathOrData;\n  } else if (arguments.length === 2) {\n    if (typeof pathOrData === 'string' && pathOrData.length !== 0 && typeof dataOrCallback !== 'function') {\n      // set( path, data )\n      path = pathOrData;\n      data = dataOrCallback;\n    } else if ((typeof pathOrData === 'undefined' ? 'undefined' : _typeof(pathOrData)) === 'object' && typeof dataOrCallback === 'function') {\n      // set( data, callback )\n      data = pathOrData;\n      callback = dataOrCallback; // eslint-disable-line\n    } else {\n      throw new Error('invalid argument path');\n    }\n  } else if (arguments.length === 3) {\n    // set( path, data, callback )\n    if (typeof pathOrData !== 'string' || pathOrData.length === 0 || typeof callback !== 'function') {\n      throw new Error('invalid arguments, must pass in a string, a value and a function');\n    }\n    path = pathOrData;\n    data = dataOrCallback;\n  }\n\n  if (!path && (data === null || (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object')) {\n    throw new Error('invalid arguments, scalar values cannot be set without path');\n  }\n\n  if (this._checkDestroyed('set')) {\n    return this;\n  }\n\n  if (!this.isReady) {\n    this._queuedMethodCalls.push({ method: 'set', args: arguments });\n    return this;\n  }\n\n  var oldValue = this._$data;\n  var newValue = jsonPath.set(oldValue, path, data, this._options.recordDeepCopy);\n\n  if (oldValue === newValue) {\n    if (typeof callback === 'function') {\n      var errorMessage = null;\n      if (!utils.isConnected(this._client)) {\n        errorMessage = 'Connection error: error updating record as connection was closed';\n      }\n      utils.requestIdleCallback(function () {\n        return callback(errorMessage);\n      });\n    }\n    return this;\n  }\n\n  var config = void 0;\n  if (typeof callback === 'function') {\n    config = {};\n    config.writeSuccess = true;\n    if (!utils.isConnected(this._client)) {\n      utils.requestIdleCallback(function () {\n        return callback('Connection error: error updating record as connection was closed');\n      });\n    } else {\n      this._setUpCallback(this.version, callback);\n    }\n  }\n  this._sendUpdate(path, data, config);\n  this._applyChange(newValue);\n  return this;\n};\n\n/**\n * Subscribes to changes to the records dataset.\n *\n * Callback is the only mandatory argument.\n *\n * When called with a path, it will only subscribe to updates\n * to that path, rather than the entire record\n *\n * If called with true for triggerNow, the callback will\n * be called immediatly with the current value\n *\n * @param   {[String]}    path      A JSON path within the record to subscribe to\n * @param   {Function}    callback         Callback function to notify on changes\n * @param   {[Boolean]}   triggerNow      A flag to specify whether the callback should\n *                                         be invoked immediatly with the current value\n *\n * @public\n * @returns {void}\n */\n// eslint-disable-next-line\nRecord.prototype.subscribe = function (path, callback, triggerNow) {\n  var _this = this;\n\n  var args = this._normalizeArguments(arguments);\n\n  if (args.path !== undefined && (typeof args.path !== 'string' || args.path.length === 0)) {\n    throw new Error('invalid argument path');\n  }\n  if (typeof args.callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  if (this._checkDestroyed('subscribe')) {\n    return;\n  }\n\n  if (args.triggerNow) {\n    this.whenReady(function () {\n      _this._eventEmitter.on(args.path, args.callback);\n      args.callback(_this.get(args.path));\n    });\n  } else {\n    this._eventEmitter.on(args.path, args.callback);\n  }\n};\n\n/**\n * Removes a subscription that was previously made using record.subscribe()\n *\n * Can be called with a path to remove the callback for this specific\n * path or only with a callback which removes it from the generic subscriptions\n *\n * Please Note: unsubscribe is a purely client side operation. If the app is no longer\n * interested in receiving updates for this record from the server it needs to call\n * discard instead\n *\n * @param   {[String|Function]}   pathOrCallback A JSON path\n * @param   {Function}         callback     The callback method. Please note, if a bound\n *                                          method was passed to subscribe, the same method\n *                                          must be passed to unsubscribe as well.\n *\n * @public\n * @returns {void}\n */\n// eslint-disable-next-line\nRecord.prototype.unsubscribe = function (pathOrCallback, callback) {\n  var args = this._normalizeArguments(arguments);\n\n  if (args.path !== undefined && (typeof args.path !== 'string' || args.path.length === 0)) {\n    throw new Error('invalid argument path');\n  }\n  if (args.callback !== undefined && typeof args.callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  if (this._checkDestroyed('unsubscribe')) {\n    return;\n  }\n  this._eventEmitter.off(args.path, args.callback);\n};\n\n/**\n * Removes all change listeners and notifies the server that the client is\n * no longer interested in updates for this record\n *\n * @public\n * @returns {void}\n */\nRecord.prototype.discard = function () {\n  var _this2 = this;\n\n  if (this._checkDestroyed('discard')) {\n    return;\n  }\n  this.whenReady(function () {\n    _this2.usages--;\n    if (_this2.usages <= 0) {\n      _this2.emit('destroyPending');\n      _this2._discardTimeout = _this2._ackTimeoutRegistry.add({\n        topic: C.TOPIC.RECORD,\n        name: _this2.name,\n        action: C.ACTIONS.UNSUBSCRIBE\n      });\n      _this2._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.UNSUBSCRIBE, [_this2.name]);\n    }\n  });\n};\n\n/**\n * Deletes the record on the server.\n *\n * @public\n * @returns {void}\n */\nRecord.prototype.delete = function () {\n  var _this3 = this;\n\n  if (this._checkDestroyed('delete')) {\n    return;\n  }\n  this.whenReady(function () {\n    _this3.emit('destroyPending');\n    _this3._deleteAckTimeout = _this3._ackTimeoutRegistry.add({\n      topic: C.TOPIC.RECORD,\n      name: _this3.name,\n      action: C.ACTIONS.DELETE,\n      event: C.EVENT.DELETE_TIMEOUT,\n      timeout: _this3._options.recordDeleteTimeout\n    });\n    _this3._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.DELETE, [_this3.name]);\n  });\n};\n\n/**\n * Convenience method, similar to promises. Executes callback\n * whenever the record is ready, either immediatly or once the ready\n * event is fired\n *\n * @param   {Function} callback Will be called when the record is ready\n *\n * @returns {void}\n */\nRecord.prototype.whenReady = function (callback) {\n  if (this.isReady === true) {\n    callback(this);\n  } else {\n    this.once('ready', callback.bind(this, this));\n  }\n};\n\n/**\n * Callback for incoming messages from the message handler\n *\n * @param   {Object} message parsed and validated deepstream message\n *\n * @package private\n * @returns {void}\n */\nRecord.prototype._$onMessage = function (message) {\n  if (message.action === C.ACTIONS.READ) {\n    if (this.version === null) {\n      this._ackTimeoutRegistry.clear(message);\n      this._onRead(message);\n    } else {\n      this._applyUpdate(message, this._client);\n    }\n  } else if (message.action === C.ACTIONS.ACK) {\n    this._processAckMessage(message);\n  } else if (message.action === C.ACTIONS.UPDATE || message.action === C.ACTIONS.PATCH) {\n    this._applyUpdate(message, this._client);\n  } else if (message.action === C.ACTIONS.WRITE_ACKNOWLEDGEMENT) {\n    Record._handleWriteAcknowledgements(message, this._writeCallbacks, this._client);\n  } else if (message.data[0] === C.EVENT.VERSION_EXISTS) {\n    // Otherwise it should be an error, and dealt with accordingly\n    this._recoverRecord(message.data[2], JSON.parse(message.data[3]), message);\n  } else if (message.data[0] === C.EVENT.MESSAGE_DENIED) {\n    this._clearTimeouts();\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_HAS_PROVIDER) {\n    var hasProvider = messageParser.convertTyped(message.data[1], this._client);\n    this.hasProvider = hasProvider;\n    this.emit('hasProviderChanged', hasProvider);\n  }\n};\n\nRecord._handleWriteAcknowledgements = function (message, callbacks, client) {\n  var versions = JSON.parse(message.data[1]);\n  for (var i = 0; i < versions.length; i++) {\n    var callback = callbacks[versions[i]];\n    if (callback !== undefined) {\n      callback(messageParser.convertTyped(message.data[2], client));\n      delete callbacks[versions[i]];\n    }\n  }\n};\n\n/**\n * Called when a merge conflict is detected by a VERSION_EXISTS error or if an update recieved\n * is directly after the clients. If no merge strategy is configure it will emit a VERSION_EXISTS\n * error and the record will remain in an inconsistent state.\n *\n * @param   {Number} remoteVersion The remote version number\n * @param   {Object} remoteData The remote object data\n * @param   {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._recoverRecord = function (remoteVersion, remoteData, message) {\n  message.processedError = true;\n  if (this._mergeStrategy) {\n    this._mergeStrategy(this, remoteData, remoteVersion, this._onRecordRecovered.bind(this, remoteVersion, remoteData, message));\n  } else {\n    this.emit('error', C.EVENT.VERSION_EXISTS, 'received update for ' + remoteVersion + ' but version is ' + this.version);\n  }\n};\n\nRecord.prototype._sendUpdate = function (path, data, config) {\n  this.version++;\n  var msgData = void 0;\n  if (!path) {\n    msgData = config === undefined ? [this.name, this.version, data] : [this.name, this.version, data, config];\n    this._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.UPDATE, msgData);\n  } else {\n    msgData = config === undefined ? [this.name, this.version, path, messageBuilder.typed(data)] : [this.name, this.version, path, messageBuilder.typed(data), config];\n    this._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.PATCH, msgData);\n  }\n};\n\n/**\n * Callback once the record merge has completed. If successful it will set the\n * record state, else emit and error and the record will remain in an\n * inconsistent state until the next update.\n *\n * @param   {Number} remoteVersion The remote version number\n * @param   {Object} remoteData The remote object data\n * @param   {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._onRecordRecovered = function (remoteVersion, remoteData, message, error, data) {\n  if (!error) {\n    var oldVersion = this.version;\n    this.version = remoteVersion;\n\n    var oldValue = this._$data;\n\n    if (utils.deepEquals(oldValue, remoteData)) {\n      return;\n    }\n\n    var newValue = jsonPath.set(oldValue, undefined, data, false);\n\n    if (utils.deepEquals(data, remoteData)) {\n      this._applyChange(data);\n\n      var callback = this._writeCallbacks[remoteVersion];\n      if (callback !== undefined) {\n        callback(null);\n        delete this._writeCallbacks[remoteVersion];\n      }\n      return;\n    }\n\n    var config = message.data[4];\n    if (config && JSON.parse(config).writeSuccess) {\n      var _callback = this._writeCallbacks[oldVersion];\n      delete this._writeCallbacks[oldVersion];\n      this._setUpCallback(this.version, _callback);\n    }\n    this._sendUpdate(undefined, data, config);\n    this._applyChange(newValue);\n  } else {\n    this.emit('error', C.EVENT.VERSION_EXISTS, 'received update for ' + remoteVersion + ' but version is ' + this.version);\n  }\n};\n\n/**\n * Callback for ack-messages. Acks can be received for\n * subscriptions, discards and deletes\n *\n * @param   {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._processAckMessage = function (message) {\n  var acknowledgedAction = message.data[0];\n\n  if (acknowledgedAction === C.ACTIONS.SUBSCRIBE) {\n    this._ackTimeoutRegistry.clear(message);\n  } else if (acknowledgedAction === C.ACTIONS.DELETE) {\n    this.emit('delete');\n    this._destroy();\n  } else if (acknowledgedAction === C.ACTIONS.UNSUBSCRIBE) {\n    this.emit('discard');\n    this._destroy();\n  }\n};\n\n/**\n * Applies incoming updates and patches to the record's dataset\n *\n * @param   {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._applyUpdate = function (message) {\n  var version = parseInt(message.data[1], 10);\n  var data = void 0;\n  if (message.action === C.ACTIONS.PATCH) {\n    data = messageParser.convertTyped(message.data[3], this._client);\n  } else {\n    data = JSON.parse(message.data[2]);\n  }\n\n  if (this.version === null) {\n    this.version = version;\n  } else if (this.version + 1 !== version) {\n    if (message.action === C.ACTIONS.PATCH) {\n      /**\n      * Request a snapshot so that a merge can be done with the read reply which contains\n      * the full state of the record\n      **/\n      this._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.SNAPSHOT, [this.name]);\n    } else {\n      this._recoverRecord(version, data, message);\n    }\n    return;\n  }\n\n  this.version = version;\n  this._applyChange(jsonPath.set(this._$data, message.action === C.ACTIONS.PATCH ? message.data[2] : undefined, data));\n};\n\n/**\n * Callback for incoming read messages\n *\n * @param   {Object} message parsed and validated deepstream message\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._onRead = function (message) {\n  this.version = parseInt(message.data[1], 10);\n  this._applyChange(jsonPath.set(this._$data, undefined, JSON.parse(message.data[2])));\n  this._setReady();\n};\n\n/**\n * Invokes method calls that where queued while the record wasn't ready\n * and emits the ready event\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._setReady = function () {\n  this.isReady = true;\n  for (var i = 0; i < this._queuedMethodCalls.length; i++) {\n    this[this._queuedMethodCalls[i].method].apply(this, this._queuedMethodCalls[i].args);\n  }\n  this._queuedMethodCalls = [];\n  this.emit('ready');\n};\n\nRecord.prototype._setUpCallback = function (currentVersion, callback) {\n  var newVersion = Number(this.version) + 1;\n  this._writeCallbacks[newVersion] = callback;\n};\n\n/**\n * Sends the read message, either initially at record\n * creation or after a lost connection has been re-established\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._sendRead = function () {\n  this._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.CREATEORREAD, [this.name]);\n};\n\n/**\n * Compares the new values for every path with the previously stored ones and\n * updates the subscribers if the value has changed\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._applyChange = function (newData) {\n  if (this.isDestroyed) {\n    return;\n  }\n\n  var oldData = this._$data;\n  this._$data = newData;\n\n  var paths = this._eventEmitter.eventNames();\n  for (var i = 0; i < paths.length; i++) {\n    var newValue = jsonPath.get(newData, paths[i], false);\n    var oldValue = jsonPath.get(oldData, paths[i], false);\n\n    if (newValue !== oldValue) {\n      this._eventEmitter.emit(paths[i], this.get(paths[i]));\n    }\n  }\n};\n\n/**\n * Creates a map based on the types of the provided arguments\n *\n * @param {Arguments} args\n *\n * @private\n * @returns {Object} arguments map\n */\nRecord.prototype._normalizeArguments = function (args) {\n  // If arguments is already a map of normalized parameters\n  // (e.g. when called by AnonymousRecord), just return it.\n  if (args.length === 1 && _typeof(args[0]) === 'object') {\n    return args[0];\n  }\n\n  var result = Object.create(null);\n\n  for (var i = 0; i < args.length; i++) {\n    if (typeof args[i] === 'string') {\n      result.path = args[i];\n    } else if (typeof args[i] === 'function') {\n      result.callback = args[i];\n    } else if (typeof args[i] === 'boolean') {\n      result.triggerNow = args[i];\n    }\n  }\n\n  return result;\n};\n\n/**\n * Clears all timeouts that are set when the record is created\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._clearTimeouts = function () {\n  this._ackTimeoutRegistry.remove({ ackId: this._readAckTimeout, silent: true });\n  this._ackTimeoutRegistry.remove({ ackId: this._responseTimeout, silent: true });\n  this._ackTimeoutRegistry.remove({ ackId: this._deleteAckTimeout, silent: true });\n  this._ackTimeoutRegistry.remove({ ackId: this._discardTimeout, silent: true });\n};\n\n/**\n * A quick check that's carried out by most methods that interact with the record\n * to make sure it hasn't been destroyed yet - and to handle it gracefully if it has.\n *\n * @param   {String} methodName The name of the method that invoked this check\n *\n * @private\n * @returns {Boolean} is destroyed\n */\nRecord.prototype._checkDestroyed = function (methodName) {\n  if (this.isDestroyed) {\n    this.emit('error', 'Can\\'t invoke \\'' + methodName + '\\'. Record \\'' + this.name + '\\' is already destroyed');\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Destroys the record and nulls all\n * its dependencies\n *\n * @private\n * @returns {void}\n */\nRecord.prototype._destroy = function () {\n  this._clearTimeouts();\n  this._eventEmitter.off();\n  this._resubscribeNotifier.destroy();\n  this.isDestroyed = true;\n  this.isReady = false;\n  this._client = null;\n  this._eventEmitter = null;\n  this._connection = null;\n};\n\nmodule.exports = Record;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/record/record.js\n// module id = QRzD\n// module chunks = 1 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url/url.js\n// module id = UZ5h\n// module chunks = 1 2","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar Record = require('./record');\nvar AnonymousRecord = require('./anonymous-record');\nvar List = require('./list');\nvar Listener = require('../utils/listener');\nvar SingleNotifier = require('../utils/single-notifier');\nvar C = require('../constants/constants');\nvar messageParser = require('../message/message-parser');\nvar messageBuilder = require('../message/message-builder');\nvar EventEmitter = require('component-emitter2');\n\n/**\n * A collection of factories for records. This class\n * is exposed as client.record\n *\n * @param {Object} options    deepstream options\n * @param {Connection} connection\n * @param {Client} client\n */\nvar RecordHandler = function RecordHandler(options, connection, client) {\n  this._options = options;\n  this._connection = connection;\n  this._client = client;\n  this._records = {};\n  this._lists = {};\n  this._listener = {};\n  this._writeCallbacks = {};\n  this._destroyEventEmitter = new EventEmitter();\n\n  this._hasRegistry = new SingleNotifier(client, connection, C.TOPIC.RECORD, C.ACTIONS.HAS, this._options.recordReadTimeout);\n  this._snapshotRegistry = new SingleNotifier(client, connection, C.TOPIC.RECORD, C.ACTIONS.SNAPSHOT, this._options.recordReadTimeout);\n};\n\n/**\n * Returns an existing record or creates a new one.\n *\n * @param   {String} name              the unique name of the record\n * @param   {[Object]} recordOptions   A map of parameters for this particular record.\n *                                      { persist: true }\n *\n * @public\n * @returns {Record}\n */\nRecordHandler.prototype.getRecord = function (name, recordOptions) {\n  if (!this._records[name]) {\n    this._records[name] = new Record(name, recordOptions || {}, this._connection, this._options, this._client);\n    this._records[name].on('error', this._onRecordError.bind(this, name));\n    this._records[name].on('destroyPending', this._onDestroyPending.bind(this, name));\n    this._records[name].on('delete', this._removeRecord.bind(this, name));\n    this._records[name].on('discard', this._removeRecord.bind(this, name));\n  }\n\n  this._records[name].usages++;\n\n  return this._records[name];\n};\n\n/**\n * Returns an existing List or creates a new one. A list is a specialised\n * type of record that holds an array of recordNames.\n *\n * @param   {String} name       the unique name of the list\n * @param   {[Object]} options   A map of parameters for this particular list.\n *                              { persist: true }\n *\n * @public\n * @returns {List}\n */\nRecordHandler.prototype.getList = function (name, options) {\n  if (!this._lists[name]) {\n    this._lists[name] = new List(this, name, options);\n  } else {\n    this._records[name].usages++;\n  }\n  return this._lists[name];\n};\n\n/**\n * Returns an anonymous record. A anonymous record is effectively\n * a wrapper that mimicks the API of a record, but allows for the\n * underlying record to be swapped without loosing subscriptions etc.\n *\n * This is particularly useful when selecting from a number of similarly\n * structured records. E.g. a list of users that can be choosen from a list\n *\n * The only API difference to a normal record is an additional setName( name ) method.\n *\n *\n * @public\n * @returns {AnonymousRecord}\n */\nRecordHandler.prototype.getAnonymousRecord = function () {\n  return new AnonymousRecord(this);\n};\n\n/**\n * Allows to listen for record subscriptions made by this or other clients. This\n * is useful to create \"active\" data providers, e.g. providers that only provide\n * data for a particular record if a user is actually interested in it\n *\n * @param   {String}   pattern  A combination of alpha numeric characters and wildcards( * )\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nRecordHandler.prototype.listen = function (pattern, callback) {\n  if (typeof pattern !== 'string' || pattern.length === 0) {\n    throw new Error('invalid argument pattern');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  if (this._listener[pattern] && !this._listener[pattern].destroyPending) {\n    this._client._$onError(C.TOPIC.RECORD, C.EVENT.LISTENER_EXISTS, pattern);\n    return;\n  }\n\n  if (this._listener[pattern]) {\n    this._listener[pattern].destroy();\n  }\n\n  this._listener[pattern] = new Listener(C.TOPIC.RECORD, pattern, callback, this._options, this._client, this._connection);\n};\n\n/**\n * Removes a listener that was previously registered with listenForSubscriptions\n *\n * @param   {String}   pattern  A combination of alpha numeric characters and wildcards( * )\n * @param   {Function} callback\n *\n * @public\n * @returns {void}\n */\nRecordHandler.prototype.unlisten = function (pattern) {\n  if (typeof pattern !== 'string' || pattern.length === 0) {\n    throw new Error('invalid argument pattern');\n  }\n\n  var listener = this._listener[pattern];\n  if (listener && !listener.destroyPending) {\n    listener.sendDestroy();\n  } else if (this._listener[pattern]) {\n    this._listener[pattern].destroy();\n    delete this._listener[pattern];\n  } else {\n    this._client._$onError(C.TOPIC.RECORD, C.EVENT.NOT_LISTENING, pattern);\n  }\n};\n\n/**\n * Retrieve the current record data without subscribing to changes\n *\n * @param   {String}  name the unique name of the record\n * @param   {Function}  callback\n *\n * @public\n */\nRecordHandler.prototype.snapshot = function (name, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument: name');\n  }\n\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument: callback');\n  }\n\n  if (this._records[name] && this._records[name].isReady) {\n    callback(null, this._records[name].get());\n  } else {\n    this._snapshotRegistry.request(name, callback);\n  }\n};\n\n/**\n * Allows the user to query to see whether or not the record exists.\n *\n * @param   {String}  name the unique name of the record\n * @param   {Function}  callback\n *\n * @public\n */\nRecordHandler.prototype.has = function (name, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument: name');\n  }\n\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument: callback');\n  }\n\n  if (this._records[name]) {\n    callback(null, true);\n  } else {\n    this._hasRegistry.request(name, callback);\n  }\n};\n\n/**\n * Allows setting the data for a record without being subscribed to it. If\n * the client is subscribed to the record locally, the update will be proxied\n * through the record object like a normal call to Record.set. Otherwise a force\n * write will be performed that overwrites any remote data.\n *\n * @param {String} recordName the name of the record to write to\n * @param {String|Object} pathOrData either the path to write data to or the data to\n *                                   set the record to\n * @param {Object|Primitive|Function} dataOrCallback either the data to write to the\n *                                                   record or a callback function\n *                                                   indicating write success\n * @param {Function} callback if provided this will be called with the result of the\n *                            write\n */\nRecordHandler.prototype.setData = function (recordName, pathOrData, dataOrCallback, callback) {\n  var path = void 0;\n  var data = void 0;\n  var cb = void 0;\n\n  if (arguments.length === 4) {\n    // setData(recordName, path, data, cb)\n    path = pathOrData;\n    data = dataOrCallback;\n    cb = callback;\n  } else if (arguments.length === 3) {\n    if (typeof dataOrCallback !== 'function') {\n      // setData(recordName, path, data)\n      path = pathOrData;\n      data = dataOrCallback;\n    } else {\n      // setData(recordName, data, callback)\n      path = null;\n      data = pathOrData;\n      cb = dataOrCallback;\n    }\n  } else if (arguments.length === 2) {\n    // setData(recordName, data)\n    data = pathOrData;\n  }\n\n  if (typeof recordName !== 'string' || recordName.length === 0) {\n    throw new Error('invalid argument: recordName');\n  }\n\n  if (callback && typeof callback !== 'function') {\n    throw new Error('invalid argument: callback');\n  }\n\n  if (path && (typeof path !== 'string' || path.length === 0)) {\n    throw new Error('invalid argument: path');\n  }\n\n  if (!path && (data === null || (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object')) {\n    throw new Error('invalid argument: data must be an object when no path is provided');\n  }\n\n  var record = this._records[recordName];\n  if (record) {\n    if (path && cb) {\n      record.set(path, data, cb);\n    } else if (path) {\n      record.set(path, data);\n    } else if (cb) {\n      record.set(data, cb);\n    } else {\n      record.set(data);\n    }\n  } else {\n    var recordData = path ? [recordName, -1, path, messageBuilder.typed(data)] : [recordName, -1, data];\n    var config = {};\n    if (cb) {\n      config.writeSuccess = true;\n      this._writeCallbacks[recordName] = {};\n      this._writeCallbacks[recordName][-1] = cb;\n    }\n    recordData.push(config);\n    this._connection.sendMsg(C.TOPIC.RECORD, C.ACTIONS.CREATEANDUPDATE, recordData);\n  }\n};\n\n/**\n * Will be called by the client for incoming messages on the RECORD topic\n *\n * @param   {Object} message parsed and validated deepstream message\n *\n * @package private\n * @returns {void}\n */\nRecordHandler.prototype._$handle = function (message) {\n  var name = void 0;\n\n  if (message.action === C.ACTIONS.ERROR && message.data[0] !== C.EVENT.VERSION_EXISTS && message.data[0] !== C.ACTIONS.SNAPSHOT && message.data[0] !== C.ACTIONS.HAS && message.data[0] !== C.EVENT.MESSAGE_DENIED) {\n    message.processedError = true;\n    this._client._$onError(C.TOPIC.RECORD, message.data[0], message.data[1]);\n    return;\n  }\n\n  if (message.action === C.ACTIONS.ACK || message.action === C.ACTIONS.ERROR) {\n    name = message.data[1];\n\n    /*\n     * The following prevents errors that occur when a record is discarded or deleted and\n     * recreated before the discard / delete ack message is received.\n     *\n     * A (presumably unsolvable) problem remains when a client deletes a record in the exact moment\n     * between another clients creation and read message for the same record\n     */\n    if (message.data[0] === C.ACTIONS.DELETE || message.data[0] === C.ACTIONS.UNSUBSCRIBE || message.data[0] === C.EVENT.MESSAGE_DENIED && message.data[2] === C.ACTIONS.DELETE) {\n      this._destroyEventEmitter.emit('destroy_ack_' + name, message);\n\n      if (message.data[0] === C.ACTIONS.DELETE && this._records[name]) {\n        this._records[name]._$onMessage(message);\n      }\n\n      return;\n    }\n\n    if (message.data[0] === C.ACTIONS.SNAPSHOT) {\n      message.processedError = true;\n      this._snapshotRegistry.recieve(name, message.data[2]);\n      return;\n    }\n\n    if (message.data[0] === C.ACTIONS.HAS) {\n      message.processedError = true;\n      this._snapshotRegistry.recieve(name, message.data[2]);\n      return;\n    }\n  } else {\n    name = message.data[0];\n  }\n\n  var processed = false;\n\n  var record = this._records[name];\n  if (record) {\n    processed = true;\n    record._$onMessage(message);\n  }\n\n  if (message.action === C.ACTIONS.READ && this._snapshotRegistry.hasRequest(name)) {\n    processed = true;\n    this._snapshotRegistry.recieve(name, null, JSON.parse(message.data[2]));\n  } else if (message.action === C.ACTIONS.HAS && this._hasRegistry.hasRequest(name)) {\n    processed = true;\n    this._hasRegistry.recieve(name, null, messageParser.convertTyped(message.data[1]));\n  } else if (message.action === C.ACTIONS.WRITE_ACKNOWLEDGEMENT && !record) {\n    processed = true;\n    Record._handleWriteAcknowledgements(message, this._writeCallbacks[name], this._client);\n  } else if (message.action === C.ACTIONS.ACK && message.data[0] === C.ACTIONS.UNLISTEN && this._listener[name] && this._listener[name].destroyPending) {\n    processed = true;\n    this._listener[name].destroy();\n    delete this._listener[name];\n  } else if (this._listener[name]) {\n    processed = true;\n    this._listener[name]._$onMessage(message);\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_FOR_PATTERN_REMOVED) {\n    // An unlisten ACK was received before an PATTERN_REMOVED which is a valid case\n    processed = true;\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_HAS_PROVIDER) {\n    // record can receive a HAS_PROVIDER after discarding the record\n    processed = true;\n  }\n\n  if (!processed) {\n    message.processedError = true;\n    this._client._$onError(C.TOPIC.RECORD, C.EVENT.UNSOLICITED_MESSAGE, name);\n  }\n};\n\n/**\n * Callback for 'error' events from the record.\n *\n * @param   {String} recordName\n * @param   {String} error\n *\n * @private\n * @returns {void}\n */\nRecordHandler.prototype._onRecordError = function (recordName, error) {\n  this._client._$onError(C.TOPIC.RECORD, error, recordName);\n};\n\n/**\n * When the client calls discard or delete on a record, there is a short delay\n * before the corresponding ACK message is received from the server. To avoid\n * race conditions if the record is re-requested straight away the old record is\n * removed from the cache straight awy and will only listen for one last ACK message\n *\n * @param   {String} recordName The name of the record that was just deleted / discarded\n *\n * @private\n * @returns {void}\n */\nRecordHandler.prototype._onDestroyPending = function (recordName) {\n  if (!this._records[recordName]) {\n    this._client._$onError(C.TOPIC.RECORD, 'Record attempted to be destroyed but does not exists', recordName);\n    return;\n  }\n  var onMessage = this._records[recordName]._$onMessage.bind(this._records[recordName]);\n  this._destroyEventEmitter.once('destroy_ack_' + recordName, onMessage);\n  this._removeRecord(recordName);\n};\n\n/**\n * Callback for 'deleted' and 'discard' events from a record. Removes the record from\n * the registry\n *\n * @param   {String} recordName\n *\n * @returns {void}\n */\nRecordHandler.prototype._removeRecord = function (recordName) {\n  delete this._records[recordName];\n  delete this._lists[recordName];\n};\n\nmodule.exports = RecordHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/record/record-handler.js\n// module id = W+n7\n// module chunks = 1 2","'use strict';\n\nvar C = require('../constants/constants');\nvar ResubscribeNotifier = require('../utils/resubscribe-notifier');\nvar RpcResponse = require('./rpc-response');\nvar Rpc = require('./rpc');\nvar messageParser = require('../message/message-parser');\nvar messageBuilder = require('../message/message-builder');\n\n/**\n * The main class for remote procedure calls\n *\n * Provides the rpc interface and handles incoming messages\n * on the rpc topic\n *\n * @param {Object} options deepstream configuration options\n * @param {Connection} connection\n * @param {Client} client\n *\n * @constructor\n * @public\n */\nvar RpcHandler = function RpcHandler(options, connection, client) {\n  this._options = options;\n  this._connection = connection;\n  this._client = client;\n  this._rpcs = {};\n  this._providers = {};\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._resubscribeNotifier = new ResubscribeNotifier(this._client, this._reprovide.bind(this));\n};\n\n/**\n * Registers a callback function as a RPC provider. If another connected client calls\n * client.rpc.make() the request will be routed to this method\n *\n * The callback will be invoked with two arguments:\n *     {Mixed} data The data passed to the client.rpc.make function\n *     {RpcResponse} rpcResponse An object with methods to response,\n *                               acknowledge or reject the request\n *\n * Only one callback can be registered for a RPC at a time\n *\n * Please note: Deepstream tries to deliver data in its original format.\n * Data passed to client.rpc.make as a String will arrive as a String,\n * numbers or implicitly JSON serialized objects will arrive in their\n * respective format as well\n *\n * @public\n * @returns void\n */\nRpcHandler.prototype.provide = function (name, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n  if (this._providers[name]) {\n    throw new Error('RPC ' + name + ' already registered');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  this._ackTimeoutRegistry.add({\n    topic: C.TOPIC.RPC,\n    name: name,\n    action: C.ACTIONS.SUBSCRIBE\n  });\n  this._providers[name] = callback;\n  this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.SUBSCRIBE, [name]);\n};\n\n/**\n * Unregisters this client as a provider for a remote procedure call\n *\n * @param   {String} name the name of the rpc\n *\n * @public\n * @returns {void}\n */\nRpcHandler.prototype.unprovide = function (name) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n\n  if (this._providers[name]) {\n    delete this._providers[name];\n    this._ackTimeoutRegistry.add({\n      topic: C.TOPIC.RPC,\n      name: name,\n      action: C.ACTIONS.UNSUBSCRIBE\n    });\n    this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.UNSUBSCRIBE, [name]);\n  }\n};\n\n/**\n * Executes the actual remote procedure call\n *\n * @param   {String}   name     The name of the rpc\n * @param   {Mixed}    data     Serializable data that will be passed to the provider\n * @param   {Function} callback Will be invoked with the returned result or if the rpc failed\n *                              receives to arguments: error or null and the result\n *\n * @public\n * @returns {void}\n */\nRpcHandler.prototype.make = function (name, data, callback) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  var uid = this._client.getUid();\n  var typedData = messageBuilder.typed(data);\n\n  this._rpcs[uid] = new Rpc(name, callback, this._options, this._client);\n  this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.REQUEST, [name, uid, typedData]);\n};\n\n/**\n * Retrieves a RPC instance for a correlationId or throws an error\n * if it can't be found (which should never happen)\n *\n * @param {String} correlationId\n * @param {String} rpcName\n *\n * @private\n * @returns {Rpc}\n */\nRpcHandler.prototype._getRpc = function (correlationId, rpcName, rawMessage) {\n  var rpc = this._rpcs[correlationId];\n\n  if (!rpc) {\n    this._client._$onError(C.TOPIC.RPC, C.EVENT.UNSOLICITED_MESSAGE, rawMessage);\n    return null;\n  }\n\n  return rpc;\n};\n\n/**\n * Handles incoming rpc REQUEST messages. Instantiates a new response object\n * and invokes the provider callback or rejects the request if no rpc provider\n * is present (which shouldn't really happen, but might be the result of a race condition\n * if this client sends a unprovide message whilst an incoming request is already in flight)\n *\n * @param   {Object} message The parsed deepstream RPC request message.\n *\n * @private\n * @returns {void}\n */\nRpcHandler.prototype._respondToRpc = function (message) {\n  var name = message.data[0];\n  var correlationId = message.data[1];\n  var data = null;\n  var response = void 0;\n\n  if (message.data[2]) {\n    data = messageParser.convertTyped(message.data[2], this._client);\n  }\n\n  if (this._providers[name]) {\n    response = new RpcResponse(this._connection, name, correlationId);\n    this._providers[name](data, response);\n  } else {\n    this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.REJECTION, [name, correlationId]);\n  }\n};\n\n/**\n * Distributes incoming messages from the server\n * based on their action\n *\n * @param   {Object} message A parsed deepstream message\n *\n * @private\n * @returns {void}\n */\nRpcHandler.prototype._$handle = function (message) {\n  var rpcName = void 0;\n  var correlationId = void 0;\n\n  // RPC Requests\n  if (message.action === C.ACTIONS.REQUEST) {\n    this._respondToRpc(message);\n    return;\n  }\n\n  // RPC subscription Acks\n  if (message.action === C.ACTIONS.ACK && (message.data[0] === C.ACTIONS.SUBSCRIBE || message.data[0] === C.ACTIONS.UNSUBSCRIBE)) {\n    this._ackTimeoutRegistry.clear(message);\n    return;\n  }\n\n  // handle auth/denied subscription errors\n  if (message.action === C.ACTIONS.ERROR) {\n    if (message.data[0] === C.EVENT.MESSAGE_PERMISSION_ERROR) {\n      return;\n    }\n    if (message.data[0] === C.EVENT.MESSAGE_DENIED && message.data[2] === C.ACTIONS.SUBSCRIBE) {\n      this._ackTimeoutRegistry.remove({\n        topic: C.TOPIC.RPC,\n        action: C.ACTIONS.SUBSCRIBE,\n        name: message.data[1]\n      });\n      return;\n    }\n  }\n\n  /*\n   * Error messages always have the error as first parameter. So the\n   * order is different to ack and response messages\n   */\n  if (message.action === C.ACTIONS.ERROR || message.action === C.ACTIONS.ACK) {\n    if (message.data[0] === C.EVENT.MESSAGE_DENIED && message.data[2] === C.ACTIONS.REQUEST) {\n      correlationId = message.data[3];\n    } else {\n      correlationId = message.data[2];\n    }\n    rpcName = message.data[1];\n  } else {\n    rpcName = message.data[0];\n    correlationId = message.data[1];\n  }\n\n  /*\n  * Retrieve the rpc object\n  */\n  var rpc = this._getRpc(correlationId, rpcName, message.raw);\n  if (rpc === null) {\n    return;\n  }\n\n  // RPC Responses\n  if (message.action === C.ACTIONS.ACK) {\n    rpc.ack();\n  } else if (message.action === C.ACTIONS.RESPONSE) {\n    rpc.respond(message.data[2]);\n    delete this._rpcs[correlationId];\n  } else if (message.action === C.ACTIONS.ERROR) {\n    message.processedError = true;\n    rpc.error(message.data[0]);\n    delete this._rpcs[correlationId];\n  }\n};\n\n/**\n * Reregister providers to events when connection is lost\n *\n * @package private\n * @returns {void}\n */\nRpcHandler.prototype._reprovide = function () {\n  for (var rpcName in this._providers) {\n    this._connection.sendMsg(C.TOPIC.RPC, C.ACTIONS.SUBSCRIBE, [rpcName]);\n  }\n};\n\nmodule.exports = RpcHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/rpc/rpc-handler.js\n// module id = affY\n// module chunks = 1 2","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/array/from.js\n// module id = c/Tr\n// module chunks = 1 2","'use strict';\n/* eslint-disable prefer-rest-params, prefer-spread */\n\nvar Record = require('./record');\nvar EventEmitter = require('component-emitter2');\n\n/**\n * An AnonymousRecord is a record without a predefined name. It\n * acts like a wrapper around an actual record that can\n * be swapped out for another one whilst keeping all bindings intact.\n *\n * Imagine a customer relationship management system with a list of users\n * on the left and a user detail panel on the right. The user detail\n * panel could use the anonymous record to set up its bindings, yet whenever\n * a user is chosen from the list of existing users the anonymous record's\n * setName method is called and the detail panel will update to\n * show the selected user's details\n *\n * @param {RecordHandler} recordHandler\n *\n * @constructor\n */\nvar AnonymousRecord = function AnonymousRecord(recordHandler) {\n  this.name = null;\n  this._recordHandler = recordHandler;\n  this._record = null;\n  this._subscriptions = [];\n  this._proxyMethod('delete');\n  this._proxyMethod('set');\n  this._proxyMethod('discard');\n};\n\nEventEmitter(AnonymousRecord.prototype); // eslint-disable-line\n\n/**\n * Proxies the actual record's get method. It is valid\n * to call get prior to setName - if no record exists,\n * the method returns undefined\n *\n * @param   {[String]} path A json path. If non is provided,\n *                          the entire record is returned.\n *\n * @public\n * @returns {mixed}    the value of path or the entire object\n */\nAnonymousRecord.prototype.get = function (path) {\n  if (this._record === null) {\n    return undefined;\n  }\n\n  return this._record.get(path);\n};\n\n/**\n * Proxies the actual record's subscribe method. The same parameters\n * can be used. Can be called prior to setName(). Please note, triggerIfReady\n * will always be set to true to reflect changes in the underlying record.\n *\n * @param   {[String]} path   A json path. If non is provided,\n *                              it subscribes to changes for the entire record.\n *\n * @param   {Function} callback A callback function that will be invoked whenever\n *                              the subscribed path or record updates\n *\n * @public\n * @returns {void}\n */\nAnonymousRecord.prototype.subscribe = function () {\n  var parameters = Record.prototype._normalizeArguments(arguments);\n  parameters.triggerNow = true;\n  this._subscriptions.push(parameters);\n\n  if (this._record !== null) {\n    this._record.subscribe(parameters);\n  }\n};\n\n/**\n * Proxies the actual record's unsubscribe method. The same parameters\n * can be used. Can be called prior to setName()\n *\n * @param   {[String]} path   A json path. If non is provided,\n *                              it subscribes to changes for the entire record.\n *\n * @param   {Function} callback A callback function that will be invoked whenever\n *                              the subscribed path or record updates\n *\n * @public\n * @returns {void}\n */\nAnonymousRecord.prototype.unsubscribe = function () {\n  var parameters = Record.prototype._normalizeArguments(arguments);\n  var subscriptions = [];\n  var i = void 0;\n\n  for (i = 0; i < this._subscriptions.length; i++) {\n    if (this._subscriptions[i].path !== parameters.path || this._subscriptions[i].callback !== parameters.callback) {\n      subscriptions.push(this._subscriptions[i]);\n    }\n  }\n\n  this._subscriptions = subscriptions;\n\n  if (this._record !== null) {\n    this._record.unsubscribe(parameters);\n  }\n};\n\n/**\n * Sets the underlying record the anonymous record is bound\n * to. Can be called multiple times.\n *\n * @param {String} recordName\n *\n * @public\n * @returns {void}\n */\nAnonymousRecord.prototype.setName = function (recordName) {\n  if (this.name === recordName) {\n    return;\n  }\n\n  this.name = recordName;\n\n  var i = void 0;\n\n  if (this._record !== null && !this._record.isDestroyed) {\n    for (i = 0; i < this._subscriptions.length; i++) {\n      this._record.unsubscribe(this._subscriptions[i]);\n    }\n    this._record.discard();\n  }\n\n  this._record = this._recordHandler.getRecord(recordName);\n\n  for (i = 0; i < this._subscriptions.length; i++) {\n    this._record.subscribe(this._subscriptions[i]);\n  }\n\n  this._record.whenReady(this.emit.bind(this, 'ready'));\n  this.emit('nameChanged', recordName);\n};\n\n/**\n * Adds the specified method to this method and forwards it\n * to _callMethodOnRecord\n *\n * @param   {String} methodName\n *\n * @private\n * @returns {void}\n */\nAnonymousRecord.prototype._proxyMethod = function (methodName) {\n  this[methodName] = this._callMethodOnRecord.bind(this, methodName);\n};\n\n/**\n * Invokes the specified method with the provided parameters on\n * the underlying record. Throws erros if the method is not\n * specified yet or doesn't expose the method in question\n *\n * @param   {String} methodName\n *\n * @private\n * @returns {Mixed} the return value of the actual method\n */\nAnonymousRecord.prototype._callMethodOnRecord = function (methodName) {\n  if (this._record === null) {\n    throw new Error('Can`t invoke ' + methodName + '. AnonymousRecord not initialised. Call setName first');\n  }\n\n  if (typeof this._record[methodName] !== 'function') {\n    throw new Error(methodName + ' is not a method on the record');\n  }\n\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  return this._record[methodName].apply(this._record, args);\n};\n\nmodule.exports = AnonymousRecord;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/record/anonymous-record.js\n// module id = dAKQ\n// module chunks = 1 2","'use strict';\n\nvar C = require('../constants/constants');\nvar ResubscribeNotifier = require('./resubscribe-notifier');\n\n/**\n * Provides a scaffold for subscriptionless requests to deepstream, such as the SNAPSHOT\n * and HAS functionality. The SingleNotifier multiplexes all the client requests so\n * that they can can be notified at once, and also includes reconnection funcionality\n * incase the connection drops.\n *\n * @param {Client} client          The deepstream client\n * @param {Connection} connection  The deepstream connection\n * @param {String} topic           Constant. One of C.TOPIC\n * @param {String} action          Constant. One of C.ACTIONS\n * @param {Number} timeoutDuration The duration of the timeout in milliseconds\n *\n * @constructor\n */\nvar SingleNotifier = function SingleNotifier(client, connection, topic, action, timeoutDuration) {\n  this._client = client;\n  this._connection = connection;\n  this._topic = topic;\n  this._action = action;\n  this._timeoutDuration = timeoutDuration;\n  this._requests = {};\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._resubscribeNotifier = new ResubscribeNotifier(this._client, this._resendRequests.bind(this));\n  this._onResponseTimeout = this._onResponseTimeout.bind(this);\n};\n\n/**\n * Check if there is a request pending with a specified name\n *\n * @param {String} name An identifier for the request, e.g. a record name\n *\n * @public\n * @returns {void}\n */\nSingleNotifier.prototype.hasRequest = function (name) {\n  return !!this._requests[name];\n};\n\n/**\n * Add a request. If one has already been made it will skip the server request\n * and multiplex the response\n *\n * @param {String} name An identifier for the request, e.g. a record name\n\n *\n * @public\n * @returns {void}\n */\nSingleNotifier.prototype.request = function (name, callback) {\n  if (!this._requests[name]) {\n    this._requests[name] = [];\n    this._connection.sendMsg(this._topic, this._action, [name]);\n  }\n\n  var ackId = this._ackTimeoutRegistry.add({\n    topic: this._topic,\n    event: C.EVENT.RESPONSE_TIMEOUT,\n    name: name,\n    action: this._action,\n    timeout: this._timeoutDuration,\n    callback: this._onResponseTimeout\n  });\n  this._requests[name].push({ callback: callback, ackId: ackId });\n};\n\n/**\n * Process a response for a request. This has quite a flexible API since callback functions\n * differ greatly and helps maximise reuse.\n *\n * @param {String} name An identifier for the request, e.g. a record name\n * @param {String} error Error message\n * @param {Object} data If successful, the response data\n *\n * @public\n * @returns {void}\n */\nSingleNotifier.prototype.recieve = function (name, error, data) {\n  var entries = this._requests[name];\n\n  if (!entries) {\n    this._client._$onError(this._topic, C.EVENT.UNSOLICITED_MESSAGE, 'no entry for ' + name);\n    return;\n  }\n\n  for (var i = 0; i < entries.length; i++) {\n    var entry = entries[i];\n    this._ackTimeoutRegistry.remove({\n      ackId: entry.ackId\n    });\n    entry.callback(error, data);\n  }\n  delete this._requests[name];\n};\n\n/**\n * Will be invoked if a timeout occurs before a response arrives from the server\n *\n * @param {String} name An identifier for the request, e.g. a record name\n *\n * @private\n * @returns {void}\n */\nSingleNotifier.prototype._onResponseTimeout = function (timeout) {\n  var msg = 'No response received in time for ' + this._topic + '|' + this._action + '|' + timeout.name;\n  this._client._$onError(this._topic, C.EVENT.RESPONSE_TIMEOUT, msg);\n};\n\n/**\n * Resends all the requests once the connection is back up\n *\n * @private\n * @returns {void}\n */\nSingleNotifier.prototype._resendRequests = function () {\n  for (var request in this._requests) {\n    this._connection.sendMsg(this._topic, this._action, [request]);\n  }\n};\n\nmodule.exports = SingleNotifier;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/utils/single-notifier.js\n// module id = f6PM\n// module chunks = 1 2","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_create-property.js\n// module id = fBQ2\n// module chunks = 1 2","'use strict';\n\nvar C = require('../constants/constants');\nvar ResubscribeNotifier = require('./resubscribe-notifier');\n\n/*\n * Creates a listener instance which is usedby deepstream Records and Events.\n *\n * @param {String} topic                 One of CONSTANTS.TOPIC\n * @param {String} pattern              A pattern that can be compiled via new RegExp(pattern)\n * @param {Function} callback           The function which is called when pattern was found and\n *                                      removed\n * @param {Connection} Connection       The instance of the server connection\n * @param {Object} options              Deepstream options\n * @param {Client} client               deepstream.io client\n *\n * @constructor\n */\nvar Listener = function Listener(topic, pattern, callback, options, client, connection) {\n  this._topic = topic;\n  this._callback = callback;\n  this._pattern = pattern;\n  this._options = options;\n  this._client = client;\n  this._connection = connection;\n  this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n  this._ackTimeoutRegistry.add({\n    topic: this._topic,\n    name: pattern,\n    action: C.ACTIONS.LISTEN\n  });\n\n  this._resubscribeNotifier = new ResubscribeNotifier(client, this._sendListen.bind(this));\n  this._sendListen();\n  this.destroyPending = false;\n};\n\nListener.prototype.sendDestroy = function () {\n  this.destroyPending = true;\n  this._connection.sendMsg(this._topic, C.ACTIONS.UNLISTEN, [this._pattern]);\n  this._resubscribeNotifier.destroy();\n};\n\n/*\n * Resets internal properties. Is called when provider cals unlisten.\n *\n * @returns {void}\n */\nListener.prototype.destroy = function () {\n  this._callback = null;\n  this._pattern = null;\n  this._client = null;\n  this._connection = null;\n};\n\n/*\n * Accepting a listener request informs deepstream that the current provider is willing to\n * provide the record or event matching the subscriptionName . This will establish the current\n * provider as the only publisher for the actual subscription with the deepstream cluster.\n * Either accept or reject needs to be called by the listener, otherwise it prints out a\n * deprecated warning.\n *\n * @returns {void}\n */\nListener.prototype.accept = function (name) {\n  this._connection.sendMsg(this._topic, C.ACTIONS.LISTEN_ACCEPT, [this._pattern, name]);\n};\n\n/*\n * Rejecting a listener request informs deepstream that the current provider is not willing\n * to provide the record or event matching the subscriptionName . This will result in deepstream\n * requesting another provider to do so instead. If no other provider accepts or exists, the\n * record will remain unprovided.\n * Either accept or reject needs to be called by the listener, otherwise it prints out a\n * deprecated warning.\n *\n * @returns {void}\n */\nListener.prototype.reject = function (name) {\n  this._connection.sendMsg(this._topic, C.ACTIONS.LISTEN_REJECT, [this._pattern, name]);\n};\n\n/*\n * Wraps accept and reject as an argument for the callback function.\n *\n * @private\n * @returns {Object}\n */\nListener.prototype._createCallbackResponse = function (message) {\n  return {\n    accept: this.accept.bind(this, message.data[1]),\n    reject: this.reject.bind(this, message.data[1])\n  };\n};\n\n/*\n * Handles the incomming message.\n *\n * @private\n * @returns {void}\n */\nListener.prototype._$onMessage = function (message) {\n  if (message.action === C.ACTIONS.ACK) {\n    this._ackTimeoutRegistry.clear(message);\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_FOR_PATTERN_FOUND) {\n    this._callback(message.data[1], true, this._createCallbackResponse(message));\n  } else if (message.action === C.ACTIONS.SUBSCRIPTION_FOR_PATTERN_REMOVED) {\n    this._callback(message.data[1], false);\n  } else {\n    this._client._$onError(this._topic, C.EVENT.UNSOLICITED_MESSAGE, message.data[0] + '|' + message.data[1]);\n  }\n};\n\n/*\n * Sends a C.ACTIONS.LISTEN to deepstream.\n *\n * @private\n * @returns {void}\n */\nListener.prototype._sendListen = function () {\n  this._connection.sendMsg(this._topic, C.ACTIONS.LISTEN, [this._pattern]);\n};\n\nmodule.exports = Listener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/utils/listener.js\n// module id = gBz4\n// module chunks = 1 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/decode.js\n// module id = kMPS\n// module chunks = 1 2","'use strict';\n\nexports.CONNECTION_STATE = {};\n\nexports.CONNECTION_STATE.CLOSED = 'CLOSED';\nexports.CONNECTION_STATE.AWAITING_CONNECTION = 'AWAITING_CONNECTION';\nexports.CONNECTION_STATE.CHALLENGING = 'CHALLENGING';\nexports.CONNECTION_STATE.AWAITING_AUTHENTICATION = 'AWAITING_AUTHENTICATION';\nexports.CONNECTION_STATE.AUTHENTICATING = 'AUTHENTICATING';\nexports.CONNECTION_STATE.OPEN = 'OPEN';\nexports.CONNECTION_STATE.ERROR = 'ERROR';\nexports.CONNECTION_STATE.RECONNECTING = 'RECONNECTING';\n\nexports.MESSAGE_SEPERATOR = String.fromCharCode(30); // ASCII Record Seperator 1E\nexports.MESSAGE_PART_SEPERATOR = String.fromCharCode(31); // ASCII Unit Separator 1F\n\nexports.TYPES = {};\nexports.TYPES.STRING = 'S';\nexports.TYPES.OBJECT = 'O';\nexports.TYPES.NUMBER = 'N';\nexports.TYPES.NULL = 'L';\nexports.TYPES.TRUE = 'T';\nexports.TYPES.FALSE = 'F';\nexports.TYPES.UNDEFINED = 'U';\n\nexports.TOPIC = {};\nexports.TOPIC.CONNECTION = 'C';\nexports.TOPIC.AUTH = 'A';\nexports.TOPIC.ERROR = 'X';\nexports.TOPIC.EVENT = 'E';\nexports.TOPIC.RECORD = 'R';\nexports.TOPIC.RPC = 'P';\nexports.TOPIC.PRESENCE = 'U';\nexports.TOPIC.PRIVATE = 'PRIVATE/';\n\nexports.EVENT = {};\nexports.EVENT.CONNECTION_ERROR = 'connectionError';\nexports.EVENT.CONNECTION_STATE_CHANGED = 'connectionStateChanged';\nexports.EVENT.MAX_RECONNECTION_ATTEMPTS_REACHED = 'MAX_RECONNECTION_ATTEMPTS_REACHED';\nexports.EVENT.CONNECTION_AUTHENTICATION_TIMEOUT = 'CONNECTION_AUTHENTICATION_TIMEOUT';\nexports.EVENT.ACK_TIMEOUT = 'ACK_TIMEOUT';\nexports.EVENT.NO_RPC_PROVIDER = 'NO_RPC_PROVIDER';\nexports.EVENT.RESPONSE_TIMEOUT = 'RESPONSE_TIMEOUT';\nexports.EVENT.DELETE_TIMEOUT = 'DELETE_TIMEOUT';\nexports.EVENT.UNSOLICITED_MESSAGE = 'UNSOLICITED_MESSAGE';\nexports.EVENT.MESSAGE_DENIED = 'MESSAGE_DENIED';\nexports.EVENT.MESSAGE_PARSE_ERROR = 'MESSAGE_PARSE_ERROR';\nexports.EVENT.VERSION_EXISTS = 'VERSION_EXISTS';\nexports.EVENT.NOT_AUTHENTICATED = 'NOT_AUTHENTICATED';\nexports.EVENT.MESSAGE_PERMISSION_ERROR = 'MESSAGE_PERMISSION_ERROR';\nexports.EVENT.LISTENER_EXISTS = 'LISTENER_EXISTS';\nexports.EVENT.NOT_LISTENING = 'NOT_LISTENING';\nexports.EVENT.TOO_MANY_AUTH_ATTEMPTS = 'TOO_MANY_AUTH_ATTEMPTS';\nexports.EVENT.INVALID_AUTH_MSG = 'INVALID_AUTH_MSG';\nexports.EVENT.IS_CLOSED = 'IS_CLOSED';\nexports.EVENT.RECORD_NOT_FOUND = 'RECORD_NOT_FOUND';\nexports.EVENT.NOT_SUBSCRIBED = 'NOT_SUBSCRIBED';\n\nexports.ACTIONS = {};\nexports.ACTIONS.PING = 'PI';\nexports.ACTIONS.PONG = 'PO';\nexports.ACTIONS.ACK = 'A';\nexports.ACTIONS.REDIRECT = 'RED';\nexports.ACTIONS.CHALLENGE = 'CH';\nexports.ACTIONS.CHALLENGE_RESPONSE = 'CHR';\nexports.ACTIONS.READ = 'R';\nexports.ACTIONS.CREATE = 'C';\nexports.ACTIONS.UPDATE = 'U';\nexports.ACTIONS.PATCH = 'P';\nexports.ACTIONS.DELETE = 'D';\nexports.ACTIONS.SUBSCRIBE = 'S';\nexports.ACTIONS.UNSUBSCRIBE = 'US';\nexports.ACTIONS.HAS = 'H';\nexports.ACTIONS.SNAPSHOT = 'SN';\nexports.ACTIONS.INVOKE = 'I';\nexports.ACTIONS.SUBSCRIPTION_FOR_PATTERN_FOUND = 'SP';\nexports.ACTIONS.SUBSCRIPTION_FOR_PATTERN_REMOVED = 'SR';\nexports.ACTIONS.SUBSCRIPTION_HAS_PROVIDER = 'SH';\nexports.ACTIONS.LISTEN = 'L';\nexports.ACTIONS.UNLISTEN = 'UL';\nexports.ACTIONS.LISTEN_ACCEPT = 'LA';\nexports.ACTIONS.LISTEN_REJECT = 'LR';\nexports.ACTIONS.PROVIDER_UPDATE = 'PU';\nexports.ACTIONS.QUERY = 'Q';\nexports.ACTIONS.CREATEORREAD = 'CR';\nexports.ACTIONS.CREATEANDUPDATE = 'CU';\nexports.ACTIONS.EVENT = 'EVT';\nexports.ACTIONS.ERROR = 'E';\nexports.ACTIONS.REQUEST = 'REQ';\nexports.ACTIONS.RESPONSE = 'RES';\nexports.ACTIONS.REJECTION = 'REJ';\nexports.ACTIONS.PRESENCE_JOIN = 'PNJ';\nexports.ACTIONS.PRESENCE_LEAVE = 'PNL';\nexports.ACTIONS.WRITE_ACKNOWLEDGEMENT = 'WA';\n\nexports.CALL_STATE = {};\nexports.CALL_STATE.INITIAL = 'INITIAL';\nexports.CALL_STATE.CONNECTING = 'CONNECTING';\nexports.CALL_STATE.ESTABLISHED = 'ESTABLISHED';\nexports.CALL_STATE.ACCEPTED = 'ACCEPTED';\nexports.CALL_STATE.DECLINED = 'DECLINED';\nexports.CALL_STATE.ENDED = 'ENDED';\nexports.CALL_STATE.ERROR = 'ERROR';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/constants/constants.js\n// module id = lFHJ\n// module chunks = 1 2","<template>\r\n  <Modal v-model=\"modelState\" :title=\"'任务列表 - '+taskValue\" width=\"560\" @on-visible-change=\"modalVisibleChange\" closable>\r\n    <div>\r\n      <div class=\"input-filter-box\">\r\n        <label>交易号:</label>\r\n        <Input v-model=\"transCode\" placeholder=\"请输入交易号\" style=\"width: 127px;margin-left:12px\" class=\"input-transcode\"></Input>\r\n      </div>\r\n      <div class=\"input-filter-box\">\r\n        <label>创建者:</label>\r\n        <Input v-model=\"creatorName\" placeholder=\"请输入创建者\" style=\"width: 127px;margin-left:12px\"></Input>\r\n      </div>\r\n      <div class=\"action-btn\">\r\n        <Button type=\"primary\" size=\"small\" @click=\"filterTaskBtn\">查询</Button>\r\n        <Button size=\"small\" @click=\"clearInputValue\">重置</Button>\r\n        <span class=\"expand\" @click=\"expandCrtTime\">\r\n          {{expandValue}}\r\n          <i class=\"iconfont\" v-html=\"expandIcon\"></i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div class=\"input-crttime\" v-show=\"expand\">\r\n      <label>创建时间:</label>\r\n      <DatePicker v-model=\"crtTime\" format=\"yyyy/MM/dd\" type=\"daterange\" placement=\"bottom-end\" placeholder=\"请输入过滤时间\" style=\"width: 170px\"></DatePicker>\r\n    </div>\r\n\r\n    <!-- <Scroll :on-reach-edge=\"handleReachBottom\" height='233'> -->\r\n    <Table :loading=\"loading\" :data=\"columnData\" :columns=\"columns\" size=\"small\" stripe></Table>\r\n    <!-- </Scroll> -->\r\n    <div style=\"margin: 10px;overflow: hidden\">\r\n      <div style=\"float: right;\">\r\n        <Page :total=\"pageTotal\" :current=\"currentPage\" :page-size=\"pageSize\" size=\"small\" @on-change=\"changeCurrentPage\" show-total show-elevator></Page>\r\n      </div>\r\n    </div>\r\n    <div slot=\"footer\">\r\n    </div>\r\n  </Modal>\r\n</template>\r\n\r\n<script>\r\nimport { getAppTaskCount } from \"@/services/flowService\";\r\nimport { getDateFormat } from \"@/utils/utils\";\r\nexport default {\r\n  name: \"TaskModal\",\r\n  data() {\r\n    return {\r\n      columns: [\r\n        {\r\n          title: \"交易号\",\r\n          key: \"transCode\",\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            return h(\r\n              \"a\",\r\n              {\r\n                attrs: {\r\n                  href: \"/Form/index.html?data=\" + params.row.transCode,\r\n                  target: \"_blank\"\r\n                }\r\n              },\r\n              params.row.transCode\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: \"创建者\",\r\n          key: \"creatorName\",\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"任务创建时间\",\r\n          key: \"crtTime\",\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            //时间戳转换为日期格式\r\n            function formatDateTime(inputTime) {\r\n              let date = new Date(inputTime);\r\n              let y = date.getFullYear();\r\n              let m = date.getMonth() + 1;\r\n              m = m < 10 ? \"0\" + m : m;\r\n              let d = date.getDate();\r\n              d = d < 10 ? \"0\" + d : d;\r\n              let h = date.getHours();\r\n              h = h < 10 ? \"0\" + h : h;\r\n              let minute = date.getMinutes();\r\n              let second = date.getSeconds();\r\n              minute = minute < 10 ? \"0\" + minute : minute;\r\n              second = second < 10 ? \"0\" + second : second;\r\n              return (\r\n                y + \"-\" + m + \"-\" + d + \" \" + h + \":\" + minute + \":\" + second\r\n              );\r\n            }\r\n            return h(\"span\", formatDateTime(params.row.crtTime));\r\n          }\r\n        }\r\n      ],\r\n      columnData: [],\r\n      loading: true, //table是否加载\r\n      pageTotal: 0, //table总数\r\n      pageSize: 6,\r\n      currentPage: 1, //table当前页\r\n      modelState: false,\r\n      transCode: \"\",\r\n      creatorName: \"\",\r\n      crtTime: [],\r\n      expand: false,\r\n      expandValue: \"展开\",\r\n      expandIcon: \"&#xe617;\"\r\n    };\r\n  },\r\n  props: [\"listId\", \"modal\", \"taskValue\",\"type\"],\r\n\r\n  watch: {\r\n    listId: {\r\n      handler: function(value, oldValue) {\r\n        this.filterTaskBtn();\r\n      }\r\n    },\r\n    modal: function(value, oldValue) {\r\n      this.modelState = value;\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * 分页加载\r\n     */\r\n    changeCurrentPage(currentPage) {\r\n      this.currentPage = currentPage;\r\n      this.filterTaskBtn();\r\n    },\r\n\r\n    modalVisibleChange(state) {\r\n      if (!state) {\r\n        this.$emit(\"emitModal\", { modal: false, listId: \"\" });\r\n        this.transCode = \"\";\r\n        this.creatorName = \"\";\r\n        this.crtTime = \"\";\r\n        this.currentPage = 1;\r\n      }\r\n    },\r\n\r\n    //清空输入框\r\n    clearInputValue: function() {\r\n      this.transCode = \"\";\r\n      this.creatorName = \"\";\r\n      this.crtTime = \"\";\r\n      this.filterTaskBtn();\r\n    },\r\n\r\n    //查询过滤\r\n    filterTaskBtn: function(e) {\r\n      let crtTime = \"\";\r\n      if (this.crtTime.length > 0 && this.crtTime[0]) {\r\n        crtTime =\r\n          getDateFormat(this.crtTime[0], \"yyyy-MM-dd\") +\r\n          \"/\" +\r\n          getDateFormat(this.crtTime[1], \"yyyy-MM-dd\");\r\n      }\r\n      let params = {\r\n        type: this.type,\r\n        page: this.currentPage,\r\n        listId: this.listId,\r\n        limit: this.pageSize,\r\n        filter: {\r\n          transCode: this.transCode,\r\n          creatorName: this.creatorName,\r\n          crtTime: crtTime\r\n        }\r\n      };\r\n      if (!crtTime && !this.transCode && !this.creatorName) {\r\n        delete params.filter;\r\n      }\r\n      this.loading = true;\r\n      getAppTaskCount(params).then(res => {\r\n        this.pageTotal = res.total;\r\n       // if (res.tableContent.length > 0) {\r\n          this.columnData = res.tableContent;\r\n          this.loading = false;\r\n       // }\r\n      });\r\n    },\r\n\r\n    expandCrtTime: function() {\r\n      if (!this.expand) {\r\n        this.expand = true;\r\n        this.expandValue = \"收起\";\r\n        this.expandIcon = \"&#xe618;\";\r\n      } else {\r\n        this.expand = false;\r\n        this.expandValue = \"展开\";\r\n        this.expandIcon = \"&#xe617;\";\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.input-filter-box {\r\n  display: inline-block;\r\n  margin-bottom: 5px;\r\n  margin-right: 5px;\r\n}\r\n.action-btn {\r\n  position: absolute;\r\n\r\n  display: inline-block;\r\n  margin-bottom: 5px;\r\n  height: 35px;\r\n\r\n  button {\r\n    margin-left: 5px;\r\n  }\r\n}\r\n.expand {\r\n  font-size: 13px;\r\n  margin-left: 5px;\r\n}\r\n\r\n.expand:hover {\r\n  cursor: pointer;\r\n  color: red;\r\n}\r\n\r\n.input-crttime {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n\r\n\r\n</style>\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/pulsegraph/TaskModal.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Modal',{attrs:{\"title\":'任务列表 - '+_vm.taskValue,\"width\":\"560\",\"closable\":\"\"},on:{\"on-visible-change\":_vm.modalVisibleChange},model:{value:(_vm.modelState),callback:function ($$v) {_vm.modelState=$$v},expression:\"modelState\"}},[_c('div',[_c('div',{staticClass:\"input-filter-box\"},[_c('label',[_vm._v(\"交易号:\")]),_vm._v(\" \"),_c('Input',{staticClass:\"input-transcode\",staticStyle:{\"width\":\"127px\",\"margin-left\":\"12px\"},attrs:{\"placeholder\":\"请输入交易号\"},model:{value:(_vm.transCode),callback:function ($$v) {_vm.transCode=$$v},expression:\"transCode\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"input-filter-box\"},[_c('label',[_vm._v(\"创建者:\")]),_vm._v(\" \"),_c('Input',{staticStyle:{\"width\":\"127px\",\"margin-left\":\"12px\"},attrs:{\"placeholder\":\"请输入创建者\"},model:{value:(_vm.creatorName),callback:function ($$v) {_vm.creatorName=$$v},expression:\"creatorName\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"action-btn\"},[_c('Button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.filterTaskBtn}},[_vm._v(\"查询\")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":\"small\"},on:{\"click\":_vm.clearInputValue}},[_vm._v(\"重置\")]),_vm._v(\" \"),_c('span',{staticClass:\"expand\",on:{\"click\":_vm.expandCrtTime}},[_vm._v(\"\\n        \"+_vm._s(_vm.expandValue)+\"\\n        \"),_c('i',{staticClass:\"iconfont\",domProps:{\"innerHTML\":_vm._s(_vm.expandIcon)}})])],1)]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.expand),expression:\"expand\"}],staticClass:\"input-crttime\"},[_c('label',[_vm._v(\"创建时间:\")]),_vm._v(\" \"),_c('DatePicker',{staticStyle:{\"width\":\"170px\"},attrs:{\"format\":\"yyyy/MM/dd\",\"type\":\"daterange\",\"placement\":\"bottom-end\",\"placeholder\":\"请输入过滤时间\"},model:{value:(_vm.crtTime),callback:function ($$v) {_vm.crtTime=$$v},expression:\"crtTime\"}})],1),_vm._v(\" \"),_c('Table',{attrs:{\"loading\":_vm.loading,\"data\":_vm.columnData,\"columns\":_vm.columns,\"size\":\"small\",\"stripe\":\"\"}}),_vm._v(\" \"),_c('div',{staticStyle:{\"margin\":\"10px\",\"overflow\":\"hidden\"}},[_c('div',{staticStyle:{\"float\":\"right\"}},[_c('Page',{attrs:{\"total\":_vm.pageTotal,\"current\":_vm.currentPage,\"page-size\":_vm.pageSize,\"size\":\"small\",\"show-total\":\"\",\"show-elevator\":\"\"},on:{\"on-change\":_vm.changeCurrentPage}})],1)]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a3ed5c76\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/pulsegraph/TaskModal.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a3ed5c76\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TaskModal.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TaskModal.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TaskModal.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a3ed5c76\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./TaskModal.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a3ed5c76\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pulsegraph/TaskModal.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"graph-box\">\r\n        <div id=\"circularGraph\" class=\"graph\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { getPulseGraph } from \"@/services/flowService\";\r\n\r\nconst echarts = require(\"echarts\");\r\n\r\nexport default {\r\n  props:['caseId'],\r\n  data() {\r\n    return {\r\n      nodes: [],\r\n      links: [],\r\n      groupLength: 0,\r\n      dataItem: [],\r\n      title:'',\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    drawECharts() {\r\n      //   基于准备好的dom，初始化echarts实例\r\n      let myChart = echarts.init(document.getElementById(\"circularGraph\"));\r\n      // 添加点击事件\r\n      myChart.on(\"click\", this.redirectTo);\r\n      // 绘制图表\r\n      for (let n in this.nodes) {\r\n        // delete this.nodes[n].x;\r\n        // delete this.nodes[n].y;\r\n        delete this.nodes[n].symbol;\r\n        // graph.nodes[n].x = Math.ceil(Math.random() * 10);\r\n        // graph.nodes[n].y = Math.ceil(Math.random() * 10);\r\n      }\r\n      let categories = this.dataItem.map((item,index)=>{\r\n        return {\r\n          name:item.name\r\n        }\r\n      });\r\n\r\n      this.nodes.forEach(function(node) {\r\n        node.category = node.index;\r\n        node.draggable = true;\r\n        node.symbol = 'image://'+'/resources/images/icon/'+node.icon+'.png';\r\n\r\n      });\r\n\r\n      // 指定图表的配置项和数据\r\n      let option = {\r\n        tooltip: {},\r\n        clickable: true,\r\n        legend: [\r\n          {\r\n            data: categories.map(function(a) {\r\n              return a.name;\r\n            }),\r\n          }\r\n        ],\r\n        animationDuration: 3000,\r\n        animationDurationUpdate: 3000,\r\n        animationEasingUpdate: \"quinticInOut\",\r\n        series: [\r\n          {\r\n            name: this.title,\r\n            type: \"graph\",\r\n            width: \"400px\",\r\n            height: \"400px\",\r\n            top:'80px',\r\n            layout: \"circular\",\r\n            circular: {\r\n              rotateLabel: true\r\n            },\r\n            data: this.nodes,\r\n            links: this.links,\r\n            categories: categories,\r\n            draggable: true,\r\n            edgeSymbol: [\"none\", \"arrow\"],\r\n            // roam: true,\r\n            // legendHoverLink:true,\r\n            label: {\r\n              normal: {\r\n                position: [\"50%\", \"50%\"],\r\n                formatter: \"{b}\"\r\n              }\r\n            },\r\n            lineStyle: {\r\n              normal: {\r\n                color: \"source\",\r\n                curveness: 0.1\r\n              }\r\n            },\r\n            force: {\r\n              repulsion: 12\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      myChart.setOption(option);\r\n    },\r\n\r\n    redirectTo(param) {\r\n      if (typeof param.seriesIndex == \"undefined\") {\r\n        return;\r\n      }\r\n      if (param.type == \"click\") {\r\n        if(param.data.type === 'list'){\r\n            if(param.data.url){\r\n               let url = \"appReport/\" + param.data.url;\r\n                window.top.postMessage({\r\n                    type: \"redirect\",\r\n                    url: url\r\n                }, \"*\");\r\n            }\r\n        }else{\r\n            return;\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    let that = this;\r\n    getPulseGraph(this.caseId).then(res => {\r\n      let nodes = [];\r\n      this.groupLength = res.dataItem.length;\r\n      this.dataItem = res.dataItem;\r\n      this.title  = res.title;\r\n      if (res) {\r\n        res.dataItem.map(function(item, index) {\r\n          for (let n = 0; n < item.child.length; n++) {\r\n            item.child[n].index = index;\r\n            item.child[n].icon = index+'_'+n;\r\n          }\r\n          nodes = [...nodes, ...item.child];\r\n        });\r\n      }\r\n      console.log(nodes);\r\n      nodes.map(item => {\r\n        this.nodes.push({\r\n          name: item.value,\r\n          id: item.id,\r\n          index: item.index,\r\n          icon:item.icon,\r\n          value: 10,\r\n          url:item.url,\r\n          type:item.type,\r\n          // symbolSize: item.type == \"list\" ? 30 : 30,\r\n          symbol: \"rect\",\r\n          label: {\r\n            show: true\r\n          },\r\n          itemStyle:{\r\n              borderColor:'#ddd',\r\n              shadowBlur:10,\r\n              shadowOffsetX:2,\r\n              shadowOffsetY:2\r\n              \r\n          }\r\n        });\r\n\r\n        item.endNode.map(target => {\r\n          this.links.push({\r\n            source: item.id,\r\n            target: target.id\r\n          });\r\n        });\r\n      });\r\n      that.drawECharts();\r\n    });\r\n  },\r\n\r\n  mounted() {}\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.graph-box {\r\n  width: 100%;\r\n  position: relative;\r\n  height: 100%;\r\n\r\n  .graph {\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 100%;\r\n    height: 100%;\r\n    // height: 800px;\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/flow/circularGraph.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"graph-box\"},[_c('div',{staticClass:\"graph\",attrs:{\"id\":\"circularGraph\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-73dead91\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/flow/circularGraph.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-73dead91\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./circularGraph.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./circularGraph.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./circularGraph.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-73dead91\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./circularGraph.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-73dead91\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/flow/circularGraph.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"flow_container right_container\">\r\n    <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\r\n    <div id=\"flow-box\">\r\n      <RadioGroup class=\"taskbtn\" v-model=\"radioGroupLabel\" size=\"large\" @on-change=\"radioGroupChange\">\r\n        <Radio label=\"mytask\">\r\n          <i class=\"iconfont\">&#xe636;</i>\r\n          <span>我的任务</span>\r\n        </Radio>\r\n        <i class=\"vertical-divide\"></i>\r\n        <Radio label=\"teamtask\">\r\n          <i class=\"iconfont\">&#xe685;</i>\r\n          <span>团队任务</span>\r\n        </Radio>\r\n      </RadioGroup>\r\n      <RadioGroup class=\"taskbtn_1\" v-model=\"rodioGroupDoOrNot\" size=\"large\" @on-change=\"radioGroupChangeDoneOrTodo\">\r\n        <i class=\"vertical-divide\"></i>\r\n        <Radio label=\"todo\">\r\n          <i class=\"iconfont\">&#xe6a9;</i>\r\n          <span>未完成</span>\r\n        </Radio>\r\n        <i class=\"vertical-divide\"></i>\r\n        <Radio label=\"done\">\r\n          <i class=\"iconfont\">&#xe670;</i>\r\n          <span>已完成</span>\r\n        </Radio>\r\n      </RadioGroup>\r\n      <div class=\"divide\"></div>\r\n      <div class=\"business_item\" style=\"width:50px\">\r\n        <div class=\"left-name\" v-for=\"(item,index) in dataItem\" :key=\"index\">\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"svg_box\" @click=\"outBlur\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n          <defs>\r\n            <filter id=\"f1\" x=\"0\" y=\"0\" width=\"200%\" height=\"200%\">\r\n              <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"0\" dy=\"0\" />\r\n              <feColorMatrix result=\"matrixOut\" in=\"offOut\" type=\"matrix\" values=\"0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0\" />\r\n              <feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"5\" />\r\n              <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\r\n            </filter>\r\n          </defs>\r\n           <defs>\r\n            <marker id=\"arrow\" markerUnits=\"userSpaceOnUse\" markerWidth=\"15\" markerHeight=\"15\" viewBox=\"0 0 15 15\" refX=\"6\" refY=\"6\" orient=\"auto\">\r\n              <path d=\"M2,0 L10,6 L2,12 L6,6 L2,0\" style=\"fill: #00ae9d;\" />\r\n            </marker>\r\n          </defs>\r\n          <defs>\r\n            <marker id=\"arrow1\" markerUnits=\"userSpaceOnUse\" markerWidth=\"15\" markerHeight=\"15\" viewBox=\"0 0 15 15\" refX=\"6\" refY=\"6\" orient=\"auto\">\r\n              <path d=\"M2,0 L10,6 L2,12 L6,6 L2,0\" style=\"fill: #f38113;\" />\r\n            </marker>\r\n          </defs>\r\n          <defs>\r\n            <marker id=\"arrow_hight_color\" markerUnits=\"userSpaceOnUse\" markerWidth=\"15\" markerHeight=\"15\" viewBox=\"0 0 15 15\" refX=\"6\" refY=\"6\" orient=\"auto\">\r\n              <path d=\"M2,0 L10,6 L2,12 L6,6 L2,0\" style=\"fill: red;\" />\r\n            </marker>\r\n          </defs>\r\n          <defs>\r\n            <linearGradient id=\"orange_red\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n              <stop offset=\"0%\" style=\"stop-color:#ffdfd9;stop-opacity:1\" />\r\n              <stop offset=\"100%\" style=\"stop-color:#ff8069 stop-opacity:1\" />\r\n            </linearGradient>\r\n          </defs>\r\n          <g v-for=\"(business,i) in dataItem\" :key=\"i\">\r\n            <g v-for=\"(item,j) in business.child\" :key=\"j\">\r\n\r\n              <image :x=\"40+(baseLength+graphSpace)*item.sort\" \r\n                :y=\"50+170*i\" :width=\"baseLength\" \r\n                :height=\"baseLength\" \r\n                :xlink:href=\"item.icon\" \r\n                rx='10'\r\n                v-on:click.stop=\"doAction(item)\"  \r\n                v-bind:class=\"{ 'svg-image-style-opacity': !item.isPermitted, 'svg-image-style': true }\"\r\n                >\r\n              </image>\r\n              <!-- 科目与业务节点title -->\r\n\r\n              <a @click=\"redirectTo(item)\" :class=\"item.type==='list'?'svg-title-style':'svg-title-style-default'\">\r\n                <text :x=\"40+baseLength/2+(baseLength+graphSpace)*item.sort\" :y=\"65+baseLength+170*i\">\r\n                  {{item.value}}\r\n                </text>\r\n              </a>\r\n              <!-- 所有待办 -->\r\n              <circle :cx=\"40+(baseLength+graphSpace)*item.sort\" :cy=\"item.type==='list'?50+170*i:45+170*i\" r=\"12\" stroke-width=\"1\" fill=\"red\" v-if=\"item.type==='list' && item.listId in defaultDisplayTask\" />\r\n              <text :x=\"40+(baseLength+graphSpace)*item.sort\" :y=\"item.type==='list'?45+170*i:45+170*i\" fill=\"#fff\" class=\"svg-text-common-style\" style=\"font-size:12px\" :listId=\"item.listId\" :taskValue=\"item.value\" @click=\"opentask\" v-if=\"item.type==='list'\">\r\n                {{defaultDisplayTask[item.listId]}}\r\n              </text>\r\n\r\n              <!--  <circle :cx=\"40+baseLength+(baseLength+graphSpace)*j\" :cy=\"item.type==='list'?25+170*i:45+170*i\" r=\"13\" stroke-width=\"1\" fill=\"red\" v-if=\"item.type==='list' && item.notToDo\" />\r\n                    <text :x=\"40+baseLength+(baseLength+graphSpace)*j\" :y=\"item.type==='list'?20+170*i:45+170*i\" fill=\"#fff\" v-if=\"item.type==='list' && item.notToDo\" class=\"svg-text-common-style\">\r\n                      {{item.notToDo}}\r\n                    </text> -->\r\n            </g>\r\n            \r\n          </g>\r\n\r\n          <g v-for=\"(point) in pointList\" :key=\"point.id\">\r\n            <polyline :points=\"point.value\" :marker-end=\"waterFlow[point.id]!==undefined?'url(#arrow_hight_color)':'url(#arrow1)'\" v-bind:class=\"waterFlow[point.id]!==undefined?'path':''\" style=\"fill:none;stroke:#f38113;stroke-width:0.8\" />\r\n          </g>\r\n          <!-- 应用与应用之间的关系 -->\r\n          <g v-for=\"(point) in transTypePointList\" :key=\"point.id\">\r\n            <polyline :points=\"point.value\" class=\"transTypeRel_style\" marker-end='url(#arrow)' />\r\n          </g>\r\n\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    <task-modal :modal='modal' :listId=\"pageListId\" @emitModal=\"emitModal\" :taskValue=\"taskValue\" :type=\"type\"></task-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as ds from \"deepstream.io-client-js\";\r\nimport TaskModal from \"@/components/pulsegraph/TaskModal\";\r\nimport CircularGraph from \"./circularGraph\";\r\nimport {\r\n  getPulseGraph,\r\n  getCurrentUserInfo,\r\n  getAppTaskCount,\r\n  getMockData\r\n} from \"@/services/flowService\";\r\nimport { getToken } from \"@/utils/utils\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      spinShow: true,\r\n      baseLength: 45, //图形大小\r\n      graphSpace: 65, //图形间距\r\n      circleFillColor: \"#646b86\",\r\n      circleBorderColor: \"#e0a527\",\r\n      squareFillColor: \"#00ae9d\",\r\n      squareBorderColor: \"#77b745\",\r\n      isActive: false,\r\n      arr: [],\r\n      title: \"\",\r\n      dataItem: [],\r\n      pointList: [],\r\n      transTypePointList: [], //应用与应用之间得连线\r\n      waterFlow: {},\r\n      flowType: true,\r\n      businessItemWidth: \"50px\",\r\n      ds: ds(\"wss://192.168.3.160:6021/deepstream\"),\r\n      books$$: null,\r\n\r\n      radioGroupLabel: \"mytask\",\r\n      rodioGroupDoOrNot: \"todo\",\r\n      doneortodo: \"todo\",\r\n      taskType: \"mytask\",\r\n\r\n      defaultDisplayTask: {}, //默认显示我的未完成任务\r\n      teamDone: {}, //团队已完成任务\r\n      teamTodo: {}, //团队待办任务\r\n      myDone: {}, //我的已完成任务\r\n      myToDo: {}, //我的未完成任务\r\n\r\n      modal: false, //弹出框是否显示\r\n      taskValue: \"\",\r\n      pageListId: \"\",\r\n      type: \"myToDo\"\r\n    };\r\n  },\r\n\r\n  components: {\r\n    TaskModal,\r\n    CircularGraph\r\n  },\r\n\r\n  props: [\"caseId\"],\r\n\r\n  methods: {\r\n    draw() {\r\n      let baseLength = this.baseLength;\r\n      let graphSpace = this.graphSpace;\r\n      let data = this.dataItem,\r\n        nodePointXY = {},\r\n        child = [],\r\n        nextChildId,\r\n        preChildId,\r\n        nextRelevantId,\r\n        preRelevantId,\r\n        endNode = [],\r\n        targetTransType = \"\", //当前节点坐标\r\n        smpley = 0, //同一业务类型下不相邻节点线y轴每次+5px\r\n        tempPoint,\r\n        tempX,\r\n        tempY;\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        let y = 170 + 170 * i;\r\n        data[i].point = \"0,\" + y + \" 2100,\" + y;\r\n        if (data[i].child.length > 0) {\r\n          for (let i2 = 0; i2 < data[i].child.length; i2++) {\r\n            this.dataItem[i].child[i2].pointX =\r\n              40 + (baseLength + graphSpace) * data[i].child[i2].sort;\r\n            this.dataItem[i].child[i2].pointY = 50 + baseLength / 2 + 170 * i;\r\n           \r\n           nodePointXY[this.dataItem[i].child[i2].id] =\r\n              this.dataItem[i].child[i2].pointX +\r\n              \",\" +\r\n              this.dataItem[i].child[i2].pointY;\r\n\r\n            let childNode = data[i].child[i2];\r\n            if (childNode.teamDone > 0) {\r\n              this.teamDone[childNode.listId] = childNode.teamDone;\r\n            }\r\n            if (childNode.teamTodo > 0) {\r\n              this.teamTodo[childNode.listId] = childNode.teamTodo;\r\n            }\r\n            if (childNode.myDone > 0) {\r\n              this.myDone[childNode.listId] = childNode.myDone;\r\n            }\r\n            if (childNode.myToDo > 0) {\r\n              this.myToDo[childNode.listId] = childNode.myToDo;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    \r\n      let that = this;\r\n      data.forEach(function(item, itemIndex) {\r\n        item.child.forEach(function(child,childIndex){\r\n          if(child.relevantNode && child.relevantNode.length>0){\r\n             // 构造应用与应用之间关系\r\n             child.relevantNode.forEach(function(relevantNode,relIndex){\r\n               if(relevantNode.id in nodePointXY){\r\n                  tempPoint = nodePointXY[relevantNode.id].split(',');\r\n                  tempX = Number(tempPoint[0]);\r\n                  tempY = Number(tempPoint[1]);\r\n                  that.transTypePointList.push({\r\n                    id:child.id+\"_\"+relevantNode.id,\r\n                    value:(child.pointX+baseLength)+','+child.pointY+' '+(tempX-4.3)+','+tempY\r\n                  })\r\n               }\r\n             });\r\n          }\r\n\r\n          if(child.endNode && child.endNode.length>0){\r\n            child.endNode.forEach(function(endNode,endIndex){\r\n              if(endNode.id in nodePointXY){\r\n                 tempPoint = nodePointXY[endNode.id].split(',');\r\n                  tempX = Number(tempPoint[0]);\r\n                  tempY = Number(tempPoint[1]);\r\n                //线条朝上\r\n                if(endNode.groupIndex<item.index){\r\n                  let baseNum  = (tempX-child.pointX)/(baseLength+graphSpace) *8.5;\r\n                    that.pointList.push({\r\n                      id:child.id+\"_\"+endNode.id,\r\n                      value:(child.pointX+baseLength/2)+','+(child.pointY-baseLength/2)+' '+(tempX+baseLength/2 - baseNum)+','+(tempY+baseLength/2+20)\r\n                    });\r\n                }\r\n                //线条朝下\r\n                else if(endNode.groupIndex>item.index){\r\n                  let baseNum  = (tempX-child.pointX)/(baseLength+graphSpace) *8.5;\r\n                  that.pointList.push({\r\n                    id:child.id+\"_\"+endNode.id,\r\n                    value:(child.pointX+baseLength/2)+','+(child.pointY+baseLength/2+20)+' '+(tempX+baseLength/2 - baseNum)+','+(tempY-baseLength/2-4.3)\r\n                  })\r\n                }\r\n              }\r\n            })\r\n          }\r\n        })\r\n      });\r\n    },\r\n\r\n    //计算svg宽度\r\n\r\n    calcSvgWidth: function(dataItem) {\r\n      let nodeNumber = 0;\r\n      if (dataItem.length > 0) {\r\n        nodeNumber = dataItem[0].child.length;\r\n\r\n        for (let i = 1; i < dataItem.length; i++) {\r\n          if (nodeNumber < dataItem[i].child.length) {\r\n            nodeNumber = dataItem[i].child.length;\r\n          }\r\n        }\r\n      }\r\n      let sreenWidth =\r\n        nodeNumber * (30 + this.baseLength + this.graphSpace) + 50;\r\n      if (document.body.clientWidth > sreenWidth) {\r\n        return document.body.clientWidth;\r\n      } else {\r\n        return sreenWidth;\r\n      }\r\n    },\r\n\r\n    //计算svg宽度\r\n\r\n    calcSvgHeight: function(dataItem) {\r\n      let h = dataItem.length > 0 ? dataItem.length * 171 + 79 : 215;\r\n      if (document.body.clientHeight > h) {\r\n        return document.body.clientHeight;\r\n      } else {\r\n        return h;\r\n      }\r\n    },\r\n\r\n    doAction: function(item, event) {\r\n      this.waterFlow = {};\r\n\r\n      if (item.endNode && item.endNode.length > 0) {\r\n        for (let i = 0; i < item.endNode.length; i++) {\r\n          this.waterFlow[item.id + \"_\" + item.endNode[i].id] = item.endNode[i];\r\n        }\r\n      }\r\n\r\n      if (item.lastNode && item.lastNode.length > 0) {\r\n        for (let j = 0; j < item.lastNode.length; j++) {\r\n          this.waterFlow[item.lastNode[j].id + \"_\" + item.id] =\r\n            item.lastNode[j];\r\n        }\r\n      }\r\n    },\r\n\r\n    outBlur:function(e){\r\n       this.waterFlow = {}\r\n    },\r\n\r\n    /**\r\n     * 应用链接跳转\r\n     */\r\n    redirectTo: function(item, event) {\r\n      let url = item.url;\r\n      if (item.type === \"subject\") return;\r\n\r\n      if (item.target === \"_blank\") {\r\n        window.open(item.url, \"_blank\");\r\n      } else {\r\n        if (~url.indexOf(\"outlink\")) {\r\n          url = item.url;\r\n        } else if (~url.indexOf(\"app\")) {\r\n          url = \"appReport/\" + url;\r\n        } else {\r\n          url = \"report/\" + url;\r\n        }\r\n        window.top.postMessage(\r\n          {\r\n            type: \"redirect\",\r\n            url: url\r\n          },\r\n          \"*\"\r\n        );\r\n      }\r\n    },\r\n\r\n    //订阅消息\r\n    subscribeMessage: function() {\r\n      let token = getToken();\r\n      this.ds.event.subscribe(\"taskChange/\" + token, msg => {});\r\n    },\r\n\r\n    radioGroupChange: function(e) {\r\n      this.taskType = e;\r\n      if (this.taskType === \"teamtask\" && this.doneortodo === \"done\") {\r\n        this.type = \"teamDone\";\r\n        this.defaultDisplayTask = this.teamDone;\r\n      } else if (this.taskType === \"teamtask\" && this.doneortodo === \"todo\") {\r\n        this.type = \"teamTodo\";\r\n        this.defaultDisplayTask = this.teamTodo;\r\n      } else if (this.taskType === \"mytask\" && this.doneortodo === \"done\") {\r\n        this.type = \"myDone\";\r\n        this.defaultDisplayTask = this.myDone;\r\n      } else if (this.taskType === \"mytask\" && this.doneortodo === \"todo\") {\r\n        this.type = \"myToDo\";\r\n        this.defaultDisplayTask = this.myToDo;\r\n      }\r\n    },\r\n\r\n    radioGroupChangeDoneOrTodo: function(e) {\r\n      this.doneortodo = e;\r\n      if (this.taskType === \"teamtask\" && this.doneortodo === \"done\") {\r\n        this.type = \"teamDone\";\r\n        this.defaultDisplayTask = this.teamDone;\r\n      } else if (this.taskType === \"teamtask\" && this.doneortodo === \"todo\") {\r\n        this.type = \"teamTodo\";\r\n        this.defaultDisplayTask = this.teamTodo;\r\n      } else if (this.taskType === \"mytask\" && this.doneortodo === \"done\") {\r\n        this.type = \"myDone\";\r\n        this.defaultDisplayTask = this.myDone;\r\n      } else if (this.taskType === \"mytask\" && this.doneortodo === \"todo\") {\r\n        this.type = \"myToDo\";\r\n        this.defaultDisplayTask = this.myToDo;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 查看待办任务\r\n     */\r\n    opentask(e) {\r\n      this.modal = true;\r\n      this.pageListId = e.target.getAttribute(\"listId\");\r\n      this.taskValue = e.target.getAttribute(\"taskValue\");\r\n    },\r\n\r\n    //监听弹出框返回得状态值\r\n    emitModal(val, e) {\r\n      this.pageListId = val.listId;\r\n      this.modal = false;\r\n    },\r\n\r\n    /**\r\n     * 分页加载\r\n     */\r\n    changeCurrentPage(currentPage) {\r\n      let params = {\r\n        type: this.type,\r\n        page: currentPage,\r\n        listId: this.pageListId,\r\n        limit: this.pageSize\r\n      };\r\n      this.loading = true;\r\n      getAppTaskCount(params).then(res => {\r\n        if (res.tableContent.length > 0) {\r\n          this.columnData = res.tableContent;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  created() {\r\n    var that = this;\r\n    let currentUser = this.$currentUser;\r\n    let username = [currentUser.nickname, currentUser.userId].join(\"|\");\r\n    let token = getToken();\r\n    that.ds.login(\r\n      {\r\n        token: token,\r\n        username: username\r\n      },\r\n      data => {\r\n        console.log(\"connect success!\");\r\n      }\r\n    );\r\n\r\n    this.subscribeMessage();\r\n  },\r\n  mounted() {\r\n    var that = this;\r\n     getPulseGraph(this.caseId)\r\n      .then(res => {\r\n        var getSubjectIicon = function(subjectName) {\r\n          var icon = \"\";\r\n          var subjectList = [\r\n            { name: \"计划\", icon: \"plan.png\" },\r\n            { name: \"需求\", icon: \"requirement.png\" },\r\n            { name: \"领料\", icon: \"collar-material.png\" },\r\n            { name: \"结项\", icon: \"check.png\" },\r\n            { name: \"验收\", icon: \"check.png\" },\r\n            { name: \"交付\", icon: \"pay.png\" },\r\n            { name: \"存货\", icon: \"stock.png\" },\r\n            { name: \"毛利\", icon: \"gross-profit.png\" },\r\n            { name: \"开票\", icon: \"open-ticket.png\" },\r\n            { name: \"收票\", icon: \"put-ticket.png\" },\r\n            { name: \"资金\", icon: \"fund.png\" },\r\n            { name: \"往来\", icon: \"dealings.png\" },\r\n            { name: \"设施\", icon: \"facilities.png\" },\r\n            { name: \"费用\", icon: \"cost-sub.png\" },\r\n            { name: \"税支\", icon: \"taxexpenditure.png\" }\r\n          ];\r\n\r\n          subjectList.map(s => {\r\n            if (s.name === subjectName) {\r\n              icon = s.icon;\r\n            }\r\n          });\r\n\r\n          return icon;\r\n        };\r\n        res.dataItem.map(d => {\r\n          if (d.child) {\r\n            d.child.map(c => {\r\n              var subjectList = [\"\", \"\", \"\"];\r\n              if (c.type === \"subject\" && c.value) {\r\n                c.icon = \"resources/images/icon/\" + getSubjectIicon(c.value);\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n        that.title = res.title;\r\n        that.dataItem = res.dataItem;\r\n\r\n        let calcSvgWidth =\r\n          that.calcSvgWidth(res.dataItem) > 1400\r\n            ? that.calcSvgWidth(res.dataItem)\r\n            : 1400;\r\n        let calcSvgHeight = that.calcSvgHeight(res.dataItem);\r\n        if(window.document.getElementById(\"flow-box\")){\r\n          window.document.getElementById(\"flow-box\").style.width =\r\n            calcSvgWidth + \"px\";\r\n          window.document.getElementById(\"flow-box\").style.height =\r\n            calcSvgHeight + \"px\";\r\n  \r\n          that.draw();\r\n  \r\n          this.defaultDisplayTask = this.myToDo;\r\n  \r\n          that.spinShow = false;\r\n        }\r\n      })\r\n      .catch(error => {\r\n        let me = this;\r\n        const title = \"提示\";\r\n        const content = \"<p>\" + error + \"</p>\";\r\n        me.$Modal.error({\r\n          title: title,\r\n          content: content,\r\n          closable: true\r\n        });\r\n      });\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@bg: #3e96ae;\r\n@bg-text-color: #000;\r\n@borderColor: #dddee1;\r\n\r\n.bg_white {\r\n  background-color: white;\r\n}\r\n\r\n.flow_container {\r\n  min-width: 1020px;\r\n  overflow-x: scroll;\r\n}\r\n\r\n.right_container {\r\n  position: relative;\r\n  margin: auto 0px;\r\n  overflow: auto;\r\n  min-height: 509px;\r\n  margin-left: 1px;\r\n  border-left: 1px solid #9e9e9e57;\r\n}\r\n\r\n#flow-box {\r\n  background-color: #ffffff;\r\n}\r\n\r\n.switch-box {\r\n  position: relative;\r\n  height: 45px;\r\n  line-height: 45px;\r\n  width: 100%;\r\n  padding: 0px 20px;\r\n  border-bottom: 1px solid @borderColor;\r\n  span:first-child {\r\n    width: 70px;\r\n  }\r\n  .ivu-switch-large.ivu-switch-checked:after {\r\n    left: 46px;\r\n  }\r\n}\r\n.ivu-tabs-bar {\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.vertical-divide {\r\n  height: 20px;\r\n  vertical-align: middle;\r\n  display: inline-block;\r\n  width: 1px;\r\n  border-left: 1px solid @borderColor;\r\n  margin-right: 8px;\r\n}\r\n\r\n.divide {\r\n  height: 1px;\r\n  background-color: @borderColor;\r\n}\r\n.taskbtn {\r\n  position: fixed;\r\n  top: 10px;\r\n  z-index: 999;\r\n}\r\n\r\n.taskbtn_1 {\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 260px;\r\n  z-index: 999;\r\n}\r\n\r\n.main-flow {\r\n  display: table;\r\n  width: 100%;\r\n  table-layout: fixed;\r\n  border: 1px solid @borderColor;\r\n  margin-top: 10px;\r\n}\r\n\r\n.business_item {\r\n  display: table-cell;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.image-style {\r\n  border-radius: 5px;\r\n}\r\n\r\n.left-name {\r\n  padding: 15px;\r\n  height: 170px;\r\n  // border-right: 1px solid @borderColor;\r\n  // border-bottom: 1px solid @borderColor;\r\n  // background-color: @bg;\r\n  // text-align: center;\r\n  span {\r\n    font-size: 18px;\r\n    height: 100%;\r\n    color: @bg-text-color;\r\n    writing-mode: tb-rl;\r\n  }\r\n}\r\n\r\n.svg_box {\r\n  // border-bottom: 1px solid @borderColor;\r\n  display: table-cell;\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  svg {\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    overflow: hidden;\r\n    left: 0;\r\n  }\r\n}\r\n\r\n.svg-image-style-opacity {\r\n  opacity: 0.2;\r\n}\r\n\r\n.svg-image-style:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.svg-title-style {\r\n  text-anchor: middle;\r\n  baseline-shift: sub;\r\n  font-size: 12px;\r\n  font-family: sans-serif;\r\n  fill: #2d8cf0;\r\n  font-size: 13px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.svg-title-style-default {\r\n  text-anchor: middle;\r\n  baseline-shift: sub;\r\n  font-size: 12px;\r\n  font-family: sans-serif;\r\n  fill: #000;\r\n  font-size: 13px;\r\n  cursor: default;\r\n  font-weight: bold;\r\n}\r\n\r\n.svg-title-style:hover {\r\n  fill: red;\r\n}\r\n\r\n.svg-text-common-style {\r\n  text-anchor: middle;\r\n  baseline-shift: sub;\r\n  font-size: 5px;\r\n  font-family: sans-serif;\r\n}\r\n\r\n.svg-text-common-style:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.path {\r\n  stroke-dasharray: 10;\r\n  stroke: rgb(253, 7, 7) !important;\r\n  stroke-width: 2px !important;\r\n  animation: dash 2s linear 0s infinite;\r\n}\r\n\r\n@keyframes dash {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.transTypeRel_style {\r\n  fill: none;\r\n  stroke: #00ae9d;\r\n  stroke-width: 1.5;\r\n  // stroke-dasharray: 2;\r\n}\r\n\r\n.vertical-center-modal {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .ivu-modal {\r\n    top: 0;\r\n  }\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/flow/pulseGraph.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flow_container right_container\"},[(_vm.spinShow)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}}):_vm._e(),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"flow-box\"}},[_c('RadioGroup',{staticClass:\"taskbtn\",attrs:{\"size\":\"large\"},on:{\"on-change\":_vm.radioGroupChange},model:{value:(_vm.radioGroupLabel),callback:function ($$v) {_vm.radioGroupLabel=$$v},expression:\"radioGroupLabel\"}},[_c('Radio',{attrs:{\"label\":\"mytask\"}},[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"),_c('span',[_vm._v(\"我的任务\")])]),_vm._v(\" \"),_c('i',{staticClass:\"vertical-divide\"}),_vm._v(\" \"),_c('Radio',{attrs:{\"label\":\"teamtask\"}},[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"),_c('span',[_vm._v(\"团队任务\")])])],1),_vm._v(\" \"),_c('RadioGroup',{staticClass:\"taskbtn_1\",attrs:{\"size\":\"large\"},on:{\"on-change\":_vm.radioGroupChangeDoneOrTodo},model:{value:(_vm.rodioGroupDoOrNot),callback:function ($$v) {_vm.rodioGroupDoOrNot=$$v},expression:\"rodioGroupDoOrNot\"}},[_c('i',{staticClass:\"vertical-divide\"}),_vm._v(\" \"),_c('Radio',{attrs:{\"label\":\"todo\"}},[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"),_c('span',[_vm._v(\"未完成\")])]),_vm._v(\" \"),_c('i',{staticClass:\"vertical-divide\"}),_vm._v(\" \"),_c('Radio',{attrs:{\"label\":\"done\"}},[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\" \"),_c('span',[_vm._v(\"已完成\")])])],1),_vm._v(\" \"),_c('div',{staticClass:\"divide\"}),_vm._v(\" \"),_c('div',{staticClass:\"business_item\",staticStyle:{\"width\":\"50px\"}},_vm._l((_vm.dataItem),function(item,index){return _c('div',{key:index,staticClass:\"left-name\"},[_c('span')])})),_vm._v(\" \"),_c('div',{staticClass:\"svg_box\",on:{\"click\":_vm.outBlur}},[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"version\":\"1.1\"}},[_c('defs',[_c('filter',{attrs:{\"id\":\"f1\",\"x\":\"0\",\"y\":\"0\",\"width\":\"200%\",\"height\":\"200%\"}},[_c('feOffset',{attrs:{\"result\":\"offOut\",\"in\":\"SourceGraphic\",\"dx\":\"0\",\"dy\":\"0\"}}),_vm._v(\" \"),_c('feColorMatrix',{attrs:{\"result\":\"matrixOut\",\"in\":\"offOut\",\"type\":\"matrix\",\"values\":\"0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0\"}}),_vm._v(\" \"),_c('feGaussianBlur',{attrs:{\"result\":\"blurOut\",\"in\":\"matrixOut\",\"stdDeviation\":\"5\"}}),_vm._v(\" \"),_c('feBlend',{attrs:{\"in\":\"SourceGraphic\",\"in2\":\"blurOut\",\"mode\":\"normal\"}})],1)]),_vm._v(\" \"),_c('defs',[_c('marker',{attrs:{\"id\":\"arrow\",\"markerUnits\":\"userSpaceOnUse\",\"markerWidth\":\"15\",\"markerHeight\":\"15\",\"viewBox\":\"0 0 15 15\",\"refX\":\"6\",\"refY\":\"6\",\"orient\":\"auto\"}},[_c('path',{staticStyle:{\"fill\":\"#00ae9d\"},attrs:{\"d\":\"M2,0 L10,6 L2,12 L6,6 L2,0\"}})])]),_vm._v(\" \"),_c('defs',[_c('marker',{attrs:{\"id\":\"arrow1\",\"markerUnits\":\"userSpaceOnUse\",\"markerWidth\":\"15\",\"markerHeight\":\"15\",\"viewBox\":\"0 0 15 15\",\"refX\":\"6\",\"refY\":\"6\",\"orient\":\"auto\"}},[_c('path',{staticStyle:{\"fill\":\"#f38113\"},attrs:{\"d\":\"M2,0 L10,6 L2,12 L6,6 L2,0\"}})])]),_vm._v(\" \"),_c('defs',[_c('marker',{attrs:{\"id\":\"arrow_hight_color\",\"markerUnits\":\"userSpaceOnUse\",\"markerWidth\":\"15\",\"markerHeight\":\"15\",\"viewBox\":\"0 0 15 15\",\"refX\":\"6\",\"refY\":\"6\",\"orient\":\"auto\"}},[_c('path',{staticStyle:{\"fill\":\"red\"},attrs:{\"d\":\"M2,0 L10,6 L2,12 L6,6 L2,0\"}})])]),_vm._v(\" \"),_c('defs',[_c('linearGradient',{attrs:{\"id\":\"orange_red\",\"x1\":\"0%\",\"y1\":\"0%\",\"x2\":\"0%\",\"y2\":\"100%\"}},[_c('stop',{staticStyle:{\"stop-color\":\"#ffdfd9\",\"stop-opacity\":\"1\"},attrs:{\"offset\":\"0%\"}}),_vm._v(\" \"),_c('stop',{staticStyle:{\"stop-color\":\"#ff8069 stop-opacity:1\"},attrs:{\"offset\":\"100%\"}})],1)],1),_vm._v(\" \"),_vm._l((_vm.dataItem),function(business,i){return _c('g',{key:i},_vm._l((business.child),function(item,j){return _c('g',{key:j},[_c('image',{class:{ 'svg-image-style-opacity': !item.isPermitted, 'svg-image-style': true },attrs:{\"x\":40+(_vm.baseLength+_vm.graphSpace)*item.sort,\"y\":50+170*i,\"width\":_vm.baseLength,\"height\":_vm.baseLength,\"xlink:href\":item.icon,\"rx\":\"10\"},on:{\"click\":function($event){$event.stopPropagation();_vm.doAction(item)}}}),_vm._v(\" \"),_c('a',{class:item.type==='list'?'svg-title-style':'svg-title-style-default',on:{\"click\":function($event){_vm.redirectTo(item)}}},[_c('text',{attrs:{\"x\":40+_vm.baseLength/2+(_vm.baseLength+_vm.graphSpace)*item.sort,\"y\":65+_vm.baseLength+170*i}},[_vm._v(\"\\n                \"+_vm._s(item.value)+\"\\n              \")])]),_vm._v(\" \"),(item.type==='list' && item.listId in _vm.defaultDisplayTask)?_c('circle',{attrs:{\"cx\":40+(_vm.baseLength+_vm.graphSpace)*item.sort,\"cy\":item.type==='list'?50+170*i:45+170*i,\"r\":\"12\",\"stroke-width\":\"1\",\"fill\":\"red\"}}):_vm._e(),_vm._v(\" \"),(item.type==='list')?_c('text',{staticClass:\"svg-text-common-style\",staticStyle:{\"font-size\":\"12px\"},attrs:{\"x\":40+(_vm.baseLength+_vm.graphSpace)*item.sort,\"y\":item.type==='list'?45+170*i:45+170*i,\"fill\":\"#fff\",\"listId\":item.listId,\"taskValue\":item.value},on:{\"click\":_vm.opentask}},[_vm._v(\"\\n              \"+_vm._s(_vm.defaultDisplayTask[item.listId])+\"\\n            \")]):_vm._e()])}))}),_vm._v(\" \"),_vm._l((_vm.pointList),function(point){return _c('g',{key:point.id},[_c('polyline',{class:_vm.waterFlow[point.id]!==undefined?'path':'',staticStyle:{\"fill\":\"none\",\"stroke\":\"#f38113\",\"stroke-width\":\"0.8\"},attrs:{\"points\":point.value,\"marker-end\":_vm.waterFlow[point.id]!==undefined?'url(#arrow_hight_color)':'url(#arrow1)'}})])}),_vm._v(\" \"),_vm._l((_vm.transTypePointList),function(point){return _c('g',{key:point.id},[_c('polyline',{staticClass:\"transTypeRel_style\",attrs:{\"points\":point.value,\"marker-end\":\"url(#arrow)\"}})])})],2)])],1),_vm._v(\" \"),_c('task-modal',{attrs:{\"modal\":_vm.modal,\"listId\":_vm.pageListId,\"taskValue\":_vm.taskValue,\"type\":_vm.type},on:{\"emitModal\":_vm.emitModal}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-03982953\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/flow/pulseGraph.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-03982953\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./pulseGraph.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./pulseGraph.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./pulseGraph.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-03982953\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./pulseGraph.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/flow/pulseGraph.vue\n// module id = null\n// module chunks = ","'use strict';\n\nvar C = require('../constants/constants');\n\n/**\n * Makes sure that all functionality is resubscribed on reconnect. Subscription is called\n * when the connection drops - which seems counterintuitive, but in fact just means\n * that the re-subscription message will be added to the queue of messages that\n * need re-sending as soon as the connection is re-established.\n *\n * Resubscribe logic should only occur once per connection loss\n *\n * @param {Client} client          The deepstream client\n * @param {Function} reconnect     Function to call to allow resubscribing\n *\n * @constructor\n */\nvar ResubscribeNotifier = function ResubscribeNotifier(client, resubscribe) {\n  this._client = client;\n  this._resubscribe = resubscribe;\n\n  this._isReconnecting = false;\n  this._connectionStateChangeHandler = this._handleConnectionStateChanges.bind(this);\n  this._client.on('connectionStateChanged', this._connectionStateChangeHandler);\n};\n\n/**\n * Call this whenever this functionality is no longer needed to remove links\n *\n * @returns {void}\n */\nResubscribeNotifier.prototype.destroy = function () {\n  this._client.removeListener('connectionStateChanged', this._connectionStateChangeHandler);\n  this._connectionStateChangeHandler = null;\n  this._client = null;\n};\n\n/**\n* Check whenever the connection state changes if it is in reconnecting to resubscribe\n* @private\n* @returns {void}\n*/\nResubscribeNotifier.prototype._handleConnectionStateChanges = function () {\n  var state = this._client.getConnectionState();\n\n  if (state === C.CONNECTION_STATE.RECONNECTING && this._isReconnecting === false) {\n    this._isReconnecting = true;\n  }\n  if (state === C.CONNECTION_STATE.OPEN && this._isReconnecting === true) {\n    this._isReconnecting = false;\n    this._resubscribe();\n  }\n};\n\nmodule.exports = ResubscribeNotifier;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/utils/resubscribe-notifier.js\n// module id = m3N9\n// module chunks = 1 2","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar C = require('../constants/constants');\n\nvar SEP = C.MESSAGE_PART_SEPERATOR;\n\n/**\n * Creates a deepstream message string, based on the\n * provided parameters\n *\n * @param   {String} topic  One of CONSTANTS.TOPIC\n * @param   {String} action One of CONSTANTS.ACTIONS\n * @param   {Array} data An array of strings or JSON-serializable objects\n *\n * @returns {String} deepstream message string\n */\nexports.getMsg = function (topic, action, data) {\n  if (data && !(data instanceof Array)) {\n    throw new Error('data must be an array');\n  }\n  var sendData = [topic, action];\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      if (_typeof(data[i]) === 'object') {\n        sendData.push(JSON.stringify(data[i]));\n      } else {\n        sendData.push(data[i]);\n      }\n    }\n  }\n\n  return sendData.join(SEP) + C.MESSAGE_SEPERATOR;\n};\n\n/**\n * Converts a serializable value into its string-representation and adds\n * a flag that provides instructions on how to deserialize it.\n *\n * Please see messageParser.convertTyped for the counterpart of this method\n *\n * @param {Mixed} value\n *\n * @public\n * @returns {String} string representation of the value\n */\nexports.typed = function (value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  if (type === 'string') {\n    return C.TYPES.STRING + value;\n  }\n\n  if (value === null) {\n    return C.TYPES.NULL;\n  }\n\n  if (type === 'object') {\n    return C.TYPES.OBJECT + JSON.stringify(value);\n  }\n\n  if (type === 'number') {\n    return C.TYPES.NUMBER + value.toString();\n  }\n\n  if (value === true) {\n    return C.TYPES.TRUE;\n  }\n\n  if (value === false) {\n    return C.TYPES.FALSE;\n  }\n\n  if (value === undefined) {\n    return C.TYPES.UNDEFINED;\n  }\n\n  throw new Error('Can\\'t serialize type ' + value);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/message/message-builder.js\n// module id = pX2W\n// module chunks = 1 2","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url/util.js\n// module id = qOJP\n// module chunks = 1 2","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.array.from.js\n// module id = qyJz\n// module chunks = 1 2","'use strict';\n\nvar C = require('../constants/constants');\nvar EventEmitter = require('component-emitter2');\n\n/**\n * Subscriptions to events are in a pending state until deepstream acknowledges\n * them. This is a pattern that's used by numerour classes. This registry aims\n * to centralise the functionality necessary to keep track of subscriptions and\n * their respective timeouts.\n *\n * @param {Client} client          The deepstream client\n * @param {String} topic           Constant. One of C.TOPIC\n * @param {Number} timeoutDuration The duration of the timeout in milliseconds\n *\n * @extends {EventEmitter}\n * @constructor\n */\nvar AckTimeoutRegistry = function AckTimeoutRegistry(client, options) {\n  this._options = options;\n  this._client = client;\n  this._register = {};\n  this._counter = 1;\n  client.on('connectionStateChanged', this._onConnectionStateChanged.bind(this));\n};\n\nEventEmitter(AckTimeoutRegistry.prototype); // eslint-disable-line\n\n/**\n * Add an entry\n *\n * @param {String} name An identifier for the subscription, e.g. a record name or an event name.\n *\n * @public\n * @returns {Number} The timeout identifier\n */\nAckTimeoutRegistry.prototype.add = function (timeout) {\n  var timeoutDuration = timeout.timeout || this._options.subscriptionTimeout;\n\n  if (this._client.getConnectionState() !== C.CONNECTION_STATE.OPEN || timeoutDuration < 1) {\n    return -1;\n  }\n\n  this.remove(timeout);\n  timeout.ackId = this._counter++;\n  timeout.event = timeout.event || C.EVENT.ACK_TIMEOUT;\n  timeout.__timeout = setTimeout(this._onTimeout.bind(this, timeout), timeoutDuration);\n  this._register[this._getUniqueName(timeout)] = timeout;\n  return timeout.ackId;\n};\n\n/**\n * Remove an entry\n *\n * @param {String} name An identifier for the subscription, e.g. a record name or an event name.\n *\n * @public\n * @returns {void}\n */\nAckTimeoutRegistry.prototype.remove = function (timeout) {\n  if (timeout.ackId) {\n    for (var uniqueName in this._register) {\n      if (timeout.ackId === this._register[uniqueName].ackId) {\n        this.clear({\n          topic: this._register[uniqueName].topic,\n          action: this._register[uniqueName].action,\n          data: [this._register[uniqueName].name]\n        });\n      }\n    }\n  }\n\n  if (this._register[this._getUniqueName(timeout)]) {\n    this.clear({\n      topic: timeout.topic,\n      action: timeout.action,\n      data: [timeout.name]\n    });\n  }\n};\n\n/**\n * Processes an incoming ACK-message and removes the corresponding subscription\n *\n * @param   {Object} message A parsed deepstream ACK message\n *\n * @public\n * @returns {void}\n */\nAckTimeoutRegistry.prototype.clear = function (message) {\n  var uniqueName = void 0;\n  if (message.action === C.ACTIONS.ACK && message.data.length > 1) {\n    uniqueName = message.topic + message.data[0] + (message.data[1] ? message.data[1] : '');\n  } else {\n    uniqueName = message.topic + message.action + message.data[0];\n  }\n\n  if (this._register[uniqueName]) {\n    clearTimeout(this._register[uniqueName].__timeout);\n  }\n\n  delete this._register[uniqueName];\n};\n\n/**\n * Will be invoked if the timeout has occured before the ack message was received\n *\n * @param {Object} name The timeout object registered\n *\n * @private\n * @returns {void}\n */\nAckTimeoutRegistry.prototype._onTimeout = function (timeout) {\n  delete this._register[this._getUniqueName(timeout)];\n\n  if (timeout.callback) {\n    delete timeout.__timeout;\n    delete timeout.timeout;\n    timeout.callback(timeout);\n  } else {\n    var msg = 'No ACK message received in time' + (timeout.name ? ' for ' + timeout.name : '');\n    this._client._$onError(timeout.topic, timeout.event, msg);\n  }\n};\n\n/**\n * Returns a unique name from the timeout\n *\n * @private\n * @returns {void}\n */\nAckTimeoutRegistry.prototype._getUniqueName = function (timeout) {\n  return timeout.topic + timeout.action + (timeout.name ? timeout.name : '');\n};\n\n/**\n * Remote all timeouts when connection disconnects\n *\n * @private\n * @returns {void}\n */\nAckTimeoutRegistry.prototype._onConnectionStateChanged = function (connectionState) {\n  if (connectionState !== C.CONNECTION_STATE.OPEN) {\n    for (var uniqueName in this._register) {\n      clearTimeout(this._register[uniqueName].__timeout);\n    }\n  }\n};\n\nmodule.exports = AckTimeoutRegistry;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/utils/ack-timeout-registry.js\n// module id = trS8\n// module chunks = 1 2","<template>\r\n  <div class=\"card ivu-card ivu-card-bordered\">\r\n    <Poptip class=\"badge-custom\" width=\"560\" placement=\"right-end\" @on-popper-show=\"popperShow\">\r\n      <Badge :count=\"taskCount\"></Badge>\r\n      <div slot=\"title\">\r\n        <h3>{{appinfo.text+' - 待办任务'}}</h3>\r\n      </div>\r\n      <div slot=\"content\" class=\"api\">\r\n        <Table :columns=\"columns\" :data=\"columnData\"></Table>\r\n        <div style=\"margin: 10px;overflow: hidden\">\r\n          <div style=\"float: right;\">\r\n            <Page :total=\"pageTotal\" :current=\"currentPage\" size=\"small\" :page-size=\"pageSize\" @on-change=\"changeCurrentPage\" show-total></Page>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Poptip>\r\n    <img :src=\"appinfo.icon\" />\r\n    <div @click=\"redirectTo(appinfo)\" class=\"content\">\r\n      <h5>{{appinfo.text}}</h5>\r\n      <span>{{appinfo.transName}}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAppTaskCount } from \"@/services/flowService\";\r\nexport default {\r\n  props: [\"appinfo\", \"allTaskCount\"],\r\n  data() {\r\n    return {\r\n      taskCount: 0,\r\n      columns: [\r\n        {\r\n          title: \"交易号\",\r\n          key: \"transCode\",\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            return h(\r\n              \"a\",\r\n              {\r\n                attrs: {\r\n                  href: \"/Form/index.html?data=\" + params.row.transCode,\r\n                  target: \"_blank\"\r\n                }\r\n              },\r\n              params.row.transCode\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: \"创建者\",\r\n          key: \"creatorName\",\r\n          sortable: true\r\n        },\r\n        {\r\n          title: \"任务创建时间\",\r\n          key: \"crtTime\",\r\n          sortable: true,\r\n          render: (h, params) => {\r\n            //时间戳转换为日期格式\r\n            function formatDateTime(inputTime) {\r\n              let date = new Date(inputTime);\r\n              let y = date.getFullYear();\r\n              let m = date.getMonth() + 1;\r\n              m = m < 10 ? \"0\" + m : m;\r\n              let d = date.getDate();\r\n              d = d < 10 ? \"0\" + d : d;\r\n              let h = date.getHours();\r\n              h = h < 10 ? \"0\" + h : h;\r\n              let minute = date.getMinutes();\r\n              let second = date.getSeconds();\r\n              minute = minute < 10 ? \"0\" + minute : minute;\r\n              second = second < 10 ? \"0\" + second : second;\r\n              return (\r\n                y + \"-\" + m + \"-\" + d + \" \" + h + \":\" + minute + \":\" + second\r\n              );\r\n            }\r\n            return h(\"span\", formatDateTime(params.row.crtTime));\r\n          }\r\n        }\r\n      ],\r\n      columnData: [],\r\n      loading: true,\r\n      pageTotal: 0, //table总数\r\n      pageSize: 5,\r\n      currentPage: 1, //table当前页\r\n      pageListId: \"\",\r\n      modal: false //弹出框是否显示\r\n    };\r\n  },\r\n  created() {\r\n    if (!~this.appinfo.icon.indexOf(\"/dist/\")) {\r\n      this.appinfo.icon = \"/dist/\" + this.appinfo.icon;\r\n    }\r\n    let listId = this.appinfo.url.split(\"/\")[1];\r\n    let f = this.allTaskCount.filter(f => {\r\n      return f.listId === listId;\r\n    });\r\n    if (f.length > 0) {\r\n      this.taskCount = f[0].total;\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    allTaskCount: {\r\n      handler: function(val, oldValue) {\r\n        let listId = this.appinfo.url.split(\"/\")[1];\r\n        let f = val.filter(f => {\r\n          return f.listId === listId;\r\n        });\r\n        if (f.length > 0) {\r\n          this.taskCount = f[0].total;\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 新怡环境下应用链接跳转\r\n     */\r\n    redirectTo: function(appInfo) {\r\n      let url = appInfo.url;\r\n      if (appInfo.target === \"_blank\") {\r\n        window.open(url, \"_blank\");\r\n      } else {\r\n        if (~appInfo.url.indexOf(\"outlink\")) {\r\n          url = appInfo.url;\r\n        } else if (~appInfo.url.indexOf(\"app\")) {\r\n          url = \"appReport/\" + url;\r\n        } else {\r\n          url = \"report/\" + url;\r\n        }\r\n        window.top.postMessage(\r\n          {\r\n            type: \"redirect\",\r\n            url: url\r\n          },\r\n          \"*\"\r\n        );\r\n      }\r\n    },\r\n\r\n    popperShow(e) {\r\n      this.pageListId = this.appinfo.url.split(\"/\")[1];\r\n      let params = {\r\n        type: \"myToDo\",\r\n        page: this.currentPage,\r\n        listId: this.pageListId,\r\n        limit: this.pageSize\r\n      };\r\n      this.modal = true;\r\n      getAppTaskCount(params).then(res => {\r\n        this.pageTotal = res.total;\r\n        if (res.tableContent.length > 0) {\r\n          this.columnData = res.tableContent;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 分页加载\r\n     */\r\n    changeCurrentPage(currentPage) {\r\n      let params = {\r\n        type: \"myToDo\",\r\n        page: currentPage,\r\n        listId: this.pageListId,\r\n        limit: this.pageSize\r\n      };\r\n      this.loading = true;\r\n      getAppTaskCount(params).then(res => {\r\n        if (res.tableContent.length > 0) {\r\n          this.columnData = res.tableContent;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n@import \"./common.less\";\r\n\r\n.card {\r\n  height: 70px;\r\n  border-radius: 3px;\r\n  padding: 10px 12px;\r\n  margin: 10px 0;\r\n\r\n  img {\r\n    height: 50px;\r\n    width: 50px;\r\n    z-index: 1;\r\n    cursor: pointer;\r\n    // position: relative;\r\n  }\r\n\r\n  img:hover {\r\n    cursor: auto;\r\n  }\r\n  .content {\r\n    cursor: pointer;\r\n    font-size: @card-text-font-size;\r\n    width: 60%;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    z-index: 1;\r\n    white-space: nowrap;\r\n    color: #000;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 80px;\r\n    transform: translateY(-50%);\r\n\r\n    h5 {\r\n      position: relative;\r\n      z-index: -99;\r\n      font-size: 16px;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n    }\r\n\r\n    span {\r\n      font-size: 12px;\r\n      color: #918e8e;\r\n    }\r\n  }\r\n\r\n  .badge-custom {\r\n    top: -13px;\r\n    cursor: pointer;\r\n    left: -10px;\r\n    z-index: 10;\r\n    position: absolute;\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n.api {\r\n  position: relative;\r\n  z-index: 100;\r\n}\r\n\r\n.card:hover {\r\n  -webkit-transition: box-shadow 0.3s cubic-bezier(0.55, 0, 0.1, 1) 0s;\r\n  -moz-transition: box-shadow 0.3s cubic-bezier(0.55, 0, 0.1, 1) 0s;\r\n  -o-transition: box-shadow 0.3s cubic-bezier(0.55, 0, 0.1, 1) 0s;\r\n  transition: box-shadow 0.3s cubic-bezier(0.55, 0, 0.1, 1) 0s;\r\n  box-shadow: 0 15px 10px 0 rgba(0, 0, 0, 0.1), 0 2px 2px 0 rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.ivu-card {\r\n  background: #fff;\r\n  font-size: 16px;\r\n  position: relative;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n.ivu-card-bordered {\r\n  border: 1px solid #dddee1;\r\n  border-color: #e9eaec;\r\n  box-shadow: 4px 4px 10px #bbb8b8;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/card/CardItem.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card ivu-card ivu-card-bordered\"},[_c('Poptip',{staticClass:\"badge-custom\",attrs:{\"width\":\"560\",\"placement\":\"right-end\"},on:{\"on-popper-show\":_vm.popperShow}},[_c('Badge',{attrs:{\"count\":_vm.taskCount}}),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('h3',[_vm._v(_vm._s(_vm.appinfo.text+' - 待办任务'))])]),_vm._v(\" \"),_c('div',{staticClass:\"api\",attrs:{\"slot\":\"content\"},slot:\"content\"},[_c('Table',{attrs:{\"columns\":_vm.columns,\"data\":_vm.columnData}}),_vm._v(\" \"),_c('div',{staticStyle:{\"margin\":\"10px\",\"overflow\":\"hidden\"}},[_c('div',{staticStyle:{\"float\":\"right\"}},[_c('Page',{attrs:{\"total\":_vm.pageTotal,\"current\":_vm.currentPage,\"size\":\"small\",\"page-size\":_vm.pageSize,\"show-total\":\"\"},on:{\"on-change\":_vm.changeCurrentPage}})],1)])],1)],1),_vm._v(\" \"),_c('img',{attrs:{\"src\":_vm.appinfo.icon}}),_vm._v(\" \"),_c('div',{staticClass:\"content\",on:{\"click\":function($event){_vm.redirectTo(_vm.appinfo)}}},[_c('h5',[_vm._v(_vm._s(_vm.appinfo.text))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.appinfo.transName))])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0873c1dc\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/card/CardItem.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0873c1dc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CardItem.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CardItem.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CardItem.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0873c1dc\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CardItem.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0873c1dc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/card/CardItem.vue\n// module id = null\n// module chunks = ","<template>\r\n  <row class=\"menu-field-set\" :gutter=\"16\">\r\n    <label>{{menuItem.text}}</label>\r\n\r\n    <Col span=\"4\" v-for=\"(item,j) in menuItem.children\" :key=\"j\" >\r\n    <card-item :appinfo=\"item\" :allTaskCount=\"allTaskCount\">\r\n    </card-item>\r\n    </Col>\r\n\r\n  </row>\r\n</template>\r\n\r\n<script>\r\nimport CardItem from \"@/components/card/CardItem\";\r\n\r\nexport default {\r\n  props: [\"menuItem\", \"allTaskCount\"],\r\n\r\n  components: {\r\n    CardItem\r\n  },\r\n  created() {}\r\n};\r\n</script>\r\n\r\n<style lang ='less' scoped>\r\n@import './common.less';\r\n\r\n\r\n@media screen and (max-width: 1023px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 33.333333% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width:1024px) and (max-width: 1466px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 25% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width:1467px) and (max-width:1680px) {\r\n   .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 20% !important;\r\n  }\r\n}\r\n\r\n.menu-field-set {\r\n  margin-left: 0px !important;\r\n  margin-right: 0px !important;\r\n\r\n  label {\r\n    display: block;\r\n    margin-left: 1%;\r\n    color: #333;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .menu-box {\r\n    .menu-item {\r\n      overflow: hidden;\r\n      padding-bottom: 2%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/card/CardList.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('row',{staticClass:\"menu-field-set\",attrs:{\"gutter\":16}},[_c('label',[_vm._v(_vm._s(_vm.menuItem.text))]),_vm._v(\" \"),_vm._l((_vm.menuItem.children),function(item,j){return _c('Col',{key:j,attrs:{\"span\":\"4\"}},[_c('card-item',{attrs:{\"appinfo\":item,\"allTaskCount\":_vm.allTaskCount}})],1)})],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-fb077576\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/card/CardList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-fb077576\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CardList.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CardList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CardList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-fb077576\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CardList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-fb077576\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/card/CardList.vue\n// module id = null\n// module chunks = ","<template>\r\n\r\n  <div class=\"wrap\">\r\n    <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\r\n    <div class=\"main-header\">\r\n      <div class=\"main-header-nav\">\r\n        <Row>\r\n          <Col span=\"24\">\r\n          <ButtonGroup class=\"fr\">\r\n            <!-- <Button size=\"small\" @click=\"goAppManage\" type=\"ghost\" caseId='apps' v-if=\"isAdmin\">\r\n              <i class=\"iconfont\">&#xe6cf;</i>\r\n              应用管理\r\n            </Button> -->\r\n            <Button size=\"small\" @click=\"changeView\" type=\"ghost\" caseId='apps'>\r\n              <i class=\"iconfont\">&#xe608;</i>\r\n              全部应用\r\n            </Button>\r\n            <Button size=\"small\" v-for=\"(pulse,i) in  pulseGraphLlistr\" :key=\"i\" type=\"ghost\" @click=\"changeView\" :caseId=\"pulse.id\">\r\n               <i class=\"iconfont\">&#xe64c;</i>\r\n              {{pulse.name}}\r\n            </Button>\r\n          </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"cutView\">\r\n      <section v-for=\"(menuList,i) in menuList\" :key=\"i\" class=\"bg-gray-lighter\">\r\n\r\n        <row class=\"menu-group\">\r\n          <row>\r\n            <h3 class=\"menu-group-title\">{{menuList.text}}</h3>\r\n          </row>\r\n\r\n          <row :gutter=\"16\">\r\n            <Col v-if=\"item.leaf\" v-for=\"(item,j) in menuList.children\" :key=\"j\" span=\"4\">\r\n            <card-item v-if=\"item.leaf\" :appinfo=\"item\" :allTaskCount=\"allTaskCount\"></card-item>\r\n            </Col>\r\n            <card-list v-else :menuItem=\"item\" :index='j' :allTaskCount=\"allTaskCount\"></card-list>\r\n          </row>\r\n        </row>\r\n      </section>\r\n    </div>\r\n    <div v-for=\"(pulseGraph,index) in pulseGraphLlistr\" :key=\"index\" v-if=\"!cutView && pulseGraph.id === caseId\">\r\n      <pulse-graph :caseId=\"pulseGraph.id\"></pulse-graph>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as ds from \"deepstream.io-client-js\";\r\nimport CardList from \"@/components/card/CardList\";\r\nimport CardItem from \"@/components/card/CardItem\";\r\nimport { getToken } from \"@/utils/utils\";\r\nimport PulseGraph from \"@/views/flow/pulseGraph\";\r\nimport {\r\n  getMenu,\r\n  getPulsationDiagramCase,\r\n  getCurrentUserAllTasks,\r\n  getPulseGraph,\r\n  getMyFavorite\r\n} from \"@/services/flowService\";\r\n\r\nexport default {\r\n  components: {\r\n    CardList,\r\n    CardItem,\r\n    PulseGraph\r\n  },\r\n  data() {\r\n    return {\r\n      spinShow: true,\r\n      cutView: true,\r\n      menuList: [],\r\n      favoriteMenu:{\r\n        leaf:false,\r\n        text:\"常用应用\",\r\n        children:[]\r\n      },\r\n      abc: 0,\r\n      caseId: \"\",\r\n      pulseGraphLlistr: [],\r\n      allTaskCount: [],\r\n      ds: ds(\"wss://sunwingfood.roletask.com:6021/deepstream\"),\r\n      books$$: null,\r\n      isAdmin:(this.$currentUser.isSysRoleList && Array.isArray(this.$currentUser.isSysRoleList))\r\n        ? this.$currentUser.isSysRoleList.filter(function(o) {\r\n            return o.id == 1;\r\n          }).length\r\n        : false\r\n    };\r\n  },\r\n  mounted() {\r\n    this.subscribeMessage();\r\n\r\n    getMyFavorite().then(res=>{\r\n      if(res.tableContent.length>0){\r\n        this.favoriteMenu.children = res.tableContent;\r\n      }\r\n    })\r\n\r\n    //获取当前用户所有待办任务\r\n    getCurrentUserAllTasks().then(res => {\r\n      this.allTaskCount = res.tableContent;\r\n      //获取菜单信息\r\n      getMenu().then(res => {\r\n        \r\n      this.urlMd5(res);\r\n\r\n        if(this.favoriteMenu.children.length>0){\r\n          this.menuList = [this.favoriteMenu,...res];\r\n        }else{\r\n          this.menuList =res;\r\n        }\r\n        this.spinShow = false;\r\n      });\r\n    });\r\n\r\n    getPulsationDiagramCase().then(res => {\r\n      this.pulseGraphLlistr = res.tableContent;\r\n    });\r\n  },\r\n\r\n  methods: {\r\n    changeView(event) {\r\n      let caseId = event.currentTarget.getAttribute(\"caseid\");\r\n\r\n      if (caseId === \"apps\") {\r\n        this.cutView = true;\r\n      } else {\r\n        this.cutView = false;\r\n        this.caseId = Number(caseId);\r\n      }\r\n    },\r\n\r\n    goAppManage() {\r\n      window.top.location.hash = \"#page/AppSetting\";\r\n    },\r\n\r\n    //订阅消息\r\n    subscribeMessage: function() {\r\n      let currentUser = this.$currentUser;\r\n      if(currentUser.nickname && currentUser.Id){\r\n        let username = [currentUser.nickname, currentUser.userId].join(\"|\");\r\n        let token = getToken();\r\n        //注册deepStream\r\n        this.ds.login(\r\n          {\r\n            token: token,\r\n            username: username\r\n          },\r\n          data => {\r\n            console.log(\"connect success!\");\r\n          }\r\n        );\r\n        //消息订阅\r\n        this.ds.event.subscribe(\"taskChange/\" + token, msg => {\r\n          this.allTaskCount = msg.tableContent;\r\n        });\r\n      }\r\n    },\r\n\r\n    //处理链接过长时\r\n    urlMd5:function(res){\r\n      let loop = function(res) {\r\n          let l = res.length,\r\n            item;\r\n\r\n          while (l--) {\r\n            item = res[l];\r\n            if (item.url && item.target == \"_iframe\") {\r\n              let url = item.url,\r\n                outlinks = {},\r\n                md5Str = window.top.MD5(url),\r\n                newUrl = \"outlink/\" + md5Str;\r\n              item.url = newUrl;\r\n            }\r\n            if (item.children) loop(item.children);\r\n          }\r\n\r\n        };\r\n        loop(res);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.fr {\r\n  float: right;\r\n}\r\n.menuTitle {\r\n  font-size: 28;\r\n  font-weight: 400;\r\n}\r\n\r\n@media screen and (max-width: 1023px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 33.333333% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 1024px) and (max-width: 1466px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 25% !important;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 1467px) and (max-width: 1680px) {\r\n  .ivu-col-span-4 {\r\n    display: block !important;\r\n    width: 20% !important;\r\n  }\r\n}\r\n\r\n.wrap {\r\n  top: 40px;\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: #ddd;\r\n}\r\n\r\n.bg-gray-lighter {\r\n  background-color: #f0f0f0;\r\n  padding: 0 10%;\r\n}\r\n\r\n.bg-white-lighter {\r\n  background-color: #fff;\r\n  padding: 0 10%;\r\n}\r\n\r\n.menu-group {\r\n  margin-bottom: 0px;\r\n  //   background-color: #fff;\r\n  padding: 5px 10px 20px;\r\n  &-title {\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    margin-bottom: 10px;\r\n    text-align: center;\r\n  }\r\n\r\n  .col-span {\r\n    span: 6;\r\n  }\r\n}\r\n\r\n.main-header {\r\n  position: fixed;\r\n  \r\n  top: 0px;\r\n  height: 40px;\r\n  width: 100%;\r\n  padding: 0 10%;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid #9e9e9e57;\r\n  z-index: 997;\r\n  padding: 5px;\r\n  &-nav {\r\n    button {\r\n      cursor: pointer;\r\n      -webkit-box-align: center;\r\n      align-items: center;\r\n      font-size: 14px;\r\n      text-align: center;\r\n      border-radius: 0px;\r\n    }\r\n  }\r\n}\r\n&-container {\r\n  background: #fff;\r\n  margin: 80px auto 15px;\r\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n&-content {\r\n  padding: 20px 25px;\r\n  position: relative;\r\n}\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/home/HomePage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrap\"},[(_vm.spinShow)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}}):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"main-header\"},[_c('div',{staticClass:\"main-header-nav\"},[_c('Row',[_c('Col',{attrs:{\"span\":\"24\"}},[_c('ButtonGroup',{staticClass:\"fr\"},[_c('Button',{attrs:{\"size\":\"small\",\"type\":\"ghost\",\"caseId\":\"apps\"},on:{\"click\":_vm.changeView}},[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\"\\n            全部应用\\n          \")]),_vm._v(\" \"),_vm._l((_vm.pulseGraphLlistr),function(pulse,i){return _c('Button',{key:i,attrs:{\"size\":\"small\",\"type\":\"ghost\",\"caseId\":pulse.id},on:{\"click\":_vm.changeView}},[_c('i',{staticClass:\"iconfont\"},[_vm._v(\"\")]),_vm._v(\"\\n            \"+_vm._s(pulse.name)+\"\\n          \")])})],2)],1)],1)],1)]),_vm._v(\" \"),(_vm.cutView)?_c('div',_vm._l((_vm.menuList),function(menuList,i){return _c('section',{key:i,staticClass:\"bg-gray-lighter\"},[_c('row',{staticClass:\"menu-group\"},[_c('row',[_c('h3',{staticClass:\"menu-group-title\"},[_vm._v(_vm._s(menuList.text))])]),_vm._v(\" \"),_c('row',{attrs:{\"gutter\":16}},_vm._l((menuList.children),function(item,j){return (item.leaf)?_c('Col',{key:j,attrs:{\"span\":\"4\"}},[(item.leaf)?_c('card-item',{attrs:{\"appinfo\":item,\"allTaskCount\":_vm.allTaskCount}}):_vm._e()],1):_c('card-list',{attrs:{\"menuItem\":item,\"index\":j,\"allTaskCount\":_vm.allTaskCount}})}))],1)],1)})):_vm._e(),_vm._v(\" \"),_vm._l((_vm.pulseGraphLlistr),function(pulseGraph,index){return (!_vm.cutView && pulseGraph.id === _vm.caseId)?_c('div',{key:index},[_c('pulse-graph',{attrs:{\"caseId\":pulseGraph.id}})],1):_vm._e()})],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-08267523\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/home/HomePage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-08267523\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./HomePage.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./HomePage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./HomePage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-08267523\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./HomePage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-08267523\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/home/HomePage.vue\n// module id = null\n// module chunks = ","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/encode.js\n// module id = xaZU\n// module chunks = 1 2","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EventEmitter = require('component-emitter2');\nvar C = require('../constants/constants');\nvar ResubscribeNotifier = require('../utils/resubscribe-notifier');\n\nfunction validateArguments(userId, callback, defaultAction) {\n  if (typeof userId === 'function' && callback === undefined) {\n    callback = userId; // eslint-disable-line\n    userId = defaultAction; // eslint-disable-line\n  } else {\n    userId = [userId]; // eslint-disable-line\n  }\n\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new Error('invalid argument callback');\n  }\n\n  return { userId: userId, callback: callback };\n}\n\n/**\n * The main class for presence in deepstream\n *\n * Provides the presence interface and handles incoming messages\n * on the presence topic\n *\n * @param {Object} options deepstream configuration options\n * @param {Connection} connection\n * @param {Client} client\n *\n * @constructor\n * @public\n */\nmodule.exports = function () {\n  function PresenceHandler(options, connection, client) {\n    _classCallCheck(this, PresenceHandler);\n\n    this._options = options;\n    this._connection = connection;\n    this._client = client;\n    this._queryEmitter = new EventEmitter();\n    this._subscribeEmitter = new EventEmitter();\n    this._ackTimeoutRegistry = client._$getAckTimeoutRegistry();\n    this._resubscribeNotifier = new ResubscribeNotifier(this._client, this._resubscribe.bind(this));\n    this._counter = 1;\n\n    this._flush = this._flush.bind(this);\n    this._flushTimeout = null;\n    this._pendingSubscribes = {};\n    this._pendingUnsubscribes = {};\n  }\n  /**\n   * Queries for clients logged into deepstream.\n   *\n   * @param   {Function} callback Will be invoked with an array of clients\n   *\n   * @public\n   * @returns {void}\n   */\n\n\n  _createClass(PresenceHandler, [{\n    key: 'getAll',\n    value: function getAll(users, callback) {\n      if (typeof users === 'function') {\n        this._connection.sendMsg(C.TOPIC.PRESENCE, C.ACTIONS.QUERY, [C.ACTIONS.QUERY]);\n        this._queryEmitter.once(C.ACTIONS.QUERY, users);\n      } else {\n        var queryId = this._counter++;\n        this._connection.sendMsg(C.TOPIC.PRESENCE, C.ACTIONS.QUERY, [queryId, users]);\n        this._queryEmitter.once(queryId, callback);\n      }\n    }\n\n    /**\n     * Subscribes to client logins or logouts in deepstream\n     *\n     * @param   {Function} callback Will be invoked with the username of a client,\n     *                              and a boolean to indicate if it was a login or\n     *                              logout event\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'subscribe',\n    value: function subscribe(userId, callback) {\n      var args = validateArguments(userId, callback, C.ACTIONS.SUBSCRIBE);\n      if (!this._subscribeEmitter.hasListeners(args.userId)) {\n        if (args.userId === C.ACTIONS.SUBSCRIBE) {\n          this._sendGlobalSubscription(C.ACTIONS.SUBSCRIBE);\n          this._subscribeEmitter.on(C.ACTIONS.SUBSCRIBE, args.callback);\n        } else {\n          delete this._pendingUnsubscribes[args.userId];\n          this._pendingSubscribes[args.userId] = true;\n          if (!this._flushTimeout) {\n            this._flushTimeout = setTimeout(this._flush, 0);\n          }\n          this._subscribeEmitter.on(args.userId, args.callback);\n        }\n      }\n    }\n\n    /**\n     * Removes a callback for a specified presence event\n     *\n     * @param   {Function} callback The callback to unregister via {PresenceHandler#unsubscribe}\n     *\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(userId, callback) {\n      var args = validateArguments(userId, callback, C.ACTIONS.UNSUBSCRIBE);\n\n      if (args.userId === C.ACTIONS.UNSUBSCRIBE) {\n        this._subscribeEmitter.off(C.ACTIONS.SUBSCRIBE, args.callback);\n      } else {\n        this._subscribeEmitter.off(args.userId, args.callback);\n      }\n\n      if (!this._subscribeEmitter.hasListeners(args.userId)) {\n        if (args.userId === C.ACTIONS.UNSUBSCRIBE) {\n          this._sendGlobalSubscription(C.ACTIONS.UNSUBSCRIBE);\n        } else {\n          delete this._pendingSubscribes[args.userId];\n          this._pendingUnsubscribes[args.userId] = true;\n          if (!this._flushTimeout) {\n            this._flushTimeout = setTimeout(this._flush, 0);\n          }\n        }\n      }\n    }\n\n    /**\n     * Handles incoming messages from the server\n     *\n     * @param   {Object} message parsed deepstream message\n     *\n     * @package private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_$handle',\n    value: function _$handle(message) {\n      if (message.action === C.ACTIONS.ERROR && message.data[0] === C.EVENT.MESSAGE_DENIED) {\n        this._ackTimeoutRegistry.remove(C.TOPIC.PRESENCE, message.data[1]);\n        message.processedError = true;\n        this._client._$onError(C.TOPIC.PRESENCE, C.EVENT.MESSAGE_DENIED, message.data[1]);\n      } else if (message.action === C.ACTIONS.ACK) {\n        this._ackTimeoutRegistry.clear(message);\n      } else if (message.action === C.ACTIONS.PRESENCE_JOIN) {\n        this._subscribeEmitter.emit(C.ACTIONS.SUBSCRIBE, message.data[0], true);\n        this._subscribeEmitter.emit(message.data[0], true, message.data[0]);\n      } else if (message.action === C.ACTIONS.PRESENCE_LEAVE) {\n        this._subscribeEmitter.emit(C.ACTIONS.SUBSCRIBE, message.data[0], false);\n        this._subscribeEmitter.emit(message.data[0], false, message.data[0]);\n      } else if (message.action === C.ACTIONS.QUERY) {\n        try {\n          var data = JSON.parse(message.data[1]);\n          if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n            this._queryEmitter.emit(message.data[0], data);\n            return;\n          }\n        } catch (e) {\n          // not json, old event\n        }\n        this._queryEmitter.emit(C.ACTIONS.QUERY, message.data);\n      } else {\n        this._client._$onError(C.TOPIC.PRESENCE, C.EVENT.UNSOLICITED_MESSAGE, message.action);\n      }\n    }\n\n    /**\n     * Resubscribes to presence subscription when connection is lost\n     *\n     * @package private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_resubscribe',\n    value: function _resubscribe() {\n      var callbacks = Object.keys(this._subscribeEmitter._callbacks || {});\n      if (callbacks.indexOf(C.ACTIONS.SUBSCRIBE) > -1) {\n        callbacks.splice(callbacks.indexOf(C.ACTIONS.SUBSCRIBE), 1);\n        this._sendGlobalSubscription(C.ACTIONS.SUBSCRIBE);\n      }\n      if (callbacks.length > 0) {\n        this._sendSubscriptionBulk(C.ACTIONS.SUBSCRIBE, callbacks);\n      }\n    }\n  }, {\n    key: '_flush',\n    value: function _flush() {\n      var pendingSubscribes = Object.keys(this._pendingSubscribes);\n      if (pendingSubscribes.length > 0) {\n        this._sendSubscriptionBulk(C.ACTIONS.SUBSCRIBE, pendingSubscribes);\n        this._pendingSubscribes = {};\n      }\n      var pendingUnsubscribes = Object.keys(this._pendingUnsubscribes);\n      if (pendingUnsubscribes.length > 0) {\n        this._sendSubscriptionBulk(C.ACTIONS.UNSUBSCRIBE, pendingUnsubscribes);\n        this._pendingUnsubscribes = {};\n      }\n      this._flushTimeout = null;\n    }\n  }, {\n    key: '_sendSubscriptionBulk',\n    value: function _sendSubscriptionBulk(action, names) {\n      var correlationId = this._counter++;\n      this._ackTimeoutRegistry.add({\n        topic: C.TOPIC.PRESENCE,\n        action: action,\n        name: correlationId\n      });\n      this._connection.sendMsg(C.TOPIC.PRESENCE, action, [correlationId, names]);\n    }\n  }, {\n    key: '_sendGlobalSubscription',\n    value: function _sendGlobalSubscription(action) {\n      this._ackTimeoutRegistry.add({\n        topic: C.TOPIC.PRESENCE,\n        action: action,\n        name: action\n      });\n      this._connection.sendMsg(C.TOPIC.PRESENCE, action, [action]);\n    }\n  }]);\n\n  return PresenceHandler;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/presence/presence-handler.js\n// module id = xxnB\n// module chunks = 1 2","'use strict';\n/* eslint-disable prefer-rest-params */\n\nvar EventEmitter = require('component-emitter2');\nvar Record = require('./record');\nvar C = require('../constants/constants');\n\nvar ENTRY_ADDED_EVENT = 'entry-added';\nvar ENTRY_REMOVED_EVENT = 'entry-removed';\nvar ENTRY_MOVED_EVENT = 'entry-moved';\n\n/**\n * A List is a specialised Record that contains\n * an Array of recordNames and provides a number\n * of convinience methods for interacting with them.\n *\n * @param {RecordHanlder} recordHandler\n * @param {String} name    The name of the list\n *\n * @constructor\n */\nvar List = function List(recordHandler, name, options) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new Error('invalid argument name');\n  }\n\n  this._recordHandler = recordHandler;\n  this._record = this._recordHandler.getRecord(name, options);\n  this._record._applyUpdate = this._applyUpdate.bind(this);\n\n  this._record.on('delete', this.emit.bind(this, 'delete'));\n  this._record.on('discard', this._onDiscard.bind(this));\n  this._record.on('ready', this._onReady.bind(this));\n\n  this.isDestroyed = this._record.isDestroyed;\n  this.isReady = this._record.isReady;\n  this.name = name;\n  this._queuedMethods = [];\n  this._beforeStructure = null;\n  this._hasAddListener = null;\n  this._hasRemoveListener = null;\n  this._hasMoveListener = null;\n\n  this.delete = this._record.delete.bind(this._record);\n  this.discard = this._record.discard.bind(this._record);\n  this.whenReady = this._record.whenReady.bind(this);\n};\n\nEventEmitter(List.prototype); // eslint-disable-line\n\n/**\n * Returns the array of list entries or an\n * empty array if the list hasn't been populated yet.\n *\n * @public\n * @returns {Array} entries\n */\nList.prototype.getEntries = function () {\n  var entries = this._record.get();\n\n  if (!(entries instanceof Array)) {\n    return [];\n  }\n\n  return entries;\n};\n\n/**\n * Returns true if the list is empty\n *\n * @public\n * @returns {Boolean} isEmpty\n */\nList.prototype.isEmpty = function () {\n  return this.getEntries().length === 0;\n};\n\n/**\n * Updates the list with a new set of entries\n *\n * @public\n * @param {Array} entries\n */\nList.prototype.setEntries = function (entries) {\n  var errorMsg = 'entries must be an array of record names';\n  var i = void 0;\n\n  if (!(entries instanceof Array)) {\n    throw new Error(errorMsg);\n  }\n\n  for (i = 0; i < entries.length; i++) {\n    if (typeof entries[i] !== 'string') {\n      throw new Error(errorMsg);\n    }\n  }\n\n  if (this._record.isReady === false) {\n    this._queuedMethods.push(this.setEntries.bind(this, entries));\n  } else {\n    this._beforeChange();\n    this._record.set(entries);\n    this._afterChange();\n  }\n};\n\n/**\n * Removes an entry from the list\n *\n * @param {String} entry\n * @param {Number} [index]\n *\n * @public\n * @returns {void}\n */\nList.prototype.removeEntry = function (entry, index) {\n  if (this._record.isReady === false) {\n    this._queuedMethods.push(this.removeEntry.bind(this, entry, index));\n    return;\n  }\n\n  var currentEntries = this._record.get();\n  var hasIndex = this._hasIndex(index);\n  var entries = [];\n  var i = void 0;\n\n  for (i = 0; i < currentEntries.length; i++) {\n    if (currentEntries[i] !== entry || hasIndex && index !== i) {\n      entries.push(currentEntries[i]);\n    }\n  }\n  this._beforeChange();\n  this._record.set(entries);\n  this._afterChange();\n};\n\n/**\n * Adds an entry to the list\n *\n * @param {String} entry\n * @param {Number} [index]\n *\n * @public\n * @returns {void}\n */\nList.prototype.addEntry = function (entry, index) {\n  if (typeof entry !== 'string') {\n    throw new Error('Entry must be a recordName');\n  }\n\n  if (this._record.isReady === false) {\n    this._queuedMethods.push(this.addEntry.bind(this, entry, index));\n    return;\n  }\n\n  var hasIndex = this._hasIndex(index);\n  var entries = this.getEntries();\n  if (hasIndex) {\n    entries.splice(index, 0, entry);\n  } else {\n    entries.push(entry);\n  }\n  this._beforeChange();\n  this._record.set(entries);\n  this._afterChange();\n};\n\n/**\n * Proxies the underlying Record's subscribe method. Makes sure\n * that no path is provided\n *\n * @public\n * @returns {void}\n */\nList.prototype.subscribe = function () {\n  var parameters = Record.prototype._normalizeArguments(arguments);\n\n  if (parameters.path) {\n    throw new Error('path is not supported for List.subscribe');\n  }\n\n  // Make sure the callback is invoked with an empty array for new records\n  var listCallback = function (callback) {\n    callback(this.getEntries());\n  }.bind(this, parameters.callback);\n\n  /**\n  * Adding a property onto a function directly is terrible practice,\n  * and we will change this as soon as we have a more seperate approach\n  * of creating lists that doesn't have records default state.\n  *\n  * The reason we are holding a referencing to wrapped array is so that\n  * on unsubscribe it can provide a reference to the actual method the\n  * record is subscribed too.\n  **/\n  parameters.callback.wrappedCallback = listCallback;\n  parameters.callback = listCallback;\n\n  this._record.subscribe(parameters);\n};\n\n/**\n * Proxies the underlying Record's unsubscribe method. Makes sure\n * that no path is provided\n *\n * @public\n * @returns {void}\n */\nList.prototype.unsubscribe = function () {\n  var parameters = Record.prototype._normalizeArguments(arguments);\n\n  if (parameters.path) {\n    throw new Error('path is not supported for List.unsubscribe');\n  }\n\n  parameters.callback = parameters.callback.wrappedCallback;\n  this._record.unsubscribe(parameters);\n};\n\n/**\n * Listens for changes in the Record's ready state\n * and applies them to this list\n *\n * @private\n * @returns {void}\n */\nList.prototype._onReady = function () {\n  this.isReady = true;\n\n  for (var i = 0; i < this._queuedMethods.length; i++) {\n    this._queuedMethods[i]();\n  }\n\n  this._queuedMethods = [];\n  this.emit('ready');\n};\n\n/**\n * Listens for the record discard event and applies\n * changes to list\n *\n * @private\n * @returns {void}\n */\nList.prototype._onDiscard = function () {\n  this.isDestroyed = true;\n  this.emit('discard');\n};\n\n/**\n * Proxies the underlying Record's _update method. Set's\n * data to an empty array if no data is provided.\n *\n * @param   {null}   path must (should :-)) be null\n * @param   {Array}  data\n *\n * @private\n * @returns {void}\n */\nList.prototype._applyUpdate = function (message) {\n  if (message.action === C.ACTIONS.PATCH) {\n    throw new Error('PATCH is not supported for Lists');\n  }\n\n  if (message.data[2].charAt(0) !== '[') {\n    message.data[2] = '[]';\n  }\n\n  this._beforeChange();\n  Record.prototype._applyUpdate.call(this._record, message);\n  this._afterChange();\n};\n\n/**\n * Validates that the index provided is within the current set of entries.\n *\n * @param {Number} index\n *\n * @private\n * @returns {Number}\n */\nList.prototype._hasIndex = function (index) {\n  var hasIndex = false;\n  var entries = this.getEntries();\n  if (index !== undefined) {\n    if (isNaN(index)) {\n      throw new Error('Index must be a number');\n    }\n    if (index !== entries.length && (index >= entries.length || index < 0)) {\n      throw new Error('Index must be within current entries');\n    }\n    hasIndex = true;\n  }\n  return hasIndex;\n};\n\n/**\n * Establishes the current structure of the list, provided the client has attached any\n * add / move / remove listener\n *\n * This will be called before any change to the list, regardsless if the change was triggered\n * by an incoming message from the server or by the client\n *\n * @private\n * @returns {void}\n */\nList.prototype._beforeChange = function () {\n  this._hasAddListener = this.listeners(ENTRY_ADDED_EVENT).length > 0;\n  this._hasRemoveListener = this.listeners(ENTRY_REMOVED_EVENT).length > 0;\n  this._hasMoveListener = this.listeners(ENTRY_MOVED_EVENT).length > 0;\n\n  if (this._hasAddListener || this._hasRemoveListener || this._hasMoveListener) {\n    this._beforeStructure = this._getStructure();\n  } else {\n    this._beforeStructure = null;\n  }\n};\n\n/**\n * Compares the structure of the list after a change to its previous structure and notifies\n * any add / move / remove listener. Won't do anything if no listeners are attached.\n *\n * @private\n * @returns {void}\n */\nList.prototype._afterChange = function () {\n  if (this._beforeStructure === null) {\n    return;\n  }\n\n  var after = this._getStructure();\n  var before = this._beforeStructure;\n  var entry = void 0;\n  var i = void 0;\n\n  if (this._hasRemoveListener) {\n    for (entry in before) {\n      for (i = 0; i < before[entry].length; i++) {\n        if (after[entry] === undefined || after[entry][i] === undefined) {\n          this.emit(ENTRY_REMOVED_EVENT, entry, before[entry][i]);\n        }\n      }\n    }\n  }\n\n  if (this._hasAddListener || this._hasMoveListener) {\n    for (entry in after) {\n      if (before[entry] === undefined) {\n        for (i = 0; i < after[entry].length; i++) {\n          this.emit(ENTRY_ADDED_EVENT, entry, after[entry][i]);\n        }\n      } else {\n        for (i = 0; i < after[entry].length; i++) {\n          if (before[entry][i] !== after[entry][i]) {\n            if (before[entry][i] === undefined) {\n              this.emit(ENTRY_ADDED_EVENT, entry, after[entry][i]);\n            } else {\n              this.emit(ENTRY_MOVED_EVENT, entry, after[entry][i]);\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\n/**\n * Iterates through the list and creates a map with the entry as a key\n * and an array of its position(s) within the list as a value, e.g.\n *\n * {\n *   'recordA': [ 0, 3 ],\n *   'recordB': [ 1 ],\n *   'recordC': [ 2 ]\n * }\n *\n * @private\n * @returns {Array} structure\n */\nList.prototype._getStructure = function () {\n  var structure = {};\n  var i = void 0;\n  var entries = this._record.get();\n\n  for (i = 0; i < entries.length; i++) {\n    if (structure[entries[i]] === undefined) {\n      structure[entries[i]] = [i];\n    } else {\n      structure[entries[i]].push(i);\n    }\n  }\n\n  return structure;\n};\n\nmodule.exports = List;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/record/list.js\n// module id = ybXf\n// module chunks = 1 2","'use strict';\n/* eslint-disable valid-typeof */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar C = require('../constants/constants');\n\n/**\n * A regular expression that matches whitespace on either side, but\n * not in the center of a string\n *\n * @type {RegExp}\n */\nvar TRIM_REGULAR_EXPRESSION = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n/**\n * Used in typeof comparisons\n *\n * @type {String}\n */\nvar OBJECT = 'object';\n\n/**\n * True if environment is node, false if it's a browser\n * This seems somewhat inelegant, if anyone knows a better solution,\n * let's change this (must identify browserify's pseudo node implementation though)\n *\n * @public\n * @type {Boolean}\n */\nexports.isNode = typeof process !== 'undefined' && process.toString() === '[object process]';\n\n/**\n * Provides as soon as possible async execution in a cross\n * platform way\n *\n * @param   {Function} fn the function to be executed in an asynchronous fashion\n *\n * @public\n * @returns {void}\n */\nexports.nextTick = function (fn) {\n  if (exports.isNode) {\n    process.nextTick(fn);\n  } else {\n    setTimeout(fn, 0);\n  }\n};\n\n/**\n * Removes whitespace from the beginning and end of a string\n *\n * @param   {String} inputString\n *\n * @public\n * @returns {String} trimmedString\n */\nexports.trim = function (inputString) {\n  if (inputString.trim) {\n    return inputString.trim();\n  }\n  return inputString.replace(TRIM_REGULAR_EXPRESSION, '');\n};\n\n/**\n * Compares two objects for deep (recoursive) equality\n *\n * This used to be a significantly more complex custom implementation,\n * but JSON.stringify has gotten so fast that it now outperforms the custom\n * way by a factor of 1.5 to 3.\n *\n * In IE11 / Edge the custom implementation is still slightly faster, but for\n * consistencies sake and the upsides of leaving edge-case handling to the native\n * browser / node implementation we'll go for JSON.stringify from here on.\n *\n * Please find performance test results here\n *\n * http://jsperf.com/deep-equals-code-vs-json\n *\n * @param   {Mixed} objA\n * @param   {Mixed} objB\n *\n * @public\n * @returns {Boolean} isEqual\n */\nexports.deepEquals = function (objA, objB) {\n  if (objA === objB) {\n    return true;\n  } else if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== OBJECT || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== OBJECT) {\n    return false;\n  }\n\n  return JSON.stringify(objA) === JSON.stringify(objB);\n};\n\n/**\n * Similar to deepEquals above, tests have shown that JSON stringify outperforms any attempt of\n * a code based implementation by 50% - 100% whilst also handling edge-cases and keeping\n * implementation complexity low.\n *\n * If ES6/7 ever decides to implement deep copying natively (what happened to Object.clone?\n * that was briefly a thing...), let's switch it for the native implementation. For now though,\n * even Object.assign({}, obj) only provides a shallow copy.\n *\n * Please find performance test results backing these statements here:\n *\n * http://jsperf.com/object-deep-copy-assign\n *\n * @param   {Mixed} obj the object that should be cloned\n *\n * @public\n * @returns {Mixed} clone\n */\nexports.deepCopy = function (obj) {\n  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === OBJECT) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  return obj;\n};\n\n/**\n * Copy the top level of items, but do not copy its items recourisvely. This\n * is much quicker than deepCopy does not guarantee the object items are new/unique.\n * Mainly used to change the reference to the actual object itself, but not its children.\n *\n * @param   {Mixed} obj the object that should cloned\n *\n * @public\n * @returns {Mixed} clone\n */\nexports.shallowCopy = function (obj) {\n  if (Array.isArray(obj)) {\n    return obj.slice(0);\n  } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === OBJECT) {\n    var copy = Object.create(null);\n    var props = Object.keys(obj);\n    for (var i = 0; i < props.length; i++) {\n      copy[props[i]] = obj[props[i]];\n    }\n    return copy;\n  }\n  return obj;\n};\n\n/**\n * Set timeout utility that adds support for disabling a timeout\n * by passing null\n *\n * @param {Function} callback        the function that will be called after the given time\n * @param {Number}   timeoutDuration the duration of the timeout in milliseconds\n *\n * @public\n * @returns {Number} timeoutId\n */\nexports.setTimeout = function (callback, timeoutDuration) {\n  if (timeoutDuration !== null) {\n    return setTimeout(callback, timeoutDuration);\n  }\n  return -1;\n};\n\n/**\n * Set Interval utility that adds support for disabling an interval\n * by passing null\n *\n * @param {Function} callback        the function that will be called after the given time\n * @param {Number}   intervalDuration the duration of the interval in milliseconds\n *\n * @public\n * @returns {Number} intervalId\n */\nexports.setInterval = function (callback, intervalDuration) {\n  if (intervalDuration !== null) {\n    return setInterval(callback, intervalDuration);\n  }\n  return -1;\n};\n\n/**\n * This method is used to break up long running operations and run a callback function immediately\n * after the browser has completed other operations such as events and display updates.\n *\n * @param {Function} callback        the function that will be called after the given time\n * @param {...*}     param1, ..., paramN additional parameters which are passed through to the\n *                                     callback\n *\n * @public\n */\nexports.requestIdleCallback = !exports.isNode && window.requestIdleCallback && window.requestIdleCallback.bind(window) || function (cb) {\n  var start = Date.now();\n  return setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\n\nexports.cancelIdleCallback = !exports.isNode && window.cancelIdleCallback && window.cancelIdleCallback.bind(window) || function (id) {\n  clearTimeout(id);\n};\n\n/**\n * Used to see if a protocol is specified within the url\n * @type {RegExp}\n */\nvar hasUrlProtocol = /^wss:|^ws:|^\\/\\//;\n\n/**\n * Used to see if the protocol contains any unsupported protocols\n * @type {RegExp}\n */\nvar unsupportedProtocol = /^http:|^https:/;\n\nvar URL = require('url');\n\n/**\n * Take the url passed when creating the client and ensure the correct\n * protocol is provided\n * @param  {String} url Url passed in by client\n * @return {String} Url with supported protocol\n */\nexports.parseUrl = function (initialURl, defaultPath) {\n  var url = initialURl;\n  if (unsupportedProtocol.test(url)) {\n    throw new Error('Only ws and wss are supported');\n  }\n  if (!hasUrlProtocol.test(url)) {\n    url = 'ws://' + url;\n  } else if (url.indexOf('//') === 0) {\n    url = 'ws:' + url;\n  }\n  var serverUrl = URL.parse(url);\n  if (!serverUrl.host) {\n    throw new Error('invalid url, missing host');\n  }\n  serverUrl.protocol = serverUrl.protocol ? serverUrl.protocol : 'ws:';\n  serverUrl.pathname = serverUrl.pathname ? serverUrl.pathname : defaultPath;\n  return URL.format(serverUrl);\n};\n\n/**\n * Returns true is the connection state is OPEN\n * @return {Boolean}\n */\nexports.isConnected = function (client) {\n  var connectionState = client.getConnectionState();\n  return connectionState === C.CONNECTION_STATE.OPEN;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepstream.io-client-js/dist/lib/utils/utils.js\n// module id = yxEg\n// module chunks = 1 2"],"sourceRoot":""}